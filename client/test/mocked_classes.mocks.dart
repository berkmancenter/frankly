// Mocks generated by Mockito 5.4.4 from annotations
// in client/test/mocked_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i37;
import 'dart:convert' as _i120;
import 'dart:typed_data' as _i89;
import 'dart:ui' as _i41;

import 'package:agora_rtc_engine/agora_rtc_engine.dart' as _i10;
import 'package:client/core/data/services/clock_service.dart' as _i67;
import 'package:client/core/data/services/firestore_database.dart' as _i91;
import 'package:client/core/data/services/logging_service.dart' as _i100;
import 'package:client/core/data/services/media_helper_service.dart' as _i83;
import 'package:client/core/data/services/responsive_layout_service.dart'
    as _i116;
import 'package:client/core/data/services/shared_preferences_service.dart'
    as _i117;
import 'package:client/core/utils/dialogs.dart' as _i66;
import 'package:client/core/utils/extensions.dart' as _i32;
import 'package:client/core/utils/firestore_utils.dart' as _i38;
import 'package:client/core/utils/toast_utils.dart' as _i65;
import 'package:client/core/widgets/navbar/nav_bar/nav_bar_contract.dart'
    as _i103;
import 'package:client/core/widgets/navbar/nav_bar_provider.dart' as _i27;
import 'package:client/features/admin/data/services/cloud_functions_payments_service.dart'
    as _i68;
import 'package:client/features/admin/data/services/firestore_agreements_service.dart'
    as _i90;
import 'package:client/features/admin/presentation/views/overview_contract.dart'
    as _i105;
import 'package:client/features/admin/utils/payment_utils.dart' as _i106;
import 'package:client/features/announcements/data/services/cloud_functions_announcements_service.dart'
    as _i72;
import 'package:client/features/community/data/providers/community_permissions_provider.dart'
    as _i29;
import 'package:client/features/community/data/providers/community_provider.dart'
    as _i23;
import 'package:client/features/community/data/providers/user_admin_details_builder.dart'
    as _i119;
import 'package:client/features/community/data/services/cloud_functions_community_service.dart'
    as _i69;
import 'package:client/features/discussion_threads/data/services/discussion_threads_helper.dart'
    as _i82;
import 'package:client/features/discussion_threads/data/services/firestore_discussion_thread_comments_service.dart'
    as _i94;
import 'package:client/features/discussion_threads/data/services/firestore_discussion_threads_service.dart'
    as _i95;
import 'package:client/features/discussion_threads/data/services/models_helper.dart'
    as _i88;
import 'package:client/features/discussion_threads/presentation/views/discussion_thread_contract.dart'
    as _i81;
import 'package:client/features/discussion_threads/presentation/views/discussion_threads_contract.dart'
    as _i84;
import 'package:client/features/discussion_threads/presentation/views/manipulate_discussion_thread_contract.dart'
    as _i101;
import 'package:client/features/events/data/services/cloud_functions_event_service.dart'
    as _i70;
import 'package:client/features/events/data/services/firestore_event_service.dart'
    as _i92;
import 'package:client/features/events/features/edit_event/data/models/edit_event_model.dart'
    as _i86;
import 'package:client/features/events/features/edit_event/presentation/edit_event_presenter.dart'
    as _i85;
import 'package:client/features/events/features/edit_event/presentation/views/edit_event_contract.dart'
    as _i87;
import 'package:client/features/events/features/event_page/data/models/event_settings_model.dart'
    as _i79;
import 'package:client/features/events/features/event_page/data/models/pre_post_card_widget_model.dart'
    as _i107;
import 'package:client/features/events/features/event_page/data/models/pre_post_event_dialog_model.dart'
    as _i112;
import 'package:client/features/events/features/event_page/data/providers/event_page_provider.dart'
    as _i28;
import 'package:client/features/events/features/event_page/data/providers/event_permissions_provider.dart'
    as _i76;
import 'package:client/features/events/features/event_page/data/providers/event_provider.dart'
    as _i11;
import 'package:client/features/events/features/event_page/presentation/event_settings_presenter.dart'
    as _i78;
import 'package:client/features/events/features/event_page/presentation/pre_post_card_widget_presenter.dart'
    as _i109;
import 'package:client/features/events/features/event_page/presentation/pre_post_event_dialog_presenter.dart'
    as _i113;
import 'package:client/features/events/features/event_page/presentation/views/event_settings_contract.dart'
    as _i80;
import 'package:client/features/events/features/event_page/presentation/views/pre_post_card_widget_contract.dart'
    as _i111;
import 'package:client/features/events/features/event_page/presentation/views/pre_post_card_widget_page.dart'
    as _i108;
import 'package:client/features/events/features/event_page/presentation/views/pre_post_event_dialog_contract.dart'
    as _i114;
import 'package:client/features/events/features/event_page/presentation/views/survey_dialog.dart'
    as _i93;
import 'package:client/features/events/features/live_meeting/data/providers/live_meeting_provider.dart'
    as _i12;
import 'package:client/features/events/features/live_meeting/data/services/cloud_functions_live_meeting_service.dart'
    as _i71;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_image_data.dart'
    as _i5;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_image_model.dart'
    as _i56;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_model.dart'
    as _i54;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_poll_data.dart'
    as _i6;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_poll_model.dart'
    as _i59;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_text_data.dart'
    as _i3;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_user_suggestions_data.dart'
    as _i8;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_video_data.dart'
    as _i4;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_video_model.dart'
    as _i62;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/models/agenda_item_word_cloud_data.dart'
    as _i7;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/data/providers/meeting_agenda_provider.dart'
    as _i9;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/agenda_item_image_presenter.dart'
    as _i55;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/agenda_item_poll_presenter.dart'
    as _i58;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/agenda_item_presenter.dart'
    as _i53;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/agenda_item_video_presenter.dart'
    as _i61;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/views/agenda_item_contract.dart'
    as _i64;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/views/agenda_item_image_contract.dart'
    as _i57;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/views/agenda_item_poll_contract.dart'
    as _i60;
import 'package:client/features/events/features/live_meeting/features/meeting_agenda/presentation/views/agenda_item_video_contract.dart'
    as _i63;
import 'package:client/features/events/features/live_meeting/features/meeting_guide/data/providers/meeting_guide_card_store.dart'
    as _i25;
import 'package:client/features/events/features/live_meeting/features/meeting_guide/data/services/firestore_meeting_guide_service.dart'
    as _i96;
import 'package:client/features/events/features/live_meeting/features/meeting_guide/presentation/views/meeting_guide_card_item_user_suggestions_contract.dart'
    as _i102;
import 'package:client/features/events/features/live_meeting/features/video/data/providers/agora_room.dart'
    as _i26;
import 'package:client/features/events/features/live_meeting/features/video/data/providers/conference_room.dart'
    as _i13;
import 'package:client/features/events/features/live_meeting/features/video/presentation/views/networking_status_contract.dart'
    as _i104;
import 'package:client/features/templates/data/providers/template_page_provider.dart'
    as _i118;
import 'package:client/features/user/data/services/user_service.dart' as _i110;
import 'package:cloud_firestore/cloud_firestore.dart' as _i22;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i36;
import 'package:cloudinary_public/cloudinary_public.dart' as _i21;
import 'package:data_models/admin/partner_agreement.dart' as _i44;
import 'package:data_models/admin/plan_capability_list.dart' as _i18;
import 'package:data_models/chat/chat.dart' as _i74;
import 'package:data_models/cloud_functions/requests.dart' as _i17;
import 'package:data_models/community/community.dart' as _i24;
import 'package:data_models/community/community_tag.dart' as _i75;
import 'package:data_models/community/community_user_settings.dart' as _i51;
import 'package:data_models/community/member_details.dart' as _i77;
import 'package:data_models/community/membership.dart' as _i73;
import 'package:data_models/discussion_threads/discussion_thread.dart' as _i30;
import 'package:data_models/discussion_threads/discussion_thread_comment.dart'
    as _i31;
import 'package:data_models/events/event.dart' as _i2;
import 'package:data_models/events/event_proposal.dart' as _i99;
import 'package:data_models/events/live_meetings/live_meeting.dart' as _i19;
import 'package:data_models/events/live_meetings/meeting_guide.dart' as _i43;
import 'package:data_models/events/pre_post_card.dart' as _i45;
import 'package:data_models/events/pre_post_card_attribute.dart' as _i115;
import 'package:data_models/events/pre_post_url_params.dart' as _i46;
import 'package:data_models/resources/community_resource.dart' as _i98;
import 'package:data_models/templates/template.dart' as _i39;
import 'package:data_models/user/public_user_info.dart' as _i50;
import 'package:dio/dio.dart' as _i20;
import 'package:firebase_auth/firebase_auth.dart' as _i35;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i34;
import 'package:firebase_core/firebase_core.dart' as _i33;
import 'package:flutter/cupertino.dart' as _i15;
import 'package:flutter/foundation.dart' as _i16;
import 'package:flutter/gestures.dart' as _i42;
import 'package:flutter/material.dart' as _i48;
import 'package:flutter/rendering.dart' as _i47;
import 'package:flutter/scheduler.dart' as _i49;
import 'package:image_picker/image_picker.dart' as _i97;
import 'package:image_picker_platform_interface/image_picker_platform_interface.dart'
    as _i40;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i52;
import 'package:rxdart/rxdart.dart' as _i14;

import 'mock_function.dart' as _i121;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _Fake$AgendaItemCopyWith_0<$Res> extends _i1.SmartFake
    implements _i2.$AgendaItemCopyWith<$Res> {
  _Fake$AgendaItemCopyWith_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItem_1 extends _i1.SmartFake implements _i2.AgendaItem {
  _FakeAgendaItem_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemTextData_2 extends _i1.SmartFake
    implements _i3.AgendaItemTextData {
  _FakeAgendaItemTextData_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemVideoData_3 extends _i1.SmartFake
    implements _i4.AgendaItemVideoData {
  _FakeAgendaItemVideoData_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemImageData_4 extends _i1.SmartFake
    implements _i5.AgendaItemImageData {
  _FakeAgendaItemImageData_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemPollData_5 extends _i1.SmartFake
    implements _i6.AgendaItemPollData {
  _FakeAgendaItemPollData_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemWordCloudData_6 extends _i1.SmartFake
    implements _i7.AgendaItemWordCloudData {
  _FakeAgendaItemWordCloudData_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaItemUserSuggestionsData_7 extends _i1.SmartFake
    implements _i8.AgendaItemUserSuggestionsData {
  _FakeAgendaItemUserSuggestionsData_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaProviderParams_8 extends _i1.SmartFake
    implements _i9.AgendaProviderParams {
  _FakeAgendaProviderParams_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_9 extends _i1.SmartFake implements Duration {
  _FakeDuration_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRtcEngine_10 extends _i1.SmartFake implements _i10.RtcEngine {
  _FakeRtcEngine_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventProvider_11 extends _i1.SmartFake
    implements _i11.EventProvider {
  _FakeEventProvider_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLiveMeetingProvider_12 extends _i1.SmartFake
    implements _i12.LiveMeetingProvider {
  _FakeLiveMeetingProvider_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConferenceRoom_13 extends _i1.SmartFake
    implements _i13.ConferenceRoom {
  _FakeConferenceRoom_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubject_14<T> extends _i1.SmartFake
    implements _i14.BehaviorSubject<T> {
  _FakeBehaviorSubject_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_15 extends _i1.SmartFake implements _i15.Widget {
  _FakeWidget_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeInheritedWidget_16 extends _i1.SmartFake
    implements _i15.InheritedWidget {
  _FakeInheritedWidget_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_17 extends _i1.SmartFake
    implements _i15.DiagnosticsNode {
  _FakeDiagnosticsNode_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i16.TextTreeConfiguration? parentConfiguration,
    _i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeDateTime_18 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStripeBillingPortalLinkResponse_19 extends _i1.SmartFake
    implements _i17.GetStripeBillingPortalLinkResponse {
  _FakeGetStripeBillingPortalLinkResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStripeConnectedAccountLinkResponse_20 extends _i1.SmartFake
    implements _i17.GetStripeConnectedAccountLinkResponse {
  _FakeGetStripeConnectedAccountLinkResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStripeSubscriptionPlanInfoResponse_21 extends _i1.SmartFake
    implements _i17.GetStripeSubscriptionPlanInfoResponse {
  _FakeGetStripeSubscriptionPlanInfoResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateDonationCheckoutSessionResponse_22 extends _i1.SmartFake
    implements _i17.CreateDonationCheckoutSessionResponse {
  _FakeCreateDonationCheckoutSessionResponse_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateSubscriptionCheckoutSessionResponse_23 extends _i1.SmartFake
    implements _i17.CreateSubscriptionCheckoutSessionResponse {
  _FakeCreateSubscriptionCheckoutSessionResponse_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateCommunityResponse_24 extends _i1.SmartFake
    implements _i17.CreateCommunityResponse {
  _FakeCreateCommunityResponse_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlanCapabilityList_25 extends _i1.SmartFake
    implements _i18.PlanCapabilityList {
  _FakePlanCapabilityList_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMembersDataResponse_26 extends _i1.SmartFake
    implements _i17.GetMembersDataResponse {
  _FakeGetMembersDataResponse_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserAdminDetailsResponse_27 extends _i1.SmartFake
    implements _i17.GetUserAdminDetailsResponse {
  _FakeGetUserAdminDetailsResponse_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCommunityDonationsEnabledResponse_28 extends _i1.SmartFake
    implements _i17.GetCommunityDonationsEnabledResponse {
  _FakeGetCommunityDonationsEnabledResponse_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCommunityPrePostEnabledResponse_29 extends _i1.SmartFake
    implements _i17.GetCommunityPrePostEnabledResponse {
  _FakeGetCommunityPrePostEnabledResponse_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCommunityCalendarLinkResponse_30 extends _i1.SmartFake
    implements _i17.GetCommunityCalendarLinkResponse {
  _FakeGetCommunityCalendarLinkResponse_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMeetingJoinInfoResponse_31 extends _i1.SmartFake
    implements _i17.GetMeetingJoinInfoResponse {
  _FakeGetMeetingJoinInfoResponse_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMeetingChatsSuggestionsDataResponse_32 extends _i1.SmartFake
    implements _i17.GetMeetingChatsSuggestionsDataResponse {
  _FakeGetMeetingChatsSuggestionsDataResponse_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateLiveStreamResponse_33 extends _i1.SmartFake
    implements _i17.CreateLiveStreamResponse {
  _FakeCreateLiveStreamResponse_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBreakoutRoomAssignmentResponse_34 extends _i1.SmartFake
    implements _i17.GetBreakoutRoomAssignmentResponse {
  _FakeGetBreakoutRoomAssignmentResponse_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBreakoutRoom_35 extends _i1.SmartFake implements _i19.BreakoutRoom {
  _FakeBreakoutRoom_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserIdFromAgoraIdResponse_36 extends _i1.SmartFake
    implements _i17.GetUserIdFromAgoraIdResponse {
  _FakeGetUserIdFromAgoraIdResponse_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultipartFile_37 extends _i1.SmartFake
    implements _i20.MultipartFile {
  _FakeMultipartFile_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCloudinaryImage_38 extends _i1.SmartFake
    implements _i21.CloudinaryImage {
  _FakeCloudinaryImage_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCloudinaryResponse_39 extends _i1.SmartFake
    implements _i21.CloudinaryResponse {
  _FakeCloudinaryResponse_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_40 extends _i1.SmartFake
    implements _i22.FirebaseFirestore {
  _FakeFirebaseFirestore_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_41<T1 extends Object?> extends _i1.SmartFake
    implements _i22.DocumentReference<T1> {
  _FakeDocumentReference_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_42<T1 extends Object?> extends _i1.SmartFake
    implements _i22.CollectionReference<T1> {
  _FakeCollectionReference_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_43<T1 extends Object?> extends _i1.SmartFake
    implements _i22.Query<T1> {
  _FakeQuery_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_44<T1 extends Object?> extends _i1.SmartFake
    implements _i22.QuerySnapshot<T1> {
  _FakeQuerySnapshot_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAggregateQuery_45 extends _i1.SmartFake
    implements _i22.AggregateQuery {
  _FakeAggregateQuery_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityProvider_46 extends _i1.SmartFake
    implements _i23.CommunityProvider {
  _FakeCommunityProvider_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CommunitySettingsCopyWith_47<$Res> extends _i1.SmartFake
    implements _i24.$CommunitySettingsCopyWith<$Res> {
  _Fake$CommunitySettingsCopyWith_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgendaProvider_48 extends _i1.SmartFake
    implements _i9.AgendaProvider {
  _FakeAgendaProvider_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeetingGuideCardStore_49 extends _i1.SmartFake
    implements _i25.MeetingGuideCardStore {
  _FakeMeetingGuideCardStore_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAgoraRoom_50 extends _i1.SmartFake implements _i26.AgoraRoom {
  _FakeAgoraRoom_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$EventCopyWith_51<$Res> extends _i1.SmartFake
    implements _i2.$EventCopyWith<$Res> {
  _Fake$EventCopyWith_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavBarProvider_52 extends _i1.SmartFake
    implements _i27.NavBarProvider {
  _FakeNavBarProvider_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinEventResults_53 extends _i1.SmartFake
    implements _i28.JoinEventResults {
  _FakeJoinEventResults_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityPermissionsProvider_54 extends _i1.SmartFake
    implements _i29.CommunityPermissionsProvider {
  _FakeCommunityPermissionsProvider_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBreakoutRoomDefinition_55 extends _i1.SmartFake
    implements _i2.BreakoutRoomDefinition {
  _FakeBreakoutRoomDefinition_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_56 extends _i1.SmartFake implements _i2.Event {
  _FakeEvent_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$DiscussionThreadCopyWith_57<$Res> extends _i1.SmartFake
    implements _i30.$DiscussionThreadCopyWith<$Res> {
  _Fake$DiscussionThreadCopyWith_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$DiscussionThreadCommentCopyWith_58<$Res> extends _i1.SmartFake
    implements _i31.$DiscussionThreadCommentCopyWith<$Res> {
  _Fake$DiscussionThreadCommentCopyWith_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_59<T1 extends Object?> extends _i1.SmartFake
    implements _i22.DocumentSnapshot<T1> {
  _FakeDocumentSnapshot_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnapshotMetadata_60 extends _i1.SmartFake
    implements _i22.SnapshotMetadata {
  _FakeSnapshotMetadata_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$EmotionCopyWith_61<$Res> extends _i1.SmartFake
    implements _i32.$EmotionCopyWith<$Res> {
  _Fake$EmotionCopyWith_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_62 extends _i1.SmartFake implements _i33.FirebaseApp {
  _FakeFirebaseApp_62(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_63 extends _i1.SmartFake
    implements _i34.ActionCodeInfo {
  _FakeActionCodeInfo_63(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_64 extends _i1.SmartFake
    implements _i35.UserCredential {
  _FakeUserCredential_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_65 extends _i1.SmartFake
    implements _i35.ConfirmationResult {
  _FakeConfirmationResult_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_66 extends _i1.SmartFake implements _i36.Settings {
  _FakeSettings_66(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_67 extends _i1.SmartFake implements _i22.WriteBatch {
  _FakeWriteBatch_67(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_68 extends _i1.SmartFake
    implements _i22.LoadBundleTask {
  _FakeLoadBundleTask_68(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_69<T1> extends _i1.SmartFake implements _i37.Future<T1> {
  _FakeFuture_69(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubjectWrapper_70<T> extends _i1.SmartFake
    implements _i38.BehaviorSubjectWrapper<T> {
  _FakeBehaviorSubjectWrapper_70(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTemplate_71 extends _i1.SmartFake implements _i39.Template {
  _FakeTemplate_71(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_72 extends _i1.SmartFake
    implements _i40.LostDataResponse {
  _FakeLostDataResponse_72(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunity_73 extends _i1.SmartFake implements _i24.Community {
  _FakeCommunity_73(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunitySettings_74 extends _i1.SmartFake
    implements _i24.CommunitySettings {
  _FakeCommunitySettings_74(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventSettings_75 extends _i1.SmartFake implements _i2.EventSettings {
  _FakeEventSettings_75(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConferenceRoomNotifier_76 extends _i1.SmartFake
    implements _i12.ConferenceRoomNotifier {
  _FakeConferenceRoomNotifier_76(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_77 extends _i1.SmartFake implements _i41.Size {
  _FakeSize_77(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEdgeInsets_78 extends _i1.SmartFake implements _i15.EdgeInsets {
  _FakeEdgeInsets_78(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeviceGestureSettings_79 extends _i1.SmartFake
    implements _i42.DeviceGestureSettings {
  _FakeDeviceGestureSettings_79(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextScaler_80 extends _i1.SmartFake implements _i15.TextScaler {
  _FakeTextScaler_80(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaQueryData_81 extends _i1.SmartFake
    implements _i15.MediaQueryData {
  _FakeMediaQueryData_81(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStopwatch_82 extends _i1.SmartFake implements Stopwatch {
  _FakeStopwatch_82(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$MeetingUserSuggestionCopyWith_83<$Res> extends _i1.SmartFake
    implements _i43.$MeetingUserSuggestionCopyWith<$Res> {
  _Fake$MeetingUserSuggestionCopyWith_83(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PartnerAgreementCopyWith_84<$Res> extends _i1.SmartFake
    implements _i44.$PartnerAgreementCopyWith<$Res> {
  _Fake$PartnerAgreementCopyWith_84(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PrePostCardCopyWith_85<$Res> extends _i1.SmartFake
    implements _i45.$PrePostCardCopyWith<$Res> {
  _Fake$PrePostCardCopyWith_85(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrePostCard_86 extends _i1.SmartFake implements _i45.PrePostCard {
  _FakePrePostCard_86(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PrePostUrlParamsCopyWith_87<$Res> extends _i1.SmartFake
    implements _i46.$PrePostUrlParamsCopyWith<$Res> {
  _Fake$PrePostUrlParamsCopyWith_87(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRect_88 extends _i1.SmartFake implements _i41.Rect {
  _FakeRect_88(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBoxConstraints_89 extends _i1.SmartFake
    implements _i15.BoxConstraints {
  _FakeBoxConstraints_89(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOffset_90 extends _i1.SmartFake implements _i41.Offset {
  _FakeOffset_90(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOffsetLayer_91 extends _i1.SmartFake implements _i47.OffsetLayer {
  _FakeOffsetLayer_91(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMatrix4_92 extends _i1.SmartFake implements _i15.Matrix4 {
  _FakeMatrix4_92(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScaffold_93 extends _i1.SmartFake implements _i48.Scaffold {
  _FakeScaffold_93(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBuildContext_94 extends _i1.SmartFake implements _i15.BuildContext {
  _FakeBuildContext_94(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePersistentBottomSheetController_95 extends _i1.SmartFake
    implements _i48.PersistentBottomSheetController {
  _FakePersistentBottomSheetController_95(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTicker_96 extends _i1.SmartFake implements _i49.Ticker {
  _FakeTicker_96(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({bool? debugIncludeStack = false}) => super.toString();
}

class _FakeStreamSubscription_97<T1> extends _i1.SmartFake
    implements _i37.StreamSubscription<T1> {
  _FakeStreamSubscription_97(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$TemplateCopyWith_98<$Res> extends _i1.SmartFake
    implements _i39.$TemplateCopyWith<$Res> {
  _Fake$TemplateCopyWith_98(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_99 extends _i1.SmartFake implements _i35.FirebaseAuth {
  _FakeFirebaseAuth_99(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublicUserInfo_100 extends _i1.SmartFake
    implements _i50.PublicUserInfo {
  _FakePublicUserInfo_100(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityUserSettings_101 extends _i1.SmartFake
    implements _i51.CommunityUserSettings {
  _FakeCommunityUserSettings_101(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AgendaItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItem extends _i1.Mock implements _i2.AgendaItem {
  @override
  _i2.AgendaItemType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i2.AgendaItemType.text,
        returnValueForMissingStub: _i2.AgendaItemType.text,
      ) as _i2.AgendaItemType);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.AgendaItemVideoType get videoType => (super.noSuchMethod(
        Invocation.getter(#videoType),
        returnValue: _i2.AgendaItemVideoType.youtube,
        returnValueForMissingStub: _i2.AgendaItemVideoType.youtube,
      ) as _i2.AgendaItemVideoType);

  @override
  _i2.$AgendaItemCopyWith<_i2.AgendaItem> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$AgendaItemCopyWith_0<_i2.AgendaItem>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$AgendaItemCopyWith_0<_i2.AgendaItem>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$AgendaItemCopyWith<_i2.AgendaItem>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [AgendaItemHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemHelper extends _i1.Mock implements _i53.AgendaItemHelper {
  @override
  bool isBrandNew(_i54.AgendaItemModel? agendaItemModel) => (super.noSuchMethod(
        Invocation.method(
          #isBrandNew,
          [agendaItemModel],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool hasBeenEdited(_i54.AgendaItemModel? agendaItemModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasBeenEdited,
          [agendaItemModel],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialiseFields(_i54.AgendaItemModel? agendaItemModel) =>
      super.noSuchMethod(
        Invocation.method(
          #initialiseFields,
          [agendaItemModel],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isPlayingVideo(
    _i25.MeetingGuideCardStore? meetingGuideCardModel,
    _i9.AgendaProvider? agendaProvider,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isPlayingVideo,
          [
            meetingGuideCardModel,
            agendaProvider,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String? areRequiredFieldsInput(_i54.AgendaItemModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #areRequiredFieldsInput,
          [model],
        ),
        returnValueForMissingStub: null,
      ) as String?);
}

/// A class which mocks [AgendaItemImageHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemImageHelper extends _i1.Mock
    implements _i55.AgendaItemImageHelper {
  @override
  void updateParent(_i56.AgendaItemImageModel? agendaItemImageModel) =>
      super.noSuchMethod(
        Invocation.method(
          #updateParent,
          [agendaItemImageModel],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemImageView].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemImageView extends _i1.Mock
    implements _i57.AgendaItemImageView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemModel extends _i1.Mock implements _i54.AgendaItemModel {
  @override
  _i2.AgendaItem get agendaItem => (super.noSuchMethod(
        Invocation.getter(#agendaItem),
        returnValue: _FakeAgendaItem_1(
          this,
          Invocation.getter(#agendaItem),
        ),
        returnValueForMissingStub: _FakeAgendaItem_1(
          this,
          Invocation.getter(#agendaItem),
        ),
      ) as _i2.AgendaItem);

  @override
  set agendaItem(_i2.AgendaItem? _agendaItem) => super.noSuchMethod(
        Invocation.setter(
          #agendaItem,
          _agendaItem,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isEditMode => (super.noSuchMethod(
        Invocation.getter(#isEditMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isEditMode(bool? _isEditMode) => super.noSuchMethod(
        Invocation.setter(
          #isEditMode,
          _isEditMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get timeInSeconds => (super.noSuchMethod(
        Invocation.getter(#timeInSeconds),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set timeInSeconds(int? _timeInSeconds) => super.noSuchMethod(
        Invocation.setter(
          #timeInSeconds,
          _timeInSeconds,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AgendaItemTextData get agendaItemTextData => (super.noSuchMethod(
        Invocation.getter(#agendaItemTextData),
        returnValue: _FakeAgendaItemTextData_2(
          this,
          Invocation.getter(#agendaItemTextData),
        ),
        returnValueForMissingStub: _FakeAgendaItemTextData_2(
          this,
          Invocation.getter(#agendaItemTextData),
        ),
      ) as _i3.AgendaItemTextData);

  @override
  set agendaItemTextData(_i3.AgendaItemTextData? _agendaItemTextData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemTextData,
          _agendaItemTextData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.AgendaItemVideoData get agendaItemVideoData => (super.noSuchMethod(
        Invocation.getter(#agendaItemVideoData),
        returnValue: _FakeAgendaItemVideoData_3(
          this,
          Invocation.getter(#agendaItemVideoData),
        ),
        returnValueForMissingStub: _FakeAgendaItemVideoData_3(
          this,
          Invocation.getter(#agendaItemVideoData),
        ),
      ) as _i4.AgendaItemVideoData);

  @override
  set agendaItemVideoData(_i4.AgendaItemVideoData? _agendaItemVideoData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemVideoData,
          _agendaItemVideoData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.AgendaItemImageData get agendaItemImageData => (super.noSuchMethod(
        Invocation.getter(#agendaItemImageData),
        returnValue: _FakeAgendaItemImageData_4(
          this,
          Invocation.getter(#agendaItemImageData),
        ),
        returnValueForMissingStub: _FakeAgendaItemImageData_4(
          this,
          Invocation.getter(#agendaItemImageData),
        ),
      ) as _i5.AgendaItemImageData);

  @override
  set agendaItemImageData(_i5.AgendaItemImageData? _agendaItemImageData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemImageData,
          _agendaItemImageData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.AgendaItemPollData get agendaItemPollData => (super.noSuchMethod(
        Invocation.getter(#agendaItemPollData),
        returnValue: _FakeAgendaItemPollData_5(
          this,
          Invocation.getter(#agendaItemPollData),
        ),
        returnValueForMissingStub: _FakeAgendaItemPollData_5(
          this,
          Invocation.getter(#agendaItemPollData),
        ),
      ) as _i6.AgendaItemPollData);

  @override
  set agendaItemPollData(_i6.AgendaItemPollData? _agendaItemPollData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemPollData,
          _agendaItemPollData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.AgendaItemWordCloudData get agendaItemWordCloudData =>
      (super.noSuchMethod(
        Invocation.getter(#agendaItemWordCloudData),
        returnValue: _FakeAgendaItemWordCloudData_6(
          this,
          Invocation.getter(#agendaItemWordCloudData),
        ),
        returnValueForMissingStub: _FakeAgendaItemWordCloudData_6(
          this,
          Invocation.getter(#agendaItemWordCloudData),
        ),
      ) as _i7.AgendaItemWordCloudData);

  @override
  set agendaItemWordCloudData(
          _i7.AgendaItemWordCloudData? _agendaItemWordCloudData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemWordCloudData,
          _agendaItemWordCloudData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.AgendaItemUserSuggestionsData get agendaItemUserSuggestionsData =>
      (super.noSuchMethod(
        Invocation.getter(#agendaItemUserSuggestionsData),
        returnValue: _FakeAgendaItemUserSuggestionsData_7(
          this,
          Invocation.getter(#agendaItemUserSuggestionsData),
        ),
        returnValueForMissingStub: _FakeAgendaItemUserSuggestionsData_7(
          this,
          Invocation.getter(#agendaItemUserSuggestionsData),
        ),
      ) as _i8.AgendaItemUserSuggestionsData);

  @override
  set agendaItemUserSuggestionsData(
          _i8.AgendaItemUserSuggestionsData? _agendaItemUserSuggestionsData) =>
      super.noSuchMethod(
        Invocation.setter(
          #agendaItemUserSuggestionsData,
          _agendaItemUserSuggestionsData,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemPollHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemPollHelper extends _i1.Mock
    implements _i58.AgendaItemPollHelper {
  @override
  void updateParent(_i59.AgendaItemPollModel? agendaItemPollModel) =>
      super.noSuchMethod(
        Invocation.method(
          #updateParent,
          [agendaItemPollModel],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemPollView].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemPollView extends _i1.Mock
    implements _i60.AgendaItemPollView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemVideoHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemVideoHelper extends _i1.Mock
    implements _i61.AgendaItemVideoHelper {
  @override
  void updateParent(_i62.AgendaItemVideoModel? agendaItemVideoModel) =>
      super.noSuchMethod(
        Invocation.method(
          #updateParent,
          [agendaItemVideoModel],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemVideoView].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemVideoView extends _i1.Mock
    implements _i63.AgendaItemVideoView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaItemView].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaItemView extends _i1.Mock implements _i64.AgendaItemView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaProvider extends _i1.Mock implements _i9.AgendaProvider {
  @override
  Set<String> get collapsedAgendaItemIds => (super.noSuchMethod(
        Invocation.getter(#collapsedAgendaItemIds),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  set collapsedAgendaItemIds(Set<String>? _collapsedAgendaItemIds) =>
      super.noSuchMethod(
        Invocation.setter(
          #collapsedAgendaItemIds,
          _collapsedAgendaItemIds,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.AgendaItem> get agendaItems => (super.noSuchMethod(
        Invocation.getter(#agendaItems),
        returnValue: <_i2.AgendaItem>[],
        returnValueForMissingStub: <_i2.AgendaItem>[],
      ) as List<_i2.AgendaItem>);

  @override
  List<_i2.AgendaItem> get unsavedItems => (super.noSuchMethod(
        Invocation.getter(#unsavedItems),
        returnValue: <_i2.AgendaItem>[],
        returnValueForMissingStub: <_i2.AgendaItem>[],
      ) as List<_i2.AgendaItem>);

  @override
  _i9.AgendaProviderParams get params => (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue: _FakeAgendaProviderParams_8(
          this,
          Invocation.getter(#params),
        ),
        returnValueForMissingStub: _FakeAgendaProviderParams_8(
          this,
          Invocation.getter(#params),
        ),
      ) as _i9.AgendaProviderParams);

  @override
  bool get inLiveMeeting => (super.noSuchMethod(
        Invocation.getter(#inLiveMeeting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get liveMeetingPath => (super.noSuchMethod(
        Invocation.getter(#liveMeetingPath),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#liveMeetingPath),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#liveMeetingPath),
        ),
      ) as String);

  @override
  bool get isMeetingStarted => (super.noSuchMethod(
        Invocation.getter(#isMeetingStarted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isMeetingFinished => (super.noSuchMethod(
        Invocation.getter(#isMeetingFinished),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isInBreakouts => (super.noSuchMethod(
        Invocation.getter(#isInBreakouts),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canUserControlMeeting => (super.noSuchMethod(
        Invocation.getter(#canUserControlMeeting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get allowButtonForUserSubmittedAgenda => (super.noSuchMethod(
        Invocation.getter(#allowButtonForUserSubmittedAgenda),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(_i9.AgendaProviderParams? newParams) => super.noSuchMethod(
        Invocation.method(
          #update,
          [newParams],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onLiveMeetingUpdate() => super.noSuchMethod(
        Invocation.method(
          #onLiveMeetingUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startReorder() => super.noSuchMethod(
        Invocation.method(
          #startReorder,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deleteUnsavedItem(String? itemId) => super.noSuchMethod(
        Invocation.method(
          #deleteUnsavedItem,
          [itemId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> deleteAgendaItem(String? itemId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAgendaItem,
          [itemId],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> upsertAgendaItem({required _i2.AgendaItem? updatedItem}) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertAgendaItem,
          [],
          {#updatedItem: updatedItem},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void addNewUnsavedItem({_i2.AgendaItem? agendaItem}) => super.noSuchMethod(
        Invocation.method(
          #addNewUnsavedItem,
          [],
          {#agendaItem: agendaItem},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> saveReorder() => (super.noSuchMethod(
        Invocation.method(
          #saveReorder,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> startMeeting() => (super.noSuchMethod(
        Invocation.method(
          #startMeeting,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> finishAgendaItem(String? agendaItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #finishAgendaItem,
          [agendaItemId],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> goToPreviousAgendaItem(String? previousAgendaItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToPreviousAgendaItem,
          [previousAgendaItemId],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  bool isCurrentAgendaItem(String? agendaItemId) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentAgendaItem,
          [agendaItemId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isCompleted(String? agendaItemId) => (super.noSuchMethod(
        Invocation.method(
          #isCompleted,
          [agendaItemId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Duration timeInSection(String? agendaItemId) => (super.noSuchMethod(
        Invocation.method(
          #timeInSection,
          [agendaItemId],
        ),
        returnValue: _FakeDuration_9(
          this,
          Invocation.method(
            #timeInSection,
            [agendaItemId],
          ),
        ),
        returnValueForMissingStub: _FakeDuration_9(
          this,
          Invocation.method(
            #timeInSection,
            [agendaItemId],
          ),
        ),
      ) as Duration);

  @override
  void viewSuggestions(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #viewSuggestions,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> checkReadyToAdvance({String? agendaItemId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkReadyToAdvance,
          [],
          {#agendaItemId: agendaItemId},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> resetMeeting() => (super.noSuchMethod(
        Invocation.method(
          #resetMeeting,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateWaitingRoomInfo(_i2.WaitingRoomInfo? info) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWaitingRoomInfo,
          [info],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> moveForward({required String? currentAgendaItemId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveForward,
          [],
          {#currentAgendaItemId: currentAgendaItemId},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgendaProviderParams].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgendaProviderParams extends _i1.Mock
    implements _i9.AgendaProviderParams {
  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  bool get isNotOnEventPage => (super.noSuchMethod(
        Invocation.getter(#isNotOnEventPage),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get allowButtonForUserSubmittedAgenda => (super.noSuchMethod(
        Invocation.getter(#allowButtonForUserSubmittedAgenda),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get agendaStartsCollapsed => (super.noSuchMethod(
        Invocation.getter(#agendaStartsCollapsed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLivestream => (super.noSuchMethod(
        Invocation.getter(#isLivestream),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [AgoraRoom].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgoraRoom extends _i1.Mock implements _i26.AgoraRoom {
  @override
  _i10.RtcEngine get engine => (super.noSuchMethod(
        Invocation.getter(#engine),
        returnValue: _FakeRtcEngine_10(
          this,
          Invocation.getter(#engine),
        ),
        returnValueForMissingStub: _FakeRtcEngine_10(
          this,
          Invocation.getter(#engine),
        ),
      ) as _i10.RtcEngine);

  @override
  set engine(_i10.RtcEngine? _engine) => super.noSuchMethod(
        Invocation.setter(
          #engine,
          _engine,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get channelName => (super.noSuchMethod(
        Invocation.getter(#channelName),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#channelName),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#channelName),
        ),
      ) as String);

  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
      ) as String);

  @override
  _i11.EventProvider get eventProvider => (super.noSuchMethod(
        Invocation.getter(#eventProvider),
        returnValue: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
        returnValueForMissingStub: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
      ) as _i11.EventProvider);

  @override
  _i12.LiveMeetingProvider get liveMeetingProvider => (super.noSuchMethod(
        Invocation.getter(#liveMeetingProvider),
        returnValue: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
        returnValueForMissingStub: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
      ) as _i12.LiveMeetingProvider);

  @override
  _i13.ConferenceRoom get conferenceRoom => (super.noSuchMethod(
        Invocation.getter(#conferenceRoom),
        returnValue: _FakeConferenceRoom_13(
          this,
          Invocation.getter(#conferenceRoom),
        ),
        returnValueForMissingStub: _FakeConferenceRoom_13(
          this,
          Invocation.getter(#conferenceRoom),
        ),
      ) as _i13.ConferenceRoom);

  @override
  bool get connectedWithAudioEnabled => (super.noSuchMethod(
        Invocation.getter(#connectedWithAudioEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set connectedWithAudioEnabled(bool? _connectedWithAudioEnabled) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectedWithAudioEnabled,
          _connectedWithAudioEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get connectedWithVideoEnabled => (super.noSuchMethod(
        Invocation.getter(#connectedWithVideoEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set connectedWithVideoEnabled(bool? _connectedWithVideoEnabled) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectedWithVideoEnabled,
          _connectedWithVideoEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.AgoraRoomState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i26.AgoraRoomState.CONNECTING,
        returnValueForMissingStub: _i26.AgoraRoomState.CONNECTING,
      ) as _i26.AgoraRoomState);

  @override
  _i14.BehaviorSubject<_i26.AgoraParticipant?> get dominantSpeakerStream =>
      (super.noSuchMethod(
        Invocation.getter(#dominantSpeakerStream),
        returnValue: _FakeBehaviorSubject_14<_i26.AgoraParticipant?>(
          this,
          Invocation.getter(#dominantSpeakerStream),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubject_14<_i26.AgoraParticipant?>(
          this,
          Invocation.getter(#dominantSpeakerStream),
        ),
      ) as _i14.BehaviorSubject<_i26.AgoraParticipant?>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<void> connect({
    bool? enableAudio = true,
    bool? enableVideo = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #enableAudio: enableAudio,
            #enableVideo: enableVideo,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AgoraParticipant].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgoraParticipant extends _i1.Mock implements _i26.AgoraParticipant {
  @override
  int get agoraUid => (super.noSuchMethod(
        Invocation.getter(#agoraUid),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  bool get isLocal => (super.noSuchMethod(
        Invocation.getter(#isLocal),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.QualityType get networkQualityLevel => (super.noSuchMethod(
        Invocation.getter(#networkQualityLevel),
        returnValue: _i10.QualityType.qualityUnknown,
        returnValueForMissingStub: _i10.QualityType.qualityUnknown,
      ) as _i10.QualityType);

  @override
  set networkQualityLevel(_i10.QualityType? _networkQualityLevel) =>
      super.noSuchMethod(
        Invocation.setter(
          #networkQualityLevel,
          _networkQualityLevel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set volume(int? _volume) => super.noSuchMethod(
        Invocation.setter(
          #volume,
          _volume,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get audioTrackEnabled => (super.noSuchMethod(
        Invocation.getter(#audioTrackEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set audioTrackEnabled(bool? _audioTrackEnabled) => super.noSuchMethod(
        Invocation.setter(
          #audioTrackEnabled,
          _audioTrackEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get videoLocalPreviewStarted => (super.noSuchMethod(
        Invocation.getter(#videoLocalPreviewStarted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set videoLocalPreviewStarted(bool? _videoLocalPreviewStarted) =>
      super.noSuchMethod(
        Invocation.setter(
          #videoLocalPreviewStarted,
          _videoLocalPreviewStarted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get videoTrackEnabled => (super.noSuchMethod(
        Invocation.getter(#videoTrackEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set videoTrackEnabled(bool? _videoTrackEnabled) => super.noSuchMethod(
        Invocation.setter(
          #videoTrackEnabled,
          _videoTrackEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get identity => (super.noSuchMethod(
        Invocation.getter(#identity),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#identity),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#identity),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<void> enableAudio({
    required bool? setEnabled,
    String? deviceId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableAudio,
          [],
          {
            #setEnabled: setEnabled,
            #deviceId: deviceId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> enableVideo({
    required bool? setEnabled,
    String? deviceId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableVideo,
          [],
          {
            #setEnabled: setEnabled,
            #deviceId: deviceId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleMuteOverride({required bool? isMuted}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleMuteOverride,
          [],
          {#isMuted: isMuted},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppDrawerProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDrawerProvider extends _i1.Mock implements _i66.AppDrawerProvider {
  @override
  bool get hasDrawerUnsavedChanges => (super.noSuchMethod(
        Invocation.getter(#hasDrawerUnsavedChanges),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isConfirmChangesDialogShown => (super.noSuchMethod(
        Invocation.getter(#isConfirmChangesDialogShown),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void Function() get onSaveChanges => (super.noSuchMethod(
        Invocation.getter(#onSaveChanges),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as void Function());

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setUnsavedChanges(bool? hasUnsavedChanges) => super.noSuchMethod(
        Invocation.method(
          #setUnsavedChanges,
          [hasUnsavedChanges],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showConfirmChangesDialogLayer() => super.noSuchMethod(
        Invocation.method(
          #showConfirmChangesDialogLayer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void hideConfirmChangesDialogLayer() => super.noSuchMethod(
        Invocation.method(
          #hideConfirmChangesDialogLayer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnSaveChanges({required void Function()? onSaveChanges}) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnSaveChanges,
          [],
          {#onSaveChanges: onSaveChanges},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BuildContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockBuildContext extends _i1.Mock implements _i15.BuildContext {
  @override
  _i15.Widget get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeWidget_15(
          this,
          Invocation.getter(#widget),
        ),
        returnValueForMissingStub: _FakeWidget_15(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i15.Widget);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugDoingBuild => (super.noSuchMethod(
        Invocation.getter(#debugDoingBuild),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i15.InheritedWidget dependOnInheritedElement(
    _i15.InheritedElement? ancestor, {
    Object? aspect,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #dependOnInheritedElement,
          [ancestor],
          {#aspect: aspect},
        ),
        returnValue: _FakeInheritedWidget_16(
          this,
          Invocation.method(
            #dependOnInheritedElement,
            [ancestor],
            {#aspect: aspect},
          ),
        ),
        returnValueForMissingStub: _FakeInheritedWidget_16(
          this,
          Invocation.method(
            #dependOnInheritedElement,
            [ancestor],
            {#aspect: aspect},
          ),
        ),
      ) as _i15.InheritedWidget);

  @override
  void visitAncestorElements(_i15.ConditionalElementVisitor? visitor) =>
      super.noSuchMethod(
        Invocation.method(
          #visitAncestorElements,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void visitChildElements(_i15.ElementVisitor? visitor) => super.noSuchMethod(
        Invocation.method(
          #visitChildElements,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchNotification(_i15.Notification? notification) =>
      super.noSuchMethod(
        Invocation.method(
          #dispatchNotification,
          [notification],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DiagnosticsNode describeElement(
    String? name, {
    _i16.DiagnosticsTreeStyle? style = _i16.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeElement,
          [name],
          {#style: style},
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeElement,
            [name],
            {#style: style},
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeElement,
            [name],
            {#style: style},
          ),
        ),
      ) as _i15.DiagnosticsNode);

  @override
  _i15.DiagnosticsNode describeWidget(
    String? name, {
    _i16.DiagnosticsTreeStyle? style = _i16.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeWidget,
          [name],
          {#style: style},
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeWidget,
            [name],
            {#style: style},
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeWidget,
            [name],
            {#style: style},
          ),
        ),
      ) as _i15.DiagnosticsNode);

  @override
  List<_i15.DiagnosticsNode> describeMissingAncestor(
          {required Type? expectedAncestorType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeMissingAncestor,
          [],
          {#expectedAncestorType: expectedAncestorType},
        ),
        returnValue: <_i15.DiagnosticsNode>[],
        returnValueForMissingStub: <_i15.DiagnosticsNode>[],
      ) as List<_i15.DiagnosticsNode>);

  @override
  _i15.DiagnosticsNode describeOwnershipChain(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeOwnershipChain,
          [name],
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeOwnershipChain,
            [name],
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeOwnershipChain,
            [name],
          ),
        ),
      ) as _i15.DiagnosticsNode);
}

/// A class which mocks [ClockService].
///
/// See the documentation for Mockito's code generation for more information.
class MockClockService extends _i1.Mock implements _i67.ClockService {
  @override
  _i37.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<DateTime> getServerTimestamp() => (super.noSuchMethod(
        Invocation.method(
          #getServerTimestamp,
          [],
        ),
        returnValue: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.method(
            #getServerTimestamp,
            [],
          ),
        )),
        returnValueForMissingStub: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.method(
            #getServerTimestamp,
            [],
          ),
        )),
      ) as _i37.Future<DateTime>);

  @override
  DateTime now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _FakeDateTime_18(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeDateTime_18(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as DateTime);
}

/// A class which mocks [CloudFunctionsPaymentsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsPaymentsService extends _i1.Mock
    implements _i68.CloudFunctionsPaymentsService {
  @override
  _i37.Future<void> createStripeConnectedAccount(
          _i17.CreateStripeConnectedAccountRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStripeConnectedAccount,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetStripeBillingPortalLinkResponse>
      getStripeBillingPortalLink(
              _i17.GetStripeBillingPortalLinkRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getStripeBillingPortalLink,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.GetStripeBillingPortalLinkResponse>.value(
                    _FakeGetStripeBillingPortalLinkResponse_19(
              this,
              Invocation.method(
                #getStripeBillingPortalLink,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetStripeBillingPortalLinkResponse>.value(
                    _FakeGetStripeBillingPortalLinkResponse_19(
              this,
              Invocation.method(
                #getStripeBillingPortalLink,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.GetStripeBillingPortalLinkResponse>);

  @override
  _i37.Future<_i17.GetStripeConnectedAccountLinkResponse>
      getStripeConnectedAccountLink(
              _i17.GetStripeConnectedAccountLinkRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getStripeConnectedAccountLink,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.GetStripeConnectedAccountLinkResponse>.value(
                    _FakeGetStripeConnectedAccountLinkResponse_20(
              this,
              Invocation.method(
                #getStripeConnectedAccountLink,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetStripeConnectedAccountLinkResponse>.value(
                    _FakeGetStripeConnectedAccountLinkResponse_20(
              this,
              Invocation.method(
                #getStripeConnectedAccountLink,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.GetStripeConnectedAccountLinkResponse>);

  @override
  _i37.Future<void> cancelStripeSubscriptionPlan(
          _i17.CancelStripeSubscriptionPlanRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelStripeSubscriptionPlan,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateStripeSubscriptionPlan(
          _i17.UpdateStripeSubscriptionPlanRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStripeSubscriptionPlan,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetStripeSubscriptionPlanInfoResponse>
      getStripeSubscriptionPlanInfo(
              _i17.GetStripeSubscriptionPlanInfoRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getStripeSubscriptionPlanInfo,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.GetStripeSubscriptionPlanInfoResponse>.value(
                    _FakeGetStripeSubscriptionPlanInfoResponse_21(
              this,
              Invocation.method(
                #getStripeSubscriptionPlanInfo,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetStripeSubscriptionPlanInfoResponse>.value(
                    _FakeGetStripeSubscriptionPlanInfoResponse_21(
              this,
              Invocation.method(
                #getStripeSubscriptionPlanInfo,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.GetStripeSubscriptionPlanInfoResponse>);

  @override
  _i37.Future<_i17.CreateDonationCheckoutSessionResponse>
      createDonationCheckoutSession(
              _i17.CreateDonationCheckoutSessionRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #createDonationCheckoutSession,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.CreateDonationCheckoutSessionResponse>.value(
                    _FakeCreateDonationCheckoutSessionResponse_22(
              this,
              Invocation.method(
                #createDonationCheckoutSession,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.CreateDonationCheckoutSessionResponse>.value(
                    _FakeCreateDonationCheckoutSessionResponse_22(
              this,
              Invocation.method(
                #createDonationCheckoutSession,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.CreateDonationCheckoutSessionResponse>);

  @override
  _i37.Future<_i17.CreateSubscriptionCheckoutSessionResponse>
      createSubscriptionCheckoutSession(
              _i17.CreateSubscriptionCheckoutSessionRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #createSubscriptionCheckoutSession,
              [request],
            ),
            returnValue: _i37
                .Future<_i17.CreateSubscriptionCheckoutSessionResponse>.value(
                _FakeCreateSubscriptionCheckoutSessionResponse_23(
              this,
              Invocation.method(
                #createSubscriptionCheckoutSession,
                [request],
              ),
            )),
            returnValueForMissingStub: _i37
                .Future<_i17.CreateSubscriptionCheckoutSessionResponse>.value(
                _FakeCreateSubscriptionCheckoutSessionResponse_23(
              this,
              Invocation.method(
                #createSubscriptionCheckoutSession,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.CreateSubscriptionCheckoutSessionResponse>);
}

/// A class which mocks [CloudFunctionsCommunityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsCommunityService extends _i1.Mock
    implements _i69.CloudFunctionsCommunityService {
  @override
  _i37.Future<_i17.CreateCommunityResponse> createCommunity(
          _i17.CreateCommunityRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCommunity,
          [request],
        ),
        returnValue: _i37.Future<_i17.CreateCommunityResponse>.value(
            _FakeCreateCommunityResponse_24(
          this,
          Invocation.method(
            #createCommunity,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.CreateCommunityResponse>.value(
                _FakeCreateCommunityResponse_24(
          this,
          Invocation.method(
            #createCommunity,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.CreateCommunityResponse>);

  @override
  _i37.Future<void> updateCommunity(_i17.UpdateCommunityRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommunity,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i18.PlanCapabilityList> getCommunityCapabilities(
          _i17.GetCommunityCapabilitiesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunityCapabilities,
          [request],
        ),
        returnValue: _i37.Future<_i18.PlanCapabilityList>.value(
            _FakePlanCapabilityList_25(
          this,
          Invocation.method(
            #getCommunityCapabilities,
            [request],
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i18.PlanCapabilityList>.value(
            _FakePlanCapabilityList_25(
          this,
          Invocation.method(
            #getCommunityCapabilities,
            [request],
          ),
        )),
      ) as _i37.Future<_i18.PlanCapabilityList>);

  @override
  _i37.Future<_i17.GetMembersDataResponse> getMembersData(
          {required _i17.GetMembersDataRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembersData,
          [],
          {#request: request},
        ),
        returnValue: _i37.Future<_i17.GetMembersDataResponse>.value(
            _FakeGetMembersDataResponse_26(
          this,
          Invocation.method(
            #getMembersData,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetMembersDataResponse>.value(
                _FakeGetMembersDataResponse_26(
          this,
          Invocation.method(
            #getMembersData,
            [],
            {#request: request},
          ),
        )),
      ) as _i37.Future<_i17.GetMembersDataResponse>);

  @override
  _i37.Future<_i17.GetUserAdminDetailsResponse> getUserAdminDetails(
          _i17.GetUserAdminDetailsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserAdminDetails,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetUserAdminDetailsResponse>.value(
            _FakeGetUserAdminDetailsResponse_27(
          this,
          Invocation.method(
            #getUserAdminDetails,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetUserAdminDetailsResponse>.value(
                _FakeGetUserAdminDetailsResponse_27(
          this,
          Invocation.method(
            #getUserAdminDetails,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetUserAdminDetailsResponse>);

  @override
  _i37.Future<void> resolveJoinRequest(
          _i17.ResolveJoinRequestRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #resolveJoinRequest,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateMembership(_i17.UpdateMembershipRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMembership,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetCommunityDonationsEnabledResponse>
      getCommunityDonationsEnabled(
              _i17.GetCommunityDonationsEnabledRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getCommunityDonationsEnabled,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.GetCommunityDonationsEnabledResponse>.value(
                    _FakeGetCommunityDonationsEnabledResponse_28(
              this,
              Invocation.method(
                #getCommunityDonationsEnabled,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetCommunityDonationsEnabledResponse>.value(
                    _FakeGetCommunityDonationsEnabledResponse_28(
              this,
              Invocation.method(
                #getCommunityDonationsEnabled,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.GetCommunityDonationsEnabledResponse>);

  @override
  _i37.Future<_i17.GetCommunityPrePostEnabledResponse>
      getCommunityPrePostEnabled(
              _i17.GetCommunityPrePostEnabledRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getCommunityPrePostEnabled,
              [request],
            ),
            returnValue:
                _i37.Future<_i17.GetCommunityPrePostEnabledResponse>.value(
                    _FakeGetCommunityPrePostEnabledResponse_29(
              this,
              Invocation.method(
                #getCommunityPrePostEnabled,
                [request],
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetCommunityPrePostEnabledResponse>.value(
                    _FakeGetCommunityPrePostEnabledResponse_29(
              this,
              Invocation.method(
                #getCommunityPrePostEnabled,
                [request],
              ),
            )),
          ) as _i37.Future<_i17.GetCommunityPrePostEnabledResponse>);

  @override
  _i37.Future<void> unsubscribeFromCommunityNotifications(
          {required _i17.UnsubscribeFromCommunityNotificationsRequest?
              request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromCommunityNotifications,
          [],
          {#request: request},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  Map<String, dynamic> getDecodedData(
    dynamic data, {
    bool? isWeb = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDecodedData,
          [data],
          {#isWeb: isWeb},
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CloudFunctionsEventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsEventService extends _i1.Mock
    implements _i70.CloudFunctionsEventService {
  @override
  _i37.Future<void> sendEventMessage(_i17.SendEventMessageRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEventMessage,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> createEvent(_i2.Event? event) => (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> joinEvent(_i2.Event? event) => (super.noSuchMethod(
        Invocation.method(
          #joinEvent,
          [event],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> eventEnded(_i17.EventEndedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventEnded,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetCommunityCalendarLinkResponse> getCommunityCalendarLink(
          _i17.GetCommunityCalendarLinkRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunityCalendarLink,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetCommunityCalendarLinkResponse>.value(
            _FakeGetCommunityCalendarLinkResponse_30(
          this,
          Invocation.method(
            #getCommunityCalendarLink,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetCommunityCalendarLinkResponse>.value(
                _FakeGetCommunityCalendarLinkResponse_30(
          this,
          Invocation.method(
            #getCommunityCalendarLink,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetCommunityCalendarLinkResponse>);
}

/// A class which mocks [CloudFunctionsLiveMeetingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsLiveMeetingService extends _i1.Mock
    implements _i71.CloudFunctionsLiveMeetingService {
  @override
  _i37.Future<_i17.GetMeetingJoinInfoResponse> getMeetingJoinInfo(
          _i17.GetMeetingJoinInfoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeetingJoinInfo,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
            _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getMeetingJoinInfo,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
                _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getMeetingJoinInfo,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetMeetingJoinInfoResponse>);

  @override
  _i37.Future<_i17.GetMeetingChatsSuggestionsDataResponse>
      getMeetingChatSuggestionData(
              {required _i17.GetMeetingChatsSuggestionsDataRequest? request}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMeetingChatSuggestionData,
              [],
              {#request: request},
            ),
            returnValue:
                _i37.Future<_i17.GetMeetingChatsSuggestionsDataResponse>.value(
                    _FakeGetMeetingChatsSuggestionsDataResponse_32(
              this,
              Invocation.method(
                #getMeetingChatSuggestionData,
                [],
                {#request: request},
              ),
            )),
            returnValueForMissingStub:
                _i37.Future<_i17.GetMeetingChatsSuggestionsDataResponse>.value(
                    _FakeGetMeetingChatsSuggestionsDataResponse_32(
              this,
              Invocation.method(
                #getMeetingChatSuggestionData,
                [],
                {#request: request},
              ),
            )),
          ) as _i37.Future<_i17.GetMeetingChatsSuggestionsDataResponse>);

  @override
  _i37.Future<_i17.GetMeetingJoinInfoResponse> getBreakoutRoomJoinInfo(
          _i17.GetBreakoutRoomJoinInfoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreakoutRoomJoinInfo,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
            _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getBreakoutRoomJoinInfo,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
                _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getBreakoutRoomJoinInfo,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetMeetingJoinInfoResponse>);

  @override
  _i37.Future<_i17.CreateLiveStreamResponse> createLiveStream(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLiveStream,
          [],
          {#communityId: communityId},
        ),
        returnValue: _i37.Future<_i17.CreateLiveStreamResponse>.value(
            _FakeCreateLiveStreamResponse_33(
          this,
          Invocation.method(
            #createLiveStream,
            [],
            {#communityId: communityId},
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.CreateLiveStreamResponse>.value(
                _FakeCreateLiveStreamResponse_33(
          this,
          Invocation.method(
            #createLiveStream,
            [],
            {#communityId: communityId},
          ),
        )),
      ) as _i37.Future<_i17.CreateLiveStreamResponse>);

  @override
  _i37.Future<_i17.GetBreakoutRoomAssignmentResponse> getBreakoutRoomAssignment(
          _i17.GetBreakoutRoomAssignmentRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreakoutRoomAssignment,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetBreakoutRoomAssignmentResponse>.value(
            _FakeGetBreakoutRoomAssignmentResponse_34(
          this,
          Invocation.method(
            #getBreakoutRoomAssignment,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetBreakoutRoomAssignmentResponse>.value(
                _FakeGetBreakoutRoomAssignmentResponse_34(
          this,
          Invocation.method(
            #getBreakoutRoomAssignment,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetBreakoutRoomAssignmentResponse>);

  @override
  _i37.Future<void> kickParticipant(
          {required _i17.KickParticipantRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickParticipant,
          [],
          {#request: request},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateBreakoutRoomFlagStatus(
          {required _i17.UpdateBreakoutRoomFlagStatusRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBreakoutRoomFlagStatus,
          [],
          {#request: request},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> checkAdvanceMeetingGuide(
          _i17.CheckAdvanceMeetingGuideRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAdvanceMeetingGuide,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> checkAssignToBreakouts(
          _i17.CheckAssignToBreakoutsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAssignToBreakouts,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> checkHostlessGoToBreakouts(
          _i17.CheckHostlessGoToBreakoutsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkHostlessGoToBreakouts,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> initiateBreakouts(_i17.InitiateBreakoutsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #initiateBreakouts,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i19.BreakoutRoom> reassignBreakoutRoom(
          _i17.ReassignBreakoutRoomRequest? reassignBreakoutRoomRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #reassignBreakoutRoom,
          [reassignBreakoutRoomRequest],
        ),
        returnValue: _i37.Future<_i19.BreakoutRoom>.value(_FakeBreakoutRoom_35(
          this,
          Invocation.method(
            #reassignBreakoutRoom,
            [reassignBreakoutRoomRequest],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i19.BreakoutRoom>.value(_FakeBreakoutRoom_35(
          this,
          Invocation.method(
            #reassignBreakoutRoom,
            [reassignBreakoutRoomRequest],
          ),
        )),
      ) as _i37.Future<_i19.BreakoutRoom>);

  @override
  _i37.Future<void> toggleLikeDislikeOnMeetingUserSuggestion(
          _i43.ParticipantAgendaItemDetailsMeta? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleLikeDislikeOnMeetingUserSuggestion,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetUserIdFromAgoraIdResponse> getUserIdFromAgoraId(
          _i17.GetUserIdFromAgoraIdRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserIdFromAgoraId,
          [request],
        ),
        returnValue: _i37.Future<_i17.GetUserIdFromAgoraIdResponse>.value(
            _FakeGetUserIdFromAgoraIdResponse_36(
          this,
          Invocation.method(
            #getUserIdFromAgoraId,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetUserIdFromAgoraIdResponse>.value(
                _FakeGetUserIdFromAgoraIdResponse_36(
          this,
          Invocation.method(
            #getUserIdFromAgoraId,
            [request],
          ),
        )),
      ) as _i37.Future<_i17.GetUserIdFromAgoraIdResponse>);

  @override
  _i37.Future<void> resetParticipantAgendaItems(
          {required _i17.ResetParticipantAgendaItemsRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetParticipantAgendaItems,
          [],
          {#request: request},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> voteToKick(_i17.VoteToKickRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #voteToKick,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  Map<String, dynamic> getDecodedData(
    dynamic data, {
    bool? isWeb = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDecodedData,
          [data],
          {#isWeb: isWeb},
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CloudFunctionsAnnouncementsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsAnnouncementsService extends _i1.Mock
    implements _i72.CloudFunctionsAnnouncementsService {
  @override
  _i37.Future<void> createAnnouncement(
          _i17.CreateAnnouncementRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAnnouncement,
          [request],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [CloudinaryFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudinaryFile extends _i1.Mock implements _i21.CloudinaryFile {
  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#identifier),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#identifier),
        ),
      ) as String);

  @override
  _i21.CloudinaryResourceType get resourceType => (super.noSuchMethod(
        Invocation.getter(#resourceType),
        returnValue: _i21.CloudinaryResourceType.Image,
        returnValueForMissingStub: _i21.CloudinaryResourceType.Image,
      ) as _i21.CloudinaryResourceType);

  @override
  bool get fromExternalUrl => (super.noSuchMethod(
        Invocation.getter(#fromExternalUrl),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get fileSize => (super.noSuchMethod(
        Invocation.getter(#fileSize),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i37.Future<_i20.MultipartFile> toMultipartFile() => (super.noSuchMethod(
        Invocation.method(
          #toMultipartFile,
          [],
        ),
        returnValue:
            _i37.Future<_i20.MultipartFile>.value(_FakeMultipartFile_37(
          this,
          Invocation.method(
            #toMultipartFile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i20.MultipartFile>.value(_FakeMultipartFile_37(
          this,
          Invocation.method(
            #toMultipartFile,
            [],
          ),
        )),
      ) as _i37.Future<_i20.MultipartFile>);

  @override
  _i20.MultipartFile toMultipartFileChunked(
    int? start,
    int? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toMultipartFileChunked,
          [
            start,
            end,
          ],
        ),
        returnValue: _FakeMultipartFile_37(
          this,
          Invocation.method(
            #toMultipartFileChunked,
            [
              start,
              end,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeMultipartFile_37(
          this,
          Invocation.method(
            #toMultipartFileChunked,
            [
              start,
              end,
            ],
          ),
        ),
      ) as _i20.MultipartFile);

  @override
  Map<String, dynamic> toFormData({required String? uploadPreset}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toFormData,
          [],
          {#uploadPreset: uploadPreset},
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  List<_i20.MultipartFile> createChunks(
    int? chunksCount,
    int? maxChunkSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChunks,
          [
            chunksCount,
            maxChunkSize,
          ],
        ),
        returnValue: <_i20.MultipartFile>[],
        returnValueForMissingStub: <_i20.MultipartFile>[],
      ) as List<_i20.MultipartFile>);
}

/// A class which mocks [CloudinaryPublic].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudinaryPublic extends _i1.Mock implements _i21.CloudinaryPublic {
  @override
  bool get cache => (super.noSuchMethod(
        Invocation.getter(#cache),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i21.CloudinaryImage getImage(String? publicId) => (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [publicId],
        ),
        returnValue: _FakeCloudinaryImage_38(
          this,
          Invocation.method(
            #getImage,
            [publicId],
          ),
        ),
        returnValueForMissingStub: _FakeCloudinaryImage_38(
          this,
          Invocation.method(
            #getImage,
            [publicId],
          ),
        ),
      ) as _i21.CloudinaryImage);

  @override
  _i37.Future<List<_i21.CloudinaryResponse>> uploadFiles(
    List<_i21.CloudinaryFile>? files, {
    String? uploadPreset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFiles,
          [files],
          {#uploadPreset: uploadPreset},
        ),
        returnValue: _i37.Future<List<_i21.CloudinaryResponse>>.value(
            <_i21.CloudinaryResponse>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i21.CloudinaryResponse>>.value(
                <_i21.CloudinaryResponse>[]),
      ) as _i37.Future<List<_i21.CloudinaryResponse>>);

  @override
  _i37.Future<_i21.CloudinaryResponse> uploadFile(
    _i21.CloudinaryFile? file, {
    String? uploadPreset,
    _i20.ProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [file],
          {
            #uploadPreset: uploadPreset,
            #onProgress: onProgress,
          },
        ),
        returnValue: _i37.Future<_i21.CloudinaryResponse>.value(
            _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #uploadFile,
            [file],
            {
              #uploadPreset: uploadPreset,
              #onProgress: onProgress,
            },
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i21.CloudinaryResponse>.value(
            _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #uploadFile,
            [file],
            {
              #uploadPreset: uploadPreset,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i37.Future<_i21.CloudinaryResponse>);

  @override
  _i37.Future<_i21.CloudinaryResponse> uploadFutureFile(
    _i37.Future<_i21.CloudinaryFile>? file, {
    String? uploadPreset,
    _i20.ProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFutureFile,
          [file],
          {
            #uploadPreset: uploadPreset,
            #onProgress: onProgress,
          },
        ),
        returnValue: _i37.Future<_i21.CloudinaryResponse>.value(
            _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #uploadFutureFile,
            [file],
            {
              #uploadPreset: uploadPreset,
              #onProgress: onProgress,
            },
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i21.CloudinaryResponse>.value(
            _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #uploadFutureFile,
            [file],
            {
              #uploadPreset: uploadPreset,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i37.Future<_i21.CloudinaryResponse>);

  @override
  _i37.Future<List<_i21.CloudinaryResponse>> multiUpload(
    List<_i37.Future<_i21.CloudinaryFile>>? files, {
    String? uploadPreset,
    _i20.ProgressCallback? onProgress,
    void Function(int)? currentUploadIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #multiUpload,
          [files],
          {
            #uploadPreset: uploadPreset,
            #onProgress: onProgress,
            #currentUploadIndex: currentUploadIndex,
          },
        ),
        returnValue: _i37.Future<List<_i21.CloudinaryResponse>>.value(
            <_i21.CloudinaryResponse>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i21.CloudinaryResponse>>.value(
                <_i21.CloudinaryResponse>[]),
      ) as _i37.Future<List<_i21.CloudinaryResponse>>);

  @override
  _i37.Future<_i21.CloudinaryResponse?> uploadFileInChunks(
    _i21.CloudinaryFile? file, {
    String? uploadPreset,
    _i20.ProgressCallback? onProgress,
    int? chunkSize = 20000000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFileInChunks,
          [file],
          {
            #uploadPreset: uploadPreset,
            #onProgress: onProgress,
            #chunkSize: chunkSize,
          },
        ),
        returnValue: _i37.Future<_i21.CloudinaryResponse?>.value(),
        returnValueForMissingStub:
            _i37.Future<_i21.CloudinaryResponse?>.value(),
      ) as _i37.Future<_i21.CloudinaryResponse?>);
}

/// A class which mocks [CloudinaryResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudinaryResponse extends _i1.Mock
    implements _i21.CloudinaryResponse {
  @override
  String get assetId => (super.noSuchMethod(
        Invocation.getter(#assetId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#assetId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#assetId),
        ),
      ) as String);

  @override
  String get publicId => (super.noSuchMethod(
        Invocation.getter(#publicId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#publicId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#publicId),
        ),
      ) as String);

  @override
  DateTime get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: _FakeDateTime_18(
          this,
          Invocation.getter(#createdAt),
        ),
        returnValueForMissingStub: _FakeDateTime_18(
          this,
          Invocation.getter(#createdAt),
        ),
      ) as DateTime);

  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  String get secureUrl => (super.noSuchMethod(
        Invocation.getter(#secureUrl),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#secureUrl),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#secureUrl),
        ),
      ) as String);

  @override
  String get originalFilename => (super.noSuchMethod(
        Invocation.getter(#originalFilename),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#originalFilename),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#originalFilename),
        ),
      ) as String);

  @override
  List<String> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  Map<String, dynamic> get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get fromCache => (super.noSuchMethod(
        Invocation.getter(#fromCache),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, String> get customContext => (super.noSuchMethod(
        Invocation.getter(#customContext),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  _i21.CloudinaryResponse enableCache() => (super.noSuchMethod(
        Invocation.method(
          #enableCache,
          [],
        ),
        returnValue: _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #enableCache,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCloudinaryResponse_39(
          this,
          Invocation.method(
            #enableCache,
            [],
          ),
        ),
      ) as _i21.CloudinaryResponse);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CollectionReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCollectionReference<T extends Object?> extends _i1.Mock
    implements _i22.CollectionReference<T> {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  _i22.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i22.FirebaseFirestore);

  @override
  Map<String, dynamic> get parameters => (super.noSuchMethod(
        Invocation.getter(#parameters),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i37.Future<_i22.DocumentReference<T>> add(T? data) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [data],
        ),
        returnValue: _i37.Future<_i22.DocumentReference<T>>.value(
            _FakeDocumentReference_41<T>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i22.DocumentReference<T>>.value(
            _FakeDocumentReference_41<T>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
      ) as _i37.Future<_i22.DocumentReference<T>>);

  @override
  _i22.DocumentReference<T> doc([String? path]) => (super.noSuchMethod(
        Invocation.method(
          #doc,
          [path],
        ),
        returnValue: _FakeDocumentReference_41<T>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeDocumentReference_41<T>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
      ) as _i22.DocumentReference<T>);

  @override
  _i22.CollectionReference<R> withConverter<R extends Object?>({
    required _i22.FromFirestore<R>? fromFirestore,
    required _i22.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeCollectionReference_42<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeCollectionReference_42<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i22.CollectionReference<R>);

  @override
  _i22.Query<T> endAtDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endBeforeDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBeforeDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endBefore(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i37.Future<_i22.QuerySnapshot<T>> get([_i36.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i37.Future<_i22.QuerySnapshot<T>>);

  @override
  _i22.Query<T> limit(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limit,
          [limit],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> limitToLast(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i37.Stream<_i22.QuerySnapshot<T>> snapshots({
    bool? includeMetadataChanges = false,
    _i36.ListenSource? source = _i36.ListenSource.defaultSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {
            #includeMetadataChanges: includeMetadataChanges,
            #source: source,
          },
        ),
        returnValue: _i37.Stream<_i22.QuerySnapshot<T>>.empty(),
        returnValueForMissingStub: _i37.Stream<_i22.QuerySnapshot<T>>.empty(),
      ) as _i37.Stream<_i22.QuerySnapshot<T>>);

  @override
  _i22.Query<T> orderBy(
    Object? field, {
    bool? descending = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [field],
          {#descending: descending},
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAfterDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfterDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAfter(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAtDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    Iterable<Object?>? arrayContainsAny,
    Iterable<Object?>? whereIn,
    Iterable<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [field],
          {
            #isEqualTo: isEqualTo,
            #isNotEqualTo: isNotEqualTo,
            #isLessThan: isLessThan,
            #isLessThanOrEqualTo: isLessThanOrEqualTo,
            #isGreaterThan: isGreaterThan,
            #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
            #arrayContains: arrayContains,
            #arrayContainsAny: arrayContainsAny,
            #whereIn: whereIn,
            #whereNotIn: whereNotIn,
            #isNull: isNull,
          },
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.AggregateQuery count() => (super.noSuchMethod(
        Invocation.method(
          #count,
          [],
        ),
        returnValue: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
      ) as _i22.AggregateQuery);

  @override
  _i22.AggregateQuery aggregate(
    _i36.AggregateField? aggregateField1, [
    _i36.AggregateField? aggregateField2,
    _i36.AggregateField? aggregateField3,
    _i36.AggregateField? aggregateField4,
    _i36.AggregateField? aggregateField5,
    _i36.AggregateField? aggregateField6,
    _i36.AggregateField? aggregateField7,
    _i36.AggregateField? aggregateField8,
    _i36.AggregateField? aggregateField9,
    _i36.AggregateField? aggregateField10,
    _i36.AggregateField? aggregateField11,
    _i36.AggregateField? aggregateField12,
    _i36.AggregateField? aggregateField13,
    _i36.AggregateField? aggregateField14,
    _i36.AggregateField? aggregateField15,
    _i36.AggregateField? aggregateField16,
    _i36.AggregateField? aggregateField17,
    _i36.AggregateField? aggregateField18,
    _i36.AggregateField? aggregateField19,
    _i36.AggregateField? aggregateField20,
    _i36.AggregateField? aggregateField21,
    _i36.AggregateField? aggregateField22,
    _i36.AggregateField? aggregateField23,
    _i36.AggregateField? aggregateField24,
    _i36.AggregateField? aggregateField25,
    _i36.AggregateField? aggregateField26,
    _i36.AggregateField? aggregateField27,
    _i36.AggregateField? aggregateField28,
    _i36.AggregateField? aggregateField29,
    _i36.AggregateField? aggregateField30,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #aggregate,
          [
            aggregateField1,
            aggregateField2,
            aggregateField3,
            aggregateField4,
            aggregateField5,
            aggregateField6,
            aggregateField7,
            aggregateField8,
            aggregateField9,
            aggregateField10,
            aggregateField11,
            aggregateField12,
            aggregateField13,
            aggregateField14,
            aggregateField15,
            aggregateField16,
            aggregateField17,
            aggregateField18,
            aggregateField19,
            aggregateField20,
            aggregateField21,
            aggregateField22,
            aggregateField23,
            aggregateField24,
            aggregateField25,
            aggregateField26,
            aggregateField27,
            aggregateField28,
            aggregateField29,
            aggregateField30,
          ],
        ),
        returnValue: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #aggregate,
            [
              aggregateField1,
              aggregateField2,
              aggregateField3,
              aggregateField4,
              aggregateField5,
              aggregateField6,
              aggregateField7,
              aggregateField8,
              aggregateField9,
              aggregateField10,
              aggregateField11,
              aggregateField12,
              aggregateField13,
              aggregateField14,
              aggregateField15,
              aggregateField16,
              aggregateField17,
              aggregateField18,
              aggregateField19,
              aggregateField20,
              aggregateField21,
              aggregateField22,
              aggregateField23,
              aggregateField24,
              aggregateField25,
              aggregateField26,
              aggregateField27,
              aggregateField28,
              aggregateField29,
              aggregateField30,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #aggregate,
            [
              aggregateField1,
              aggregateField2,
              aggregateField3,
              aggregateField4,
              aggregateField5,
              aggregateField6,
              aggregateField7,
              aggregateField8,
              aggregateField9,
              aggregateField10,
              aggregateField11,
              aggregateField12,
              aggregateField13,
              aggregateField14,
              aggregateField15,
              aggregateField16,
              aggregateField17,
              aggregateField18,
              aggregateField19,
              aggregateField20,
              aggregateField21,
              aggregateField22,
              aggregateField23,
              aggregateField24,
              aggregateField25,
              aggregateField26,
              aggregateField27,
              aggregateField28,
              aggregateField29,
              aggregateField30,
            ],
          ),
        ),
      ) as _i22.AggregateQuery);
}

/// A class which mocks [CommunityPermissionsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunityPermissionsProvider extends _i1.Mock
    implements _i29.CommunityPermissionsProvider {
  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i73.MembershipStatus get membershipStatus => (super.noSuchMethod(
        Invocation.getter(#membershipStatus),
        returnValue: _i73.MembershipStatus.banned,
        returnValueForMissingStub: _i73.MembershipStatus.banned,
      ) as _i73.MembershipStatus);

  @override
  bool get canRequestToJoin => (super.noSuchMethod(
        Invocation.getter(#canRequestToJoin),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canViewCommunityLinks => (super.noSuchMethod(
        Invocation.getter(#canViewCommunityLinks),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canRSVP => (super.noSuchMethod(
        Invocation.getter(#canRSVP),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canParticipateInChat => (super.noSuchMethod(
        Invocation.getter(#canParticipateInChat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canCreateEvent => (super.noSuchMethod(
        Invocation.getter(#canCreateEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canCreateTemplate => (super.noSuchMethod(
        Invocation.getter(#canCreateTemplate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canSeeCreateTemplateButtonOnCommunityHomePage => (super.noSuchMethod(
        Invocation.getter(#canSeeCreateTemplateButtonOnCommunityHomePage),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canSkipChooseTemplate => (super.noSuchMethod(
        Invocation.getter(#canSkipChooseTemplate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canModerateContent => (super.noSuchMethod(
        Invocation.getter(#canModerateContent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canCreateLargeEvents => (super.noSuchMethod(
        Invocation.getter(#canCreateLargeEvents),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canFeatureItems => (super.noSuchMethod(
        Invocation.getter(#canFeatureItems),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canEditCommunity => (super.noSuchMethod(
        Invocation.getter(#canEditCommunity),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canDeleteCommunity => (super.noSuchMethod(
        Invocation.getter(#canDeleteCommunity),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isUserBillingManager => (super.noSuchMethod(
        Invocation.getter(#isUserBillingManager),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool canEditTemplate(_i39.Template? template) => (super.noSuchMethod(
        Invocation.method(
          #canEditTemplate,
          [template],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canDeleteTemplate(_i39.Template? template) => (super.noSuchMethod(
        Invocation.method(
          #canDeleteTemplate,
          [template],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canDeleteChatMessage(_i74.ChatMessage? message) => (super.noSuchMethod(
        Invocation.method(
          #canDeleteChatMessage,
          [message],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CommunitySettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunitySettings extends _i1.Mock implements _i24.CommunitySettings {
  @override
  bool get allowDonations => (super.noSuchMethod(
        Invocation.getter(#allowDonations),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get allowUnofficialTemplates => (super.noSuchMethod(
        Invocation.getter(#allowUnofficialTemplates),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get disableEmailDigests => (super.noSuchMethod(
        Invocation.getter(#disableEmailDigests),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get dontAllowMembersToCreateMeetings => (super.noSuchMethod(
        Invocation.getter(#dontAllowMembersToCreateMeetings),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableDiscussionThreads => (super.noSuchMethod(
        Invocation.getter(#enableDiscussionThreads),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableHostless => (super.noSuchMethod(
        Invocation.getter(#enableHostless),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get multiplePeopleOnStage => (super.noSuchMethod(
        Invocation.getter(#multiplePeopleOnStage),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get multipleVideoTypes => (super.noSuchMethod(
        Invocation.getter(#multipleVideoTypes),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get requireApprovalToJoin => (super.noSuchMethod(
        Invocation.getter(#requireApprovalToJoin),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enablePlatformSelection => (super.noSuchMethod(
        Invocation.getter(#enablePlatformSelection),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableUpdatedLiveMeetingMobile => (super.noSuchMethod(
        Invocation.getter(#enableUpdatedLiveMeetingMobile),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableAVCheck => (super.noSuchMethod(
        Invocation.getter(#enableAVCheck),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i24.$CommunitySettingsCopyWith<_i24.CommunitySettings> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CommunitySettingsCopyWith_47<_i24.CommunitySettings>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$CommunitySettingsCopyWith_47<_i24.CommunitySettings>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i24.$CommunitySettingsCopyWith<_i24.CommunitySettings>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [ConferenceRoom].
///
/// See the documentation for Mockito's code generation for more information.
class MockConferenceRoom extends _i1.Mock implements _i13.ConferenceRoom {
  @override
  _i12.LiveMeetingProvider get liveMeetingProvider => (super.noSuchMethod(
        Invocation.getter(#liveMeetingProvider),
        returnValue: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
        returnValueForMissingStub: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
      ) as _i12.LiveMeetingProvider);

  @override
  _i9.AgendaProvider get agendaProvider => (super.noSuchMethod(
        Invocation.getter(#agendaProvider),
        returnValue: _FakeAgendaProvider_48(
          this,
          Invocation.getter(#agendaProvider),
        ),
        returnValueForMissingStub: _FakeAgendaProvider_48(
          this,
          Invocation.getter(#agendaProvider),
        ),
      ) as _i9.AgendaProvider);

  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i25.MeetingGuideCardStore get meetingGuideCardModel => (super.noSuchMethod(
        Invocation.getter(#meetingGuideCardModel),
        returnValue: _FakeMeetingGuideCardStore_49(
          this,
          Invocation.getter(#meetingGuideCardModel),
        ),
        returnValueForMissingStub: _FakeMeetingGuideCardStore_49(
          this,
          Invocation.getter(#meetingGuideCardModel),
        ),
      ) as _i25.MeetingGuideCardStore);

  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
      ) as String);

  @override
  String get roomName => (super.noSuchMethod(
        Invocation.getter(#roomName),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#roomName),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#roomName),
        ),
      ) as String);

  @override
  _i37.Stream<Exception> get onException => (super.noSuchMethod(
        Invocation.getter(#onException),
        returnValue: _i37.Stream<Exception>.empty(),
        returnValueForMissingStub: _i37.Stream<Exception>.empty(),
      ) as _i37.Stream<Exception>);

  @override
  set onException(_i37.Stream<Exception>? _onException) => super.noSuchMethod(
        Invocation.setter(
          #onException,
          _onException,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, _i37.Timer> get participantInitializationTimers =>
      (super.noSuchMethod(
        Invocation.getter(#participantInitializationTimers),
        returnValue: <String, _i37.Timer>{},
        returnValueForMissingStub: <String, _i37.Timer>{},
      ) as Map<String, _i37.Timer>);

  @override
  bool get hasStartedConnecting => (super.noSuchMethod(
        Invocation.getter(#hasStartedConnecting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasStartedConnecting(bool? _hasStartedConnecting) => super.noSuchMethod(
        Invocation.setter(
          #hasStartedConnecting,
          _hasStartedConnecting,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get flashEnabled => (super.noSuchMethod(
        Invocation.getter(#flashEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set flashEnabled(bool? _flashEnabled) => super.noSuchMethod(
        Invocation.setter(
          #flashEnabled,
          _flashEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get numFakeParticipants => (super.noSuchMethod(
        Invocation.getter(#numFakeParticipants),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set numFakeParticipants(int? value) => super.noSuchMethod(
        Invocation.setter(
          #numFakeParticipants,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxHighlightedParticipants => (super.noSuchMethod(
        Invocation.getter(#maxHighlightedParticipants),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i37.Future<_i26.AgoraRoom> get connectionFuture => (super.noSuchMethod(
        Invocation.getter(#connectionFuture),
        returnValue: _i37.Future<_i26.AgoraRoom>.value(_FakeAgoraRoom_50(
          this,
          Invocation.getter(#connectionFuture),
        )),
        returnValueForMissingStub:
            _i37.Future<_i26.AgoraRoom>.value(_FakeAgoraRoom_50(
          this,
          Invocation.getter(#connectionFuture),
        )),
      ) as _i37.Future<_i26.AgoraRoom>);

  @override
  bool get audioEnabled => (super.noSuchMethod(
        Invocation.getter(#audioEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get videoEnabled => (super.noSuchMethod(
        Invocation.getter(#videoEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i26.AgoraParticipant> get handRaisedParticipants => (super.noSuchMethod(
        Invocation.getter(#handRaisedParticipants),
        returnValue: <_i26.AgoraParticipant>[],
        returnValueForMissingStub: <_i26.AgoraParticipant>[],
      ) as List<_i26.AgoraParticipant>);

  @override
  bool get isLocalSharingScreenActive => (super.noSuchMethod(
        Invocation.getter(#isLocalSharingScreenActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i26.AgoraParticipant> get participants => (super.noSuchMethod(
        Invocation.getter(#participants),
        returnValue: <_i26.AgoraParticipant>[],
        returnValueForMissingStub: <_i26.AgoraParticipant>[],
      ) as List<_i26.AgoraParticipant>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void setConnectError(String? error) => super.noSuchMethod(
        Invocation.method(
          #setConnectError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> toggleVideoEnabled({
    bool? setEnabled,
    bool? updateProvider = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleVideoEnabled,
          [],
          {
            #setEnabled: setEnabled,
            #updateProvider: updateProvider,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleAudioEnabled({
    bool? setEnabled,
    bool? updateProvider = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleAudioEnabled,
          [],
          {
            #setEnabled: setEnabled,
            #updateProvider: updateProvider,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleScreenShare({bool? setEnabled}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleScreenShare,
          [],
          {#setEnabled: setEnabled},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> onConnected(_i26.AgoraRoom? room) => (super.noSuchMethod(
        Invocation.method(
          #onConnected,
          [room],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void onLocalParticipantChanges() => super.noSuchMethod(
        Invocation.method(
          #onLocalParticipantChanges,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParticipantConnected() => super.noSuchMethod(
        Invocation.method(
          #onParticipantConnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParticipantDisconnected() => super.noSuchMethod(
        Invocation.method(
          #onParticipantDisconnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Event].
///
/// See the documentation for Mockito's code generation for more information.
class MockEvent extends _i1.Mock implements _i2.Event {
  @override
  _i2.EventType get eventType => (super.noSuchMethod(
        Invocation.getter(#eventType),
        returnValue: _i2.EventType.hosted,
        returnValueForMissingStub: _i2.EventType.hosted,
      ) as _i2.EventType);

  @override
  bool get useParticipantCountEstimate => (super.noSuchMethod(
        Invocation.getter(#useParticipantCountEstimate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLiveStream => (super.noSuchMethod(
        Invocation.getter(#isLiveStream),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isHosted => (super.noSuchMethod(
        Invocation.getter(#isHosted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasPreEventData => (super.noSuchMethod(
        Invocation.getter(#hasPreEventData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasPostEventData => (super.noSuchMethod(
        Invocation.getter(#hasPostEventData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get fullPath => (super.noSuchMethod(
        Invocation.getter(#fullPath),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#fullPath),
        ),
      ) as String);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.EventStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i2.EventStatus.active,
        returnValueForMissingStub: _i2.EventStatus.active,
      ) as _i2.EventStatus);

  @override
  String get collectionPath => (super.noSuchMethod(
        Invocation.getter(#collectionPath),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#collectionPath),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#collectionPath),
        ),
      ) as String);

  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  String get templateId => (super.noSuchMethod(
        Invocation.getter(#templateId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
      ) as String);

  @override
  String get creatorId => (super.noSuchMethod(
        Invocation.getter(#creatorId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
      ) as String);

  @override
  bool get isPublic => (super.noSuchMethod(
        Invocation.getter(#isPublic),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i2.AgendaItem> get agendaItems => (super.noSuchMethod(
        Invocation.getter(#agendaItems),
        returnValue: <_i2.AgendaItem>[],
        returnValueForMissingStub: <_i2.AgendaItem>[],
      ) as List<_i2.AgendaItem>);

  @override
  bool get isLocked => (super.noSuchMethod(
        Invocation.getter(#isLocked),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get durationInMinutes => (super.noSuchMethod(
        Invocation.getter(#durationInMinutes),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i2.$EventCopyWith<_i2.Event> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$EventCopyWith_51<_i2.Event>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$EventCopyWith_51<_i2.Event>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$EventCopyWith<_i2.Event>);

  @override
  Duration timeUntilScheduledStart(DateTime? now) => (super.noSuchMethod(
        Invocation.method(
          #timeUntilScheduledStart,
          [now],
        ),
        returnValue: _FakeDuration_9(
          this,
          Invocation.method(
            #timeUntilScheduledStart,
            [now],
          ),
        ),
        returnValueForMissingStub: _FakeDuration_9(
          this,
          Invocation.method(
            #timeUntilScheduledStart,
            [now],
          ),
        ),
      ) as Duration);

  @override
  Duration timeUntilWaitingRoomFinished(DateTime? now) => (super.noSuchMethod(
        Invocation.method(
          #timeUntilWaitingRoomFinished,
          [now],
        ),
        returnValue: _FakeDuration_9(
          this,
          Invocation.method(
            #timeUntilWaitingRoomFinished,
            [now],
          ),
        ),
        returnValueForMissingStub: _FakeDuration_9(
          this,
          Invocation.method(
            #timeUntilWaitingRoomFinished,
            [now],
          ),
        ),
      ) as Duration);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [EventPageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventPageProvider extends _i1.Mock implements _i28.EventPageProvider {
  @override
  _i11.EventProvider get eventProvider => (super.noSuchMethod(
        Invocation.getter(#eventProvider),
        returnValue: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
        returnValueForMissingStub: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
      ) as _i11.EventProvider);

  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i27.NavBarProvider get navBarProvider => (super.noSuchMethod(
        Invocation.getter(#navBarProvider),
        returnValue: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
        returnValueForMissingStub: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
      ) as _i27.NavBarProvider);

  @override
  bool get cancelParam => (super.noSuchMethod(
        Invocation.getter(#cancelParam),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isEnteredMeeting => (super.noSuchMethod(
        Invocation.getter(#isEnteredMeeting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isInstant => (super.noSuchMethod(
        Invocation.getter(#isInstant),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i75.CommunityTag> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <_i75.CommunityTag>[],
        returnValueForMissingStub: <_i75.CommunityTag>[],
      ) as List<_i75.CommunityTag>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<_i28.JoinEventResults> joinEvent({
    bool? showConfirm = true,
    bool? joinCommunity = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinEvent,
          [],
          {
            #showConfirm: showConfirm,
            #joinCommunity: joinCommunity,
          },
        ),
        returnValue:
            _i37.Future<_i28.JoinEventResults>.value(_FakeJoinEventResults_53(
          this,
          Invocation.method(
            #joinEvent,
            [],
            {
              #showConfirm: showConfirm,
              #joinCommunity: joinCommunity,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i28.JoinEventResults>.value(_FakeJoinEventResults_53(
          this,
          Invocation.method(
            #joinEvent,
            [],
            {
              #showConfirm: showConfirm,
              #joinCommunity: joinCommunity,
            },
          ),
        )),
      ) as _i37.Future<_i28.JoinEventResults>);

  @override
  _i37.Future<void> enterMeeting(
          {List<_i2.BreakoutQuestion>? surveyQuestions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #enterMeeting,
          [],
          {#surveyQuestions: surveyQuestions},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<bool> cancelEvent() => (super.noSuchMethod(
        Invocation.method(
          #cancelEvent,
          [],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventPermissionsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventPermissionsProvider extends _i1.Mock
    implements _i76.EventPermissionsProvider {
  @override
  _i11.EventProvider get eventProvider => (super.noSuchMethod(
        Invocation.getter(#eventProvider),
        returnValue: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
        returnValueForMissingStub: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
      ) as _i11.EventProvider);

  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i29.CommunityPermissionsProvider get communityPermissions =>
      (super.noSuchMethod(
        Invocation.getter(#communityPermissions),
        returnValue: _FakeCommunityPermissionsProvider_54(
          this,
          Invocation.getter(#communityPermissions),
        ),
        returnValueForMissingStub: _FakeCommunityPermissionsProvider_54(
          this,
          Invocation.getter(#communityPermissions),
        ),
      ) as _i29.CommunityPermissionsProvider);

  @override
  bool get avCheckEnabled => (super.noSuchMethod(
        Invocation.getter(#avCheckEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get showTalkingTimeWarnings => (super.noSuchMethod(
        Invocation.getter(#showTalkingTimeWarnings),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isAgendaVisibleOverride => (super.noSuchMethod(
        Invocation.getter(#isAgendaVisibleOverride),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canDuplicateEvent => (super.noSuchMethod(
        Invocation.getter(#canDuplicateEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canRefreshGuide => (super.noSuchMethod(
        Invocation.getter(#canRefreshGuide),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canChat => (super.noSuchMethod(
        Invocation.getter(#canChat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canEditEvent => (super.noSuchMethod(
        Invocation.getter(#canEditEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canDownloadRegistrationData => (super.noSuchMethod(
        Invocation.getter(#canDownloadRegistrationData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canModerateSuggestions => (super.noSuchMethod(
        Invocation.getter(#canModerateSuggestions),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canCancelEvent => (super.noSuchMethod(
        Invocation.getter(#canCancelEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canAccessAdminTabInEvent => (super.noSuchMethod(
        Invocation.getter(#canAccessAdminTabInEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canEditEventTitle => (super.noSuchMethod(
        Invocation.getter(#canEditEventTitle),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canStartEvent => (super.noSuchMethod(
        Invocation.getter(#canStartEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canCancelParticipation => (super.noSuchMethod(
        Invocation.getter(#canCancelParticipation),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canJoinEvent => (super.noSuchMethod(
        Invocation.getter(#canJoinEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canBroadcastChat => (super.noSuchMethod(
        Invocation.getter(#canBroadcastChat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canPinItemInParticipantWidget => (super.noSuchMethod(
        Invocation.getter(#canPinItemInParticipantWidget),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canParticipate => (super.noSuchMethod(
        Invocation.getter(#canParticipate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool canMuteParticipantInParticipantWidget(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #canMuteParticipantInParticipantWidget,
          [userId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canKickParticipantInParticipantWidget(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #canKickParticipantInParticipantWidget,
          [userId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canDeleteEventMessage(_i74.ChatMessage? message) => (super.noSuchMethod(
        Invocation.method(
          #canDeleteEventMessage,
          [message],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canDeleteSuggestedItem(_i2.SuggestedAgendaItem? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #canDeleteSuggestedItem,
          [item],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canRemoveParticipant(_i2.Participant? participant) =>
      (super.noSuchMethod(
        Invocation.method(
          #canRemoveParticipant,
          [participant],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventProvider extends _i1.Mock implements _i11.EventProvider {
  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  String get templateId => (super.noSuchMethod(
        Invocation.getter(#templateId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
      ) as String);

  @override
  String get eventId => (super.noSuchMethod(
        Invocation.getter(#eventId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#eventId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#eventId),
        ),
      ) as String);

  @override
  _i2.BreakoutRoomDefinition get defaultBreakoutRoomDefinition =>
      (super.noSuchMethod(
        Invocation.getter(#defaultBreakoutRoomDefinition),
        returnValue: _FakeBreakoutRoomDefinition_55(
          this,
          Invocation.getter(#defaultBreakoutRoomDefinition),
        ),
        returnValueForMissingStub: _FakeBreakoutRoomDefinition_55(
          this,
          Invocation.getter(#defaultBreakoutRoomDefinition),
        ),
      ) as _i2.BreakoutRoomDefinition);

  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  _i37.Stream<List<_i2.Event>> get upcomingEventsStream => (super.noSuchMethod(
        Invocation.getter(#upcomingEventsStream),
        returnValue: _i37.Stream<List<_i2.Event>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i2.Event>>.empty(),
      ) as _i37.Stream<List<_i2.Event>>);

  @override
  List<_i2.Event> get upcomingEvents => (super.noSuchMethod(
        Invocation.getter(#upcomingEvents),
        returnValue: <_i2.Event>[],
        returnValueForMissingStub: <_i2.Event>[],
      ) as List<_i2.Event>);

  @override
  _i37.Stream<List<_i39.Template>> get templatesStream => (super.noSuchMethod(
        Invocation.getter(#templatesStream),
        returnValue: _i37.Stream<List<_i39.Template>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i39.Template>>.empty(),
      ) as _i37.Stream<List<_i39.Template>>);

  @override
  _i37.Stream<_i2.Event> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i37.Stream<_i2.Event>.empty(),
        returnValueForMissingStub: _i37.Stream<_i2.Event>.empty(),
      ) as _i37.Stream<_i2.Event>);

  @override
  _i37.Future<_i2.PrivateLiveStreamInfo?> get privateLiveStreamInfo =>
      (super.noSuchMethod(
        Invocation.getter(#privateLiveStreamInfo),
        returnValue: _i37.Future<_i2.PrivateLiveStreamInfo?>.value(),
        returnValueForMissingStub:
            _i37.Future<_i2.PrivateLiveStreamInfo?>.value(),
      ) as _i37.Future<_i2.PrivateLiveStreamInfo?>);

  @override
  _i2.Event get event => (super.noSuchMethod(
        Invocation.getter(#event),
        returnValue: _FakeEvent_56(
          this,
          Invocation.getter(#event),
        ),
        returnValueForMissingStub: _FakeEvent_56(
          this,
          Invocation.getter(#event),
        ),
      ) as _i2.Event);

  @override
  List<_i2.Participant> get eventParticipants => (super.noSuchMethod(
        Invocation.getter(#eventParticipants),
        returnValue: <_i2.Participant>[],
        returnValueForMissingStub: <_i2.Participant>[],
      ) as List<_i2.Participant>);

  @override
  bool get isParticipant => (super.noSuchMethod(
        Invocation.getter(#isParticipant),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isBanned => (super.noSuchMethod(
        Invocation.getter(#isBanned),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLiveStream => (super.noSuchMethod(
        Invocation.getter(#isLiveStream),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasAttendedPrerequisite => (super.noSuchMethod(
        Invocation.getter(#hasAttendedPrerequisite),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i2.Participant> get fakeLiveStreamParticipantsList =>
      (super.noSuchMethod(
        Invocation.getter(#fakeLiveStreamParticipantsList),
        returnValue: <_i2.Participant>[],
        returnValueForMissingStub: <_i2.Participant>[],
      ) as List<_i2.Participant>);

  @override
  _i37.Future<bool> get hasParticipantAttendedPrerequisiteFuture =>
      (super.noSuchMethod(
        Invocation.getter(#hasParticipantAttendedPrerequisiteFuture),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  bool get showSmartMatchingForBreakouts => (super.noSuchMethod(
        Invocation.getter(#showSmartMatchingForBreakouts),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enablePrerequisites => (super.noSuchMethod(
        Invocation.getter(#enablePrerequisites),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableChat => (super.noSuchMethod(
        Invocation.getter(#enableChat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableTalkingTimer => (super.noSuchMethod(
        Invocation.getter(#enableTalkingTimer),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableFloatingChat => (super.noSuchMethod(
        Invocation.getter(#enableFloatingChat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get allowPredefineBreakoutsOnHosted => (super.noSuchMethod(
        Invocation.getter(#allowPredefineBreakoutsOnHosted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableScreenshare => (super.noSuchMethod(
        Invocation.getter(#enableScreenshare),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get defaultStageView => (super.noSuchMethod(
        Invocation.getter(#defaultStageView),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get enableBreakoutsByCategory => (super.noSuchMethod(
        Invocation.getter(#enableBreakoutsByCategory),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get agendaPreview => (super.noSuchMethod(
        Invocation.getter(#agendaPreview),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get useParticipantCountEstimate => (super.noSuchMethod(
        Invocation.getter(#useParticipantCountEstimate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get participantCount => (super.noSuchMethod(
        Invocation.getter(#participantCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get presentParticipantCount => (super.noSuchMethod(
        Invocation.getter(#presentParticipantCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> updateEventSettings(_i2.EventSettings? newSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEventSettings,
          [newSettings],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> refreshEvent(
    _i39.Template? template,
    _i2.Event? event,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshEvent,
          [
            template,
            event,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> cancelParticipation({required String? participantId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelParticipation,
          [],
          {#participantId: participantId},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> generateRegistrationDataCsvFile({
    required List<_i77.MemberDetails>? registrationData,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateRegistrationDataCsvFile,
          [],
          {
            #registrationData: registrationData,
            #eventId: eventId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> generateChatAndSugguestionsDataCsv({
    required _i17.GetMeetingChatsSuggestionsDataResponse? response,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateChatAndSugguestionsDataCsv,
          [],
          {
            #response: response,
            #eventId: eventId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventSettingsPresenterHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventSettingsPresenterHelper extends _i1.Mock
    implements _i78.EventSettingsPresenterHelper {
  @override
  bool wereChangesMade(_i79.EventSettingsModel? model) => (super.noSuchMethod(
        Invocation.method(
          #wereChangesMade,
          [model],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [EventSettingsView].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventSettingsView extends _i1.Mock implements _i80.EventSettingsView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void closeDrawer() => super.noSuchMethod(
        Invocation.method(
          #closeDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DiscussionThread].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscussionThread extends _i1.Mock implements _i30.DiscussionThread {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get creatorId => (super.noSuchMethod(
        Invocation.getter(#creatorId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
      ) as String);

  @override
  List<String> get likedByIds => (super.noSuchMethod(
        Invocation.getter(#likedByIds),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get dislikedByIds => (super.noSuchMethod(
        Invocation.getter(#dislikedByIds),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<_i32.Emotion> get emotions => (super.noSuchMethod(
        Invocation.getter(#emotions),
        returnValue: <_i32.Emotion>[],
        returnValueForMissingStub: <_i32.Emotion>[],
      ) as List<_i32.Emotion>);

  @override
  String get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#content),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#content),
        ),
      ) as String);

  @override
  bool get isDeleted => (super.noSuchMethod(
        Invocation.getter(#isDeleted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get commentCount => (super.noSuchMethod(
        Invocation.getter(#commentCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i30.$DiscussionThreadCopyWith<_i30.DiscussionThread> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$DiscussionThreadCopyWith_57<_i30.DiscussionThread>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$DiscussionThreadCopyWith_57<_i30.DiscussionThread>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i30.$DiscussionThreadCopyWith<_i30.DiscussionThread>);

  @override
  int getLikeDislikeCount() => (super.noSuchMethod(
        Invocation.method(
          #getLikeDislikeCount,
          [],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool isLiked(
    bool? isSignedIn,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLiked,
          [
            isSignedIn,
            userId,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isDisliked(
    bool? isSignedIn,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isDisliked,
          [
            isSignedIn,
            userId,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [DiscussionThreadComment].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscussionThreadComment extends _i1.Mock
    implements _i31.DiscussionThreadComment {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get creatorId => (super.noSuchMethod(
        Invocation.getter(#creatorId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
      ) as String);

  @override
  String get comment => (super.noSuchMethod(
        Invocation.getter(#comment),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#comment),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#comment),
        ),
      ) as String);

  @override
  bool get isDeleted => (super.noSuchMethod(
        Invocation.getter(#isDeleted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i32.Emotion> get emotions => (super.noSuchMethod(
        Invocation.getter(#emotions),
        returnValue: <_i32.Emotion>[],
        returnValueForMissingStub: <_i32.Emotion>[],
      ) as List<_i32.Emotion>);

  @override
  _i31.$DiscussionThreadCommentCopyWith<_i31.DiscussionThreadComment>
      get copyWith => (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$DiscussionThreadCommentCopyWith_58<
                _i31.DiscussionThreadComment>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub: _Fake$DiscussionThreadCommentCopyWith_58<
                _i31.DiscussionThreadComment>(
              this,
              Invocation.getter(#copyWith),
            ),
          ) as _i31
              .$DiscussionThreadCommentCopyWith<_i31.DiscussionThreadComment>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [DiscussionThreadView].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscussionThreadView extends _i1.Mock
    implements _i81.DiscussionThreadView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scrollToComments() => super.noSuchMethod(
        Invocation.method(
          #scrollToComments,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DiscussionThreadsHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscussionThreadsHelper extends _i1.Mock
    implements _i82.DiscussionThreadsHelper {
  @override
  _i37.Future<_i30.DiscussionThread?> addNewDiscussionThread({
    required String? discussionThreadContent,
    required String? userId,
    String? pickedImageUrl,
    required String? documentId,
    required _i83.MediaHelperService? mediaHelperService,
    required void Function(String)? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewDiscussionThread,
          [],
          {
            #discussionThreadContent: discussionThreadContent,
            #userId: userId,
            #pickedImageUrl: pickedImageUrl,
            #documentId: documentId,
            #mediaHelperService: mediaHelperService,
            #onError: onError,
          },
        ),
        returnValue: _i37.Future<_i30.DiscussionThread?>.value(),
        returnValueForMissingStub: _i37.Future<_i30.DiscussionThread?>.value(),
      ) as _i37.Future<_i30.DiscussionThread?>);

  @override
  _i37.Future<_i30.DiscussionThread?> updateDiscussionThread({
    required _i30.DiscussionThread? existingDiscussionThread,
    required String? discussionThreadContent,
    String? pickedImageUrl,
    required _i83.MediaHelperService? generalHelperService,
    required void Function(String)? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDiscussionThread,
          [],
          {
            #existingDiscussionThread: existingDiscussionThread,
            #discussionThreadContent: discussionThreadContent,
            #pickedImageUrl: pickedImageUrl,
            #generalHelperService: generalHelperService,
            #onError: onError,
          },
        ),
        returnValue: _i37.Future<_i30.DiscussionThread?>.value(),
        returnValueForMissingStub: _i37.Future<_i30.DiscussionThread?>.value(),
      ) as _i37.Future<_i30.DiscussionThread?>);
}

/// A class which mocks [DiscussionThreadsView].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscussionThreadsView extends _i1.Mock
    implements _i84.DiscussionThreadsView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DocumentReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockDocumentReference<T extends Object?> extends _i1.Mock
    implements _i22.DocumentReference<T> {
  @override
  _i22.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i22.FirebaseFirestore);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i22.CollectionReference<T> get parent => (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeCollectionReference_42<T>(
          this,
          Invocation.getter(#parent),
        ),
        returnValueForMissingStub: _FakeCollectionReference_42<T>(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i22.CollectionReference<T>);

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  _i22.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i22.CollectionReference<Map<String, dynamic>>);

  @override
  _i37.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> update(Map<Object, Object?>? data) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [data],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i22.DocumentSnapshot<T>> get([_i36.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue: _i37.Future<_i22.DocumentSnapshot<T>>.value(
            _FakeDocumentSnapshot_59<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i22.DocumentSnapshot<T>>.value(
            _FakeDocumentSnapshot_59<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i37.Future<_i22.DocumentSnapshot<T>>);

  @override
  _i37.Stream<_i22.DocumentSnapshot<T>> snapshots({
    bool? includeMetadataChanges = false,
    _i36.ListenSource? source = _i36.ListenSource.defaultSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {
            #includeMetadataChanges: includeMetadataChanges,
            #source: source,
          },
        ),
        returnValue: _i37.Stream<_i22.DocumentSnapshot<T>>.empty(),
        returnValueForMissingStub:
            _i37.Stream<_i22.DocumentSnapshot<T>>.empty(),
      ) as _i37.Stream<_i22.DocumentSnapshot<T>>);

  @override
  _i37.Future<void> set(
    T? data, [
    _i36.SetOptions? options,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            data,
            options,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i22.DocumentReference<R> withConverter<R>({
    required _i22.FromFirestore<R>? fromFirestore,
    required _i22.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeDocumentReference_41<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDocumentReference_41<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i22.DocumentReference<R>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i22.DocumentSnapshot<T> {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i22.DocumentReference<T> get reference => (super.noSuchMethod(
        Invocation.getter(#reference),
        returnValue: _FakeDocumentReference_41<T>(
          this,
          Invocation.getter(#reference),
        ),
        returnValueForMissingStub: _FakeDocumentReference_41<T>(
          this,
          Invocation.getter(#reference),
        ),
      ) as _i22.DocumentReference<T>);

  @override
  _i22.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_60(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeSnapshotMetadata_60(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i22.SnapshotMetadata);

  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  dynamic get(Object? field) => super.noSuchMethod(
        Invocation.method(
          #get,
          [field],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic operator [](Object? field) => super.noSuchMethod(
        Invocation.method(
          #[],
          [field],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EditEventPresenterHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditEventPresenterHelper extends _i1.Mock
    implements _i85.EditEventPresenterHelper {
  @override
  String? areChangesValid(_i2.Event? event) => (super.noSuchMethod(
        Invocation.method(
          #areChangesValid,
          [event],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  bool wereChangesMade(_i86.EditEventModel? model) => (super.noSuchMethod(
        Invocation.method(
          #wereChangesMade,
          [model],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [EditEventView].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditEventView extends _i1.Mock implements _i87.EditEventView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void closeDrawer() => super.noSuchMethod(
        Invocation.method(
          #closeDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Emotion].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmotion extends _i1.Mock implements _i32.Emotion {
  @override
  String get creatorId => (super.noSuchMethod(
        Invocation.getter(#creatorId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#creatorId),
        ),
      ) as String);

  @override
  _i32.EmotionType get emotionType => (super.noSuchMethod(
        Invocation.getter(#emotionType),
        returnValue: _i32.EmotionType.thumbsUp,
        returnValueForMissingStub: _i32.EmotionType.thumbsUp,
      ) as _i32.EmotionType);

  @override
  _i32.$EmotionCopyWith<_i32.Emotion> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$EmotionCopyWith_61<_i32.Emotion>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$EmotionCopyWith_61<_i32.Emotion>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i32.$EmotionCopyWith<_i32.Emotion>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [EmotionHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmotionHelper extends _i1.Mock implements _i88.EmotionHelper {
  @override
  _i32.Emotion? getMyEmotion(
    List<_i32.Emotion>? emotions,
    bool? isSignedIn,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyEmotion,
          [
            emotions,
            isSignedIn,
            userId,
          ],
        ),
        returnValueForMissingStub: null,
      ) as _i32.Emotion?);

  @override
  void updateBatch(
    _i22.DocumentReference<Object?>? documentReference,
    _i32.Emotion? existingEmotion,
    _i32.Emotion? emotion,
    _i22.WriteBatch? writeBatch,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateBatch,
          [
            documentReference,
            existingEmotion,
            emotion,
            writeBatch,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i35.FirebaseAuth {
  @override
  _i33.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_62(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_62(
          this,
          Invocation.getter(#app),
        ),
      ) as _i33.FirebaseApp);

  @override
  set app(_i33.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i37.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i34.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue:
            _i37.Future<_i34.ActionCodeInfo>.value(_FakeActionCodeInfo_63(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i34.ActionCodeInfo>.value(_FakeActionCodeInfo_63(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i37.Future<_i34.ActionCodeInfo>);

  @override
  _i37.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i35.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i37.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i37.Future<List<String>>.value(<String>[]),
      ) as _i37.Future<List<String>>);

  @override
  _i37.Future<_i35.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Stream<_i35.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i37.Stream<_i35.User?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i35.User?>.empty(),
      ) as _i37.Stream<_i35.User?>);

  @override
  _i37.Stream<_i35.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i37.Stream<_i35.User?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i35.User?>.empty(),
      ) as _i37.Stream<_i35.User?>);

  @override
  _i37.Stream<_i35.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i37.Stream<_i35.User?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i35.User?>.empty(),
      ) as _i37.Stream<_i35.User?>);

  @override
  _i37.Future<void> sendPasswordResetEmail({
    required String? email,
    _i34.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i34.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setPersistence(_i34.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i35.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithCredential(
          _i34.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithAuthProvider(
          _i34.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.UserCredential> signInWithProvider(
          _i34.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<_i35.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i35.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue: _i37.Future<_i35.ConfirmationResult>.value(
            _FakeConfirmationResult_65(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i35.ConfirmationResult>.value(
            _FakeConfirmationResult_65(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i37.Future<_i35.ConfirmationResult>);

  @override
  _i37.Future<_i35.UserCredential> signInWithPopup(
          _i34.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<void> signInWithRedirect(_i34.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i37.Future<String>);

  @override
  _i37.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i34.PhoneMultiFactorInfo? multiFactorInfo,
    required _i34.PhoneVerificationCompleted? verificationCompleted,
    required _i34.PhoneVerificationFailed? verificationFailed,
    required _i34.PhoneCodeSent? codeSent,
    required _i34.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i34.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i22.FirebaseFirestore {
  @override
  _i33.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_62(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_62(
          this,
          Invocation.getter(#app),
        ),
      ) as _i33.FirebaseApp);

  @override
  set app(_i33.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseURL => (super.noSuchMethod(
        Invocation.getter(#databaseURL),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
      ) as String);

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseId => (super.noSuchMethod(
        Invocation.getter(#databaseId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
      ) as String);

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
        Invocation.setter(
          #databaseId,
          _databaseId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settings(_i36.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i36.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_66(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettings_66(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i36.Settings);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i22.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i22.CollectionReference<Map<String, dynamic>>);

  @override
  _i22.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_67(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWriteBatch_67(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i22.WriteBatch);

  @override
  _i37.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> enablePersistence(
          [_i36.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i22.LoadBundleTask loadBundle(_i89.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_68(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
        returnValueForMissingStub: _FakeLoadBundleTask_68(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i22.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {
            #sslEnabled: sslEnabled,
            #automaticHostMapping: automaticHostMapping,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<_i22.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i36.GetOptions? options = const _i36.GetOptions(),
    required _i22.FromFirestore<T>? fromFirestore,
    required _i22.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryWithConverterGet,
          [name],
          {
            #options: options,
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
      ) as _i37.Future<_i22.QuerySnapshot<T>>);

  @override
  _i37.Future<_i22.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i36.GetOptions? options = const _i36.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue:
            _i37.Future<_i22.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_44<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i22.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_44<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i37.Future<_i22.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i22.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_43<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i22.Query<Map<String, dynamic>>);

  @override
  _i37.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i22.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i22.DocumentReference<Map<String, dynamic>>);

  @override
  _i37.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i37.Stream<void>.empty(),
        returnValueForMissingStub: _i37.Stream<void>.empty(),
      ) as _i37.Stream<void>);

  @override
  _i37.Future<T> runTransaction<T>(
    _i22.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setIndexConfiguration({
    required List<_i36.Index>? indexes,
    List<_i36.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfiguration,
          [],
          {
            #indexes: indexes,
            #fieldOverrides: fieldOverrides,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfigurationFromJSON,
          [json],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirestoreAgreementsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreAgreementsService extends _i1.Mock
    implements _i90.FirestoreAgreementsService {
  @override
  _i38.BehaviorSubjectWrapper<_i44.PartnerAgreement?> getAgreementStream(
          String? agreementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAgreementStream,
          [agreementId],
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<_i44.PartnerAgreement?>(
          this,
          Invocation.method(
            #getAgreementStream,
            [agreementId],
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<_i44.PartnerAgreement?>(
          this,
          Invocation.method(
            #getAgreementStream,
            [agreementId],
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<_i44.PartnerAgreement?>);

  @override
  _i37.Stream<_i44.PartnerAgreement?> getAgreementForCommunityStream(
          String? communityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAgreementForCommunityStream,
          [communityId],
        ),
        returnValue: _i37.Stream<_i44.PartnerAgreement?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i44.PartnerAgreement?>.empty(),
      ) as _i37.Stream<_i44.PartnerAgreement?>);
}

/// A class which mocks [FirestoreDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreDatabase extends _i1.Mock implements _i91.FirestoreDatabase {
  @override
  _i22.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i22.FirebaseFirestore);

  @override
  _i22.DocumentReference<Map<String, dynamic>> communityRef(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityRef,
          [id],
        ),
        returnValue: _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #communityRef,
            [id],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #communityRef,
            [id],
          ),
        ),
      ) as _i22.DocumentReference<Map<String, dynamic>>);

  @override
  _i22.CollectionReference<Map<String, dynamic>> templatesCollection(
          String? communityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #templatesCollection,
          [communityId],
        ),
        returnValue: _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #templatesCollection,
            [communityId],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #templatesCollection,
            [communityId],
          ),
        ),
      ) as _i22.CollectionReference<Map<String, dynamic>>);

  @override
  _i22.DocumentReference<Map<String, dynamic>> templateReference({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #templateReference,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #templateReference,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #templateReference,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
      ) as _i22.DocumentReference<Map<String, dynamic>>);

  @override
  String generateNewDocId({required String? collectionPath}) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateNewDocId,
          [],
          {#collectionPath: collectionPath},
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewDocId,
            [],
            {#collectionPath: collectionPath},
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewDocId,
            [],
            {#collectionPath: collectionPath},
          ),
        ),
      ) as String);

  @override
  _i37.Future<List<_i24.Community>> allPublicCommunities() =>
      (super.noSuchMethod(
        Invocation.method(
          #allPublicCommunities,
          [],
        ),
        returnValue:
            _i37.Future<List<_i24.Community>>.value(<_i24.Community>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i24.Community>>.value(<_i24.Community>[]),
      ) as _i37.Future<List<_i24.Community>>);

  @override
  _i37.Future<_i24.Community?> getCommunity(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getCommunity,
          [id],
        ),
        returnValue: _i37.Future<_i24.Community?>.value(),
        returnValueForMissingStub: _i37.Future<_i24.Community?>.value(),
      ) as _i37.Future<_i24.Community?>);

  @override
  _i37.Future<List<_i24.Community?>> getCommunityDocuments(
          List<String>? communityIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunityDocuments,
          [communityIds],
        ),
        returnValue:
            _i37.Future<List<_i24.Community?>>.value(<_i24.Community?>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i24.Community?>>.value(<_i24.Community?>[]),
      ) as _i37.Future<List<_i24.Community?>>);

  @override
  _i37.Stream<List<_i24.Community>> communitiesUserIsOwnerOf(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #communitiesUserIsOwnerOf,
          [userId],
        ),
        returnValue: _i37.Stream<List<_i24.Community>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i24.Community>>.empty(),
      ) as _i37.Stream<List<_i24.Community>>);

  @override
  String generateNewCommunityId() => (super.noSuchMethod(
        Invocation.method(
          #generateNewCommunityId,
          [],
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewCommunityId,
            [],
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewCommunityId,
            [],
          ),
        ),
      ) as String);

  @override
  _i38.BehaviorSubjectWrapper<_i24.Community> communityStream(
          String? displayId) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityStream,
          [displayId],
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<_i24.Community>(
          this,
          Invocation.method(
            #communityStream,
            [displayId],
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<_i24.Community>(
          this,
          Invocation.method(
            #communityStream,
            [displayId],
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<_i24.Community>);

  @override
  _i37.Future<List<_i39.Template>> allCommunityTemplates(
    String? communityId, {
    bool? includeRemovedTemplates = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #allCommunityTemplates,
          [communityId],
          {#includeRemovedTemplates: includeRemovedTemplates},
        ),
        returnValue: _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
      ) as _i37.Future<List<_i39.Template>>);

  @override
  _i37.Stream<bool> communityHasTemplatesStream(String? communityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityHasTemplatesStream,
          [communityId],
        ),
        returnValue: _i37.Stream<bool>.empty(),
        returnValueForMissingStub: _i37.Stream<bool>.empty(),
      ) as _i37.Stream<bool>);

  @override
  _i37.Stream<List<_i39.Template>> communityTemplatesStream(
          String? communityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityTemplatesStream,
          [communityId],
        ),
        returnValue: _i37.Stream<List<_i39.Template>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i39.Template>>.empty(),
      ) as _i37.Stream<List<_i39.Template>>);

  @override
  _i37.Future<_i39.Template?> getTemplate(
    String? communityId,
    String? templateId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTemplate,
          [
            communityId,
            templateId,
          ],
        ),
        returnValue: _i37.Future<_i39.Template?>.value(),
        returnValueForMissingStub: _i37.Future<_i39.Template?>.value(),
      ) as _i37.Future<_i39.Template?>);

  @override
  _i37.Future<_i39.Template> communityTemplate({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityTemplate,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _i37.Future<_i39.Template>.value(_FakeTemplate_71(
          this,
          Invocation.method(
            #communityTemplate,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i39.Template>.value(_FakeTemplate_71(
          this,
          Invocation.method(
            #communityTemplate,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        )),
      ) as _i37.Future<_i39.Template>);

  @override
  _i37.Stream<_i39.Template?> templateStream({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #templateStream,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _i37.Stream<_i39.Template?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i39.Template?>.empty(),
      ) as _i37.Stream<_i39.Template?>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i24.Featured>> getCommunityFeaturedItems(
          String? communityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunityFeaturedItems,
          [communityId],
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<List<_i24.Featured>>(
          this,
          Invocation.method(
            #getCommunityFeaturedItems,
            [communityId],
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<List<_i24.Featured>>(
          this,
          Invocation.method(
            #getCommunityFeaturedItems,
            [communityId],
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<List<_i24.Featured>>);

  @override
  _i37.Future<void> updateFeaturedItem({
    required String? communityId,
    required String? documentId,
    required _i24.Featured? featured,
    required bool? isFeatured,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFeaturedItem,
          [],
          {
            #communityId: communityId,
            #documentId: documentId,
            #featured: featured,
            #isFeatured: isFeatured,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i39.Template> createTemplate({
    required String? communityId,
    required _i39.Template? template,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTemplate,
          [],
          {
            #communityId: communityId,
            #template: template,
          },
        ),
        returnValue: _i37.Future<_i39.Template>.value(_FakeTemplate_71(
          this,
          Invocation.method(
            #createTemplate,
            [],
            {
              #communityId: communityId,
              #template: template,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i39.Template>.value(_FakeTemplate_71(
          this,
          Invocation.method(
            #createTemplate,
            [],
            {
              #communityId: communityId,
              #template: template,
            },
          ),
        )),
      ) as _i37.Future<_i39.Template>);

  @override
  _i37.Future<void> updateTemplate({
    required String? communityId,
    required _i39.Template? template,
    required Iterable<String>? keys,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTemplate,
          [],
          {
            #communityId: communityId,
            #template: template,
            #keys: keys,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> upsertTemplateAgendaItem({
    required String? communityId,
    required String? templateId,
    required _i2.AgendaItem? updatedItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertTemplateAgendaItem,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #updatedItem: updatedItem,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> deleteTemplateAgendaItem({
    required String? communityId,
    required String? templateId,
    required String? itemId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTemplateAgendaItem,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #itemId: itemId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateTemplateAgendaOrdering({
    required String? communityId,
    required String? templateId,
    required List<String>? ordering,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTemplateAgendaOrdering,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #ordering: ordering,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<List<_i39.Template>> getActiveTemplatesFromCommunities(
          List<String>? communityIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveTemplatesFromCommunities,
          [communityIds],
        ),
        returnValue: _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
      ) as _i37.Future<List<_i39.Template>>);

  @override
  _i37.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirestoreEventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreEventService extends _i1.Mock
    implements _i92.FirestoreEventService {
  @override
  _i37.Future<DateTime> get currentTimeAsync => (super.noSuchMethod(
        Invocation.getter(#currentTimeAsync),
        returnValue: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.getter(#currentTimeAsync),
        )),
        returnValueForMissingStub: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.getter(#currentTimeAsync),
        )),
      ) as _i37.Future<DateTime>);

  @override
  _i22.CollectionReference<Map<String, dynamic>> eventsCollection({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventsCollection,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventsCollection,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_42<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventsCollection,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
      ) as _i22.CollectionReference<Map<String, dynamic>>);

  @override
  _i22.DocumentReference<Map<String, dynamic>> eventReference({
    required String? communityId,
    required String? templateId,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventReference,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
          },
        ),
        returnValue: _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventReference,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_41<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventReference,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
      ) as _i22.DocumentReference<Map<String, dynamic>>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i2.Event>> communityEvents(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityEvents,
          [],
          {#communityId: communityId},
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #communityEvents,
            [],
            {#communityId: communityId},
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #communityEvents,
            [],
            {#communityId: communityId},
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<List<_i2.Event>>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i2.Event>> futurePublicEvents({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #futurePublicEvents,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #futurePublicEvents,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #futurePublicEvents,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
            },
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<List<_i2.Event>>);

  @override
  _i37.Future<List<_i2.Event>> getUpcomingPublicEventsFuture({
    required String? communityId,
    required String? templateId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingPublicEventsFuture,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
          },
        ),
        returnValue: _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i37.Future<List<_i2.Event>>);

  @override
  _i37.Future<List<_i2.Event>> allPublicEventsFuture([int? limit = 100]) =>
      (super.noSuchMethod(
        Invocation.method(
          #allPublicEventsFuture,
          [limit],
        ),
        returnValue: _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i37.Future<List<_i2.Event>>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i2.Event>> futurePublicEventsForCommunity(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #futurePublicEventsForCommunity,
          [],
          {#communityId: communityId},
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #futurePublicEventsForCommunity,
            [],
            {#communityId: communityId},
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<List<_i2.Event>>(
          this,
          Invocation.method(
            #futurePublicEventsForCommunity,
            [],
            {#communityId: communityId},
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<List<_i2.Event>>);

  @override
  _i37.Future<List<_i2.Event>> userEventsForCommunity() => (super.noSuchMethod(
        Invocation.method(
          #userEventsForCommunity,
          [],
        ),
        returnValue: _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i37.Future<List<_i2.Event>>);

  @override
  _i37.Future<bool> userHasParticipatedInTemplate(
          {required String? templateId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #userHasParticipatedInTemplate,
          [],
          {#templateId: templateId},
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i38.BehaviorSubjectWrapper<_i2.Event> eventStream({
    required String? communityId,
    required String? templateId,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventStream,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
          },
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<_i2.Event>(
          this,
          Invocation.method(
            #eventStream,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
        returnValueForMissingStub: _FakeBehaviorSubjectWrapper_70<_i2.Event>(
          this,
          Invocation.method(
            #eventStream,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<_i2.Event>);

  @override
  _i37.Stream<bool> communityHasEvents({required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #communityHasEvents,
          [],
          {#communityId: communityId},
        ),
        returnValue: _i37.Stream<bool>.empty(),
        returnValueForMissingStub: _i37.Stream<bool>.empty(),
      ) as _i37.Stream<bool>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i2.Participant>> eventParticipantsStream({
    required String? communityId,
    required String? templateId,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventParticipantsStream,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
          },
        ),
        returnValue: _FakeBehaviorSubjectWrapper_70<List<_i2.Participant>>(
          this,
          Invocation.method(
            #eventParticipantsStream,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubjectWrapper_70<List<_i2.Participant>>(
          this,
          Invocation.method(
            #eventParticipantsStream,
            [],
            {
              #communityId: communityId,
              #templateId: templateId,
              #eventId: eventId,
            },
          ),
        ),
      ) as _i38.BehaviorSubjectWrapper<List<_i2.Participant>>);

  @override
  _i37.Stream<_i2.Participant> eventParticipantStream({
    required String? communityId,
    required String? templateId,
    required String? eventId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventParticipantStream,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
            #userId: userId,
          },
        ),
        returnValue: _i37.Stream<_i2.Participant>.empty(),
        returnValueForMissingStub: _i37.Stream<_i2.Participant>.empty(),
      ) as _i37.Stream<_i2.Participant>);

  @override
  _i37.Future<List<_i2.Event>> getEventsFromPaths(
    String? communityId,
    List<String>? documentPaths,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventsFromPaths,
          [
            communityId,
            documentPaths,
          ],
        ),
        returnValue: _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i37.Future<List<_i2.Event>>);

  @override
  _i22.Query<Map<String, dynamic>> eventParticipantsQuery(
          {required _i2.Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventParticipantsQuery,
          [],
          {#event: event},
        ),
        returnValue: _FakeQuery_43<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventParticipantsQuery,
            [],
            {#event: event},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<Map<String, dynamic>>(
          this,
          Invocation.method(
            #eventParticipantsQuery,
            [],
            {#event: event},
          ),
        ),
      ) as _i22.Query<Map<String, dynamic>>);

  @override
  _i37.Future<List<_i2.Participant>> getEventParticipants(
          {required _i2.Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventParticipants,
          [],
          {#event: event},
        ),
        returnValue:
            _i37.Future<List<_i2.Participant>>.value(<_i2.Participant>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i2.Participant>>.value(<_i2.Participant>[]),
      ) as _i37.Future<List<_i2.Participant>>);

  @override
  _i37.Future<_i2.PrivateLiveStreamInfo?> liveStreamPrivateInfo(
          {required _i2.Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #liveStreamPrivateInfo,
          [],
          {#event: event},
        ),
        returnValue: _i37.Future<_i2.PrivateLiveStreamInfo?>.value(),
        returnValueForMissingStub:
            _i37.Future<_i2.PrivateLiveStreamInfo?>.value(),
      ) as _i37.Future<_i2.PrivateLiveStreamInfo?>);

  @override
  _i37.Future<_i2.Event> createEventIfNotExists({
    required _i2.Event? event,
    _i2.PrivateLiveStreamInfo? privateLiveStreamInfo,
    bool? record = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEventIfNotExists,
          [],
          {
            #event: event,
            #privateLiveStreamInfo: privateLiveStreamInfo,
            #record: record,
          },
        ),
        returnValue: _i37.Future<_i2.Event>.value(_FakeEvent_56(
          this,
          Invocation.method(
            #createEventIfNotExists,
            [],
            {
              #event: event,
              #privateLiveStreamInfo: privateLiveStreamInfo,
              #record: record,
            },
          ),
        )),
        returnValueForMissingStub: _i37.Future<_i2.Event>.value(_FakeEvent_56(
          this,
          Invocation.method(
            #createEventIfNotExists,
            [],
            {
              #event: event,
              #privateLiveStreamInfo: privateLiveStreamInfo,
              #record: record,
            },
          ),
        )),
      ) as _i37.Future<_i2.Event>);

  @override
  _i37.Future<void> updateEvent({
    required _i2.Event? event,
    required Iterable<String>? keys,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [],
          {
            #event: event,
            #keys: keys,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> addLiveStreamEventDetails({
    required _i2.Event? event,
    _i2.PrivateLiveStreamInfo? privateLiveStreamInfo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLiveStreamEventDetails,
          [],
          {
            #event: event,
            #privateLiveStreamInfo: privateLiveStreamInfo,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> joinEvent({
    required String? communityId,
    required String? templateId,
    required String? eventId,
    String? externalCommunityId,
    bool? setAttendeeStatus = true,
    _i93.SurveyDialogResult? breakoutRoomSurveyResults,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinEvent,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
            #externalCommunityId: externalCommunityId,
            #setAttendeeStatus: setAttendeeStatus,
            #breakoutRoomSurveyResults: breakoutRoomSurveyResults,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> removeParticipant({
    required String? communityId,
    required String? templateId,
    required String? eventId,
    required String? participantId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeParticipant,
          [],
          {
            #communityId: communityId,
            #templateId: templateId,
            #eventId: eventId,
            #participantId: participantId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> upsertAgendaItem({
    required _i2.Event? event,
    required _i2.AgendaItem? updatedItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertAgendaItem,
          [],
          {
            #event: event,
            #updatedItem: updatedItem,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setAgendaItemsLegacy({
    required _i2.Event? event,
    required List<_i2.AgendaItem>? agendaItems,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAgendaItemsLegacy,
          [],
          {
            #event: event,
            #agendaItems: agendaItems,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> deleteTemplateAgendaItem({
    required _i2.Event? event,
    required String? itemId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTemplateAgendaItem,
          [],
          {
            #event: event,
            #itemId: itemId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateAgendaOrdering({
    required _i2.Event? event,
    required List<String>? ordering,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAgendaOrdering,
          [],
          {
            #event: event,
            #ordering: ordering,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> kickParticipant({
    required _i2.Event? event,
    required String? kickedUserId,
    bool? lockRoom = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickParticipant,
          [],
          {
            #event: event,
            #kickedUserId: kickedUserId,
            #lockRoom: lockRoom,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateParticipantBreakoutSurveyAnswers({
    required _i2.Event? event,
    bool? lockRoom = false,
    required _i93.SurveyDialogResult? surveyDialogResult,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateParticipantBreakoutSurveyAnswers,
          [],
          {
            #event: event,
            #lockRoom: lockRoom,
            #surveyDialogResult: surveyDialogResult,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirestoreDiscussionThreadCommentsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreDiscussionThreadCommentsService extends _i1.Mock
    implements _i94.FirestoreDiscussionThreadCommentsService {
  @override
  String getPathToCollection({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPathToCollection,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToCollection,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToCollection,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
      ) as String);

  @override
  String getPathToDocument({
    required String? communityId,
    required String? discussionThreadId,
    required String? discussionThreadCommentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPathToDocument,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
            #discussionThreadCommentId: discussionThreadCommentId,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToDocument,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
              #discussionThreadCommentId: discussionThreadCommentId,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToDocument,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
              #discussionThreadCommentId: discussionThreadCommentId,
            },
          ),
        ),
      ) as String);

  @override
  String getNewDocumentId({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewDocumentId,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getNewDocumentId,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getNewDocumentId,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
      ) as String);

  @override
  _i37.Stream<List<_i31.DiscussionThreadComment>>
      getDiscussionThreadCommentsStream({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getDiscussionThreadCommentsStream,
              [],
              {
                #communityId: communityId,
                #discussionThreadId: discussionThreadId,
              },
            ),
            returnValue:
                _i37.Stream<List<_i31.DiscussionThreadComment>>.empty(),
            returnValueForMissingStub:
                _i37.Stream<List<_i31.DiscussionThreadComment>>.empty(),
          ) as _i37.Stream<List<_i31.DiscussionThreadComment>>);

  @override
  _i37.Stream<_i31.DiscussionThreadComment?>
      getMostRecentDiscussionThreadCommentsStream({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMostRecentDiscussionThreadCommentsStream,
              [],
              {
                #communityId: communityId,
                #discussionThreadId: discussionThreadId,
              },
            ),
            returnValue: _i37.Stream<_i31.DiscussionThreadComment?>.empty(),
            returnValueForMissingStub:
                _i37.Stream<_i31.DiscussionThreadComment?>.empty(),
          ) as _i37.Stream<_i31.DiscussionThreadComment?>);

  @override
  _i37.Future<void> addNewDiscussionThreadComment({
    required String? communityId,
    required String? discussionThreadId,
    required _i31.DiscussionThreadComment? discussionThreadComment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewDiscussionThreadComment,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
            #discussionThreadComment: discussionThreadComment,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> deleteDiscussionThreadComment({
    required String? communityId,
    required String? discussionThreadId,
    required _i31.DiscussionThreadComment? discussionThreadComment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDiscussionThreadComment,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
            #discussionThreadComment: discussionThreadComment,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateEmotion(
    _i32.Emotion? emotion, {
    required _i32.Emotion? existingEmotion,
    required String? communityId,
    required String? discussionThreadId,
    required _i31.DiscussionThreadComment? discussionThreadComment,
    required _i88.EmotionHelper? emotionHelper,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmotion,
          [emotion],
          {
            #existingEmotion: existingEmotion,
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
            #discussionThreadComment: discussionThreadComment,
            #emotionHelper: emotionHelper,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirestoreDiscussionThreadsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreDiscussionThreadsService extends _i1.Mock
    implements _i95.FirestoreDiscussionThreadsService {
  @override
  String getPathToCollection({required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPathToCollection,
          [],
          {#communityId: communityId},
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToCollection,
            [],
            {#communityId: communityId},
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToCollection,
            [],
            {#communityId: communityId},
          ),
        ),
      ) as String);

  @override
  String getPathToDocument({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPathToDocument,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToDocument,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getPathToDocument,
            [],
            {
              #communityId: communityId,
              #discussionThreadId: discussionThreadId,
            },
          ),
        ),
      ) as String);

  @override
  String getNewDocumentId(String? communityId) => (super.noSuchMethod(
        Invocation.method(
          #getNewDocumentId,
          [communityId],
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getNewDocumentId,
            [communityId],
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getNewDocumentId,
            [communityId],
          ),
        ),
      ) as String);

  @override
  _i37.Stream<List<_i30.DiscussionThread>> getDiscussionThreadsStream(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDiscussionThreadsStream,
          [],
          {#communityId: communityId},
        ),
        returnValue: _i37.Stream<List<_i30.DiscussionThread>>.empty(),
        returnValueForMissingStub:
            _i37.Stream<List<_i30.DiscussionThread>>.empty(),
      ) as _i37.Stream<List<_i30.DiscussionThread>>);

  @override
  _i37.Stream<_i30.DiscussionThread> getDiscussionThreadStream({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDiscussionThreadStream,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
          },
        ),
        returnValue: _i37.Stream<_i30.DiscussionThread>.empty(),
        returnValueForMissingStub: _i37.Stream<_i30.DiscussionThread>.empty(),
      ) as _i37.Stream<_i30.DiscussionThread>);

  @override
  _i37.Future<void> addNewDiscussionThread(
    String? communityId,
    _i30.DiscussionThread? discussionThread,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewDiscussionThread,
          [
            communityId,
            discussionThread,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateDiscussionThread(
    String? communityId,
    _i30.DiscussionThread? discussionThread,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDiscussionThread,
          [
            communityId,
            discussionThread,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> deleteDiscussionThread({
    required String? communityId,
    required String? discussionThreadId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDiscussionThread,
          [],
          {
            #communityId: communityId,
            #discussionThreadId: discussionThreadId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleLike(
    _i30.LikeType? likeType,
    String? userId, {
    required String? communityId,
    required _i30.DiscussionThread? discussionThread,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleLike,
          [
            likeType,
            userId,
          ],
          {
            #communityId: communityId,
            #discussionThread: discussionThread,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateEmotion(
    _i32.Emotion? emotion, {
    required _i32.Emotion? existingEmotion,
    required String? communityId,
    required _i30.DiscussionThread? discussionThread,
    required _i88.EmotionHelper? emotionHelper,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmotion,
          [emotion],
          {
            #existingEmotion: existingEmotion,
            #communityId: communityId,
            #discussionThread: discussionThread,
            #emotionHelper: emotionHelper,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [FirestoreMeetingGuideService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreMeetingGuideService extends _i1.Mock
    implements _i96.FirestoreMeetingGuideService {
  @override
  _i37.Stream<List<_i43.ParticipantAgendaItemDetails>>
      participantAgendaItemDetailsStream({
    required String? liveMeetingPath,
    required String? agendaItemId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #participantAgendaItemDetailsStream,
              [],
              {
                #liveMeetingPath: liveMeetingPath,
                #agendaItemId: agendaItemId,
              },
            ),
            returnValue:
                _i37.Stream<List<_i43.ParticipantAgendaItemDetails>>.empty(),
            returnValueForMissingStub:
                _i37.Stream<List<_i43.ParticipantAgendaItemDetails>>.empty(),
          ) as _i37.Stream<List<_i43.ParticipantAgendaItemDetails>>);

  @override
  _i37.Future<void> voteOnPoll({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    String? response,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #voteOnPoll,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #response: response,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> addWordCloudResponse({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required String? response,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWordCloudResponse,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #response: response,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> removeWordCloudResponse({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required String? response,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWordCloudResponse,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #response: response,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> addUserSuggestion({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required String? suggestion,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserSuggestion,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #suggestion: suggestion,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> removeUserSuggestion({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required _i43.MeetingUserSuggestion? meetingUserSuggestion,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserSuggestion,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #meetingUserSuggestion: meetingUserSuggestion,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleLikeInMeetingSuggestion(
    _i30.LikeType? likeType, {
    required String? agendaItemId,
    required String? creatorId,
    required String? voterId,
    required String? liveMeetingPath,
    required String? meetingUserSuggestionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleLikeInMeetingSuggestion,
          [likeType],
          {
            #agendaItemId: agendaItemId,
            #creatorId: creatorId,
            #voterId: voterId,
            #liveMeetingPath: liveMeetingPath,
            #meetingUserSuggestionId: meetingUserSuggestionId,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> toggleHandRaise({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required bool? isHandRaised,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleHandRaise,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #isHandRaised: isHandRaised,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateVideoPosition({
    required String? agendaItemId,
    required String? userId,
    required String? liveMeetingPath,
    required double? currentTime,
    required double? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVideoPosition,
          [],
          {
            #agendaItemId: agendaItemId,
            #userId: userId,
            #liveMeetingPath: liveMeetingPath,
            #currentTime: currentTime,
            #duration: duration,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [GlobalKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobalKey<T extends _i15.State<_i15.StatefulWidget>> extends _i1.Mock
    implements _i15.GlobalKey<T> {}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i97.ImagePicker {
  @override
  _i37.Future<_i40.XFile?> pickImage({
    required _i40.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i40.CameraDevice? preferredCameraDevice = _i40.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i37.Future<_i40.XFile?>.value(),
        returnValueForMissingStub: _i37.Future<_i40.XFile?>.value(),
      ) as _i37.Future<_i40.XFile?>);

  @override
  _i37.Future<List<_i40.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i37.Future<List<_i40.XFile>>.value(<_i40.XFile>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i40.XFile>>.value(<_i40.XFile>[]),
      ) as _i37.Future<List<_i40.XFile>>);

  @override
  _i37.Future<_i40.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i37.Future<_i40.XFile?>.value(),
        returnValueForMissingStub: _i37.Future<_i40.XFile?>.value(),
      ) as _i37.Future<_i40.XFile?>);

  @override
  _i37.Future<List<_i40.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i37.Future<List<_i40.XFile>>.value(<_i40.XFile>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i40.XFile>>.value(<_i40.XFile>[]),
      ) as _i37.Future<List<_i40.XFile>>);

  @override
  _i37.Future<_i40.XFile?> pickVideo({
    required _i40.ImageSource? source,
    _i40.CameraDevice? preferredCameraDevice = _i40.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i37.Future<_i40.XFile?>.value(),
        returnValueForMissingStub: _i37.Future<_i40.XFile?>.value(),
      ) as _i37.Future<_i40.XFile?>);

  @override
  _i37.Future<_i40.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i37.Future<_i40.LostDataResponse>.value(_FakeLostDataResponse_72(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i40.LostDataResponse>.value(_FakeLostDataResponse_72(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i37.Future<_i40.LostDataResponse>);

  @override
  bool supportsImageSource(_i40.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [CommunityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunityProvider extends _i1.Mock implements _i23.CommunityProvider {
  @override
  _i27.NavBarProvider get navBarProvider => (super.noSuchMethod(
        Invocation.getter(#navBarProvider),
        returnValue: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
        returnValueForMissingStub: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
      ) as _i27.NavBarProvider);

  @override
  bool get enableHostless => (super.noSuchMethod(
        Invocation.getter(#enableHostless),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i24.Community get community => (super.noSuchMethod(
        Invocation.getter(#community),
        returnValue: _FakeCommunity_73(
          this,
          Invocation.getter(#community),
        ),
        returnValueForMissingStub: _FakeCommunity_73(
          this,
          Invocation.getter(#community),
        ),
      ) as _i24.Community);

  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  String get displayId => (super.noSuchMethod(
        Invocation.getter(#displayId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#displayId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#displayId),
        ),
      ) as String);

  @override
  _i37.Stream<_i24.Community> get communityStream => (super.noSuchMethod(
        Invocation.getter(#communityStream),
        returnValue: _i37.Stream<_i24.Community>.empty(),
        returnValueForMissingStub: _i37.Stream<_i24.Community>.empty(),
      ) as _i37.Stream<_i24.Community>);

  @override
  _i37.Stream<List<_i24.Featured>> get featuredStream => (super.noSuchMethod(
        Invocation.getter(#featuredStream),
        returnValue: _i37.Stream<List<_i24.Featured>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i24.Featured>>.empty(),
      ) as _i37.Stream<List<_i24.Featured>>);

  @override
  _i38.BehaviorSubjectWrapper<List<_i98.CommunityResource>>
      get resourcesStream => (super.noSuchMethod(
            Invocation.getter(#resourcesStream),
            returnValue:
                _FakeBehaviorSubjectWrapper_70<List<_i98.CommunityResource>>(
              this,
              Invocation.getter(#resourcesStream),
            ),
            returnValueForMissingStub:
                _FakeBehaviorSubjectWrapper_70<List<_i98.CommunityResource>>(
              this,
              Invocation.getter(#resourcesStream),
            ),
          ) as _i38.BehaviorSubjectWrapper<List<_i98.CommunityResource>>);

  @override
  List<_i24.Featured> get featuredItems => (super.noSuchMethod(
        Invocation.getter(#featuredItems),
        returnValue: <_i24.Featured>[],
        returnValueForMissingStub: <_i24.Featured>[],
      ) as List<_i24.Featured>);

  @override
  bool get hasResources => (super.noSuchMethod(
        Invocation.getter(#hasResources),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasTemplates => (super.noSuchMethod(
        Invocation.getter(#hasTemplates),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i24.CommunitySettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeCommunitySettings_74(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeCommunitySettings_74(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i24.CommunitySettings);

  @override
  _i2.EventSettings get eventSettings => (super.noSuchMethod(
        Invocation.getter(#eventSettings),
        returnValue: _FakeEventSettings_75(
          this,
          Invocation.getter(#eventSettings),
        ),
        returnValueForMissingStub: _FakeEventSettings_75(
          this,
          Invocation.getter(#eventSettings),
        ),
      ) as _i2.EventSettings);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void loadResources() => super.noSuchMethod(
        Invocation.method(
          #loadResources,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> updateBanner(String? url) => (super.noSuchMethod(
        Invocation.method(
          #updateBanner,
          [url],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateProfilePic(String? url) => (super.noSuchMethod(
        Invocation.method(
          #updateProfilePic,
          [url],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<bool> donationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #donationsEnabled,
          [],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<bool> prePostEnabled() => (super.noSuchMethod(
        Invocation.method(
          #prePostEnabled,
          [],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<void> addNewOnboardingStep(_i24.OnboardingStep? onboardingStep) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewOnboardingStep,
          [onboardingStep],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  bool isOnboardingStepCompleted(_i24.OnboardingStep? onboardingStep) =>
      (super.noSuchMethod(
        Invocation.method(
          #isOnboardingStepCompleted,
          [onboardingStep],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LiveMeetingProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLiveMeetingProvider extends _i1.Mock
    implements _i12.LiveMeetingProvider {
  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i11.EventProvider get eventProvider => (super.noSuchMethod(
        Invocation.getter(#eventProvider),
        returnValue: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
        returnValueForMissingStub: _FakeEventProvider_11(
          this,
          Invocation.getter(#eventProvider),
        ),
      ) as _i11.EventProvider);

  @override
  _i27.NavBarProvider get navBarProvider => (super.noSuchMethod(
        Invocation.getter(#navBarProvider),
        returnValue: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
        returnValueForMissingStub: _FakeNavBarProvider_52(
          this,
          Invocation.getter(#navBarProvider),
        ),
      ) as _i27.NavBarProvider);

  @override
  bool get isInstant => (super.noSuchMethod(
        Invocation.getter(#isInstant),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  dynamic Function(
    String, {
    bool? hideOnMobile,
  }) get showToast => (super.noSuchMethod(
        Invocation.getter(#showToast),
        returnValue: (
          String __p0, {
          bool? hideOnMobile,
        }) =>
            null,
        returnValueForMissingStub: (
          String __p0, {
          bool? hideOnMobile,
        }) =>
            null,
      ) as dynamic Function(
        String, {
        bool? hideOnMobile,
      }));

  @override
  bool get shouldStartLocalVideoOn => (super.noSuchMethod(
        Invocation.getter(#shouldStartLocalVideoOn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set shouldStartLocalVideoOn(bool? _shouldStartLocalVideoOn) =>
      super.noSuchMethod(
        Invocation.setter(
          #shouldStartLocalVideoOn,
          _shouldStartLocalVideoOn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get shouldStartLocalAudioOn => (super.noSuchMethod(
        Invocation.getter(#shouldStartLocalAudioOn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set shouldStartLocalAudioOn(bool? _shouldStartLocalAudioOn) =>
      super.noSuchMethod(
        Invocation.setter(
          #shouldStartLocalAudioOn,
          _shouldStartLocalAudioOn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<bool> get canAutoplayLookupFuture => (super.noSuchMethod(
        Invocation.getter(#canAutoplayLookupFuture),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  set canAutoplayLookupFuture(_i37.Future<bool>? _canAutoplayLookupFuture) =>
      super.noSuchMethod(
        Invocation.setter(
          #canAutoplayLookupFuture,
          _canAutoplayLookupFuture,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.ConferenceRoomNotifier get conferenceRoomNotifier => (super.noSuchMethod(
        Invocation.getter(#conferenceRoomNotifier),
        returnValue: _FakeConferenceRoomNotifier_76(
          this,
          Invocation.getter(#conferenceRoomNotifier),
        ),
        returnValueForMissingStub: _FakeConferenceRoomNotifier_76(
          this,
          Invocation.getter(#conferenceRoomNotifier),
        ),
      ) as _i12.ConferenceRoomNotifier);

  @override
  bool get clickedEnterMeeting => (super.noSuchMethod(
        Invocation.getter(#clickedEnterMeeting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set clickedEnterMeeting(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #clickedEnterMeeting,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.MeetingUiState get activeUiState => (super.noSuchMethod(
        Invocation.getter(#activeUiState),
        returnValue: _i12.MeetingUiState.leftMeeting,
        returnValueForMissingStub: _i12.MeetingUiState.leftMeeting,
      ) as _i12.MeetingUiState);

  @override
  bool get showGuideCard => (super.noSuchMethod(
        Invocation.getter(#showGuideCard),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String> get presentParticipantIds => (super.noSuchMethod(
        Invocation.getter(#presentParticipantIds),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  bool get leftMeeting => (super.noSuchMethod(
        Invocation.getter(#leftMeeting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isInBreakout => (super.noSuchMethod(
        Invocation.getter(#isInBreakout),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get breakoutsActive => (super.noSuchMethod(
        Invocation.getter(#breakoutsActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get userLeftBreakouts => (super.noSuchMethod(
        Invocation.getter(#userLeftBreakouts),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isHost => (super.noSuchMethod(
        Invocation.getter(#isHost),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isMeetingStarted => (super.noSuchMethod(
        Invocation.getter(#isMeetingStarted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get eventPath => (super.noSuchMethod(
        Invocation.getter(#eventPath),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#eventPath),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#eventPath),
        ),
      ) as String);

  @override
  bool get assignedBreakoutRoomIsLoading => (super.noSuchMethod(
        Invocation.getter(#assignedBreakoutRoomIsLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get shouldBeInBreakout => (super.noSuchMethod(
        Invocation.getter(#shouldBeInBreakout),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get shouldBeInLiveStream => (super.noSuchMethod(
        Invocation.getter(#shouldBeInLiveStream),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get audioDefaultOn => (super.noSuchMethod(
        Invocation.getter(#audioDefaultOn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get videoDefaultOn => (super.noSuchMethod(
        Invocation.getter(#videoDefaultOn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get shouldBeInWaitingRoom => (super.noSuchMethod(
        Invocation.getter(#shouldBeInWaitingRoom),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get activeLiveMeetingPath => (super.noSuchMethod(
        Invocation.getter(#activeLiveMeetingPath),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#activeLiveMeetingPath),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#activeLiveMeetingPath),
        ),
      ) as String);

  @override
  set conferenceRoom(_i13.ConferenceRoom? value) => super.noSuchMethod(
        Invocation.setter(
          #conferenceRoom,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isMeetingCardMinimized => (super.noSuchMethod(
        Invocation.getter(#isMeetingCardMinimized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Stream<List<_i99.EventProposal>> get proposals => (super.noSuchMethod(
        Invocation.getter(#proposals),
        returnValue: _i37.Stream<List<_i99.EventProposal>>.empty(),
        returnValueForMissingStub:
            _i37.Stream<List<_i99.EventProposal>>.empty(),
      ) as _i37.Stream<List<_i99.EventProposal>>);

  @override
  bool get audioTemporarilyDisabled => (super.noSuchMethod(
        Invocation.getter(#audioTemporarilyDisabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void updateLiveMeetingViewType(_i12.LiveMeetingViewType? type) =>
      super.noSuchMethod(
        Invocation.method(
          #updateLiveMeetingViewType,
          [type],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> updateGuideCardIsMinimized({required bool? isMinimized}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGuideCardIsMinimized,
          [],
          {#isMinimized: isMinimized},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<_i17.GetMeetingJoinInfoResponse> getMeetingJoinInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeetingJoinInfo,
          [],
        ),
        returnValue: _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
            _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getMeetingJoinInfo,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
                _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getMeetingJoinInfo,
            [],
          ),
        )),
      ) as _i37.Future<_i17.GetMeetingJoinInfoResponse>);

  @override
  _i37.Future<_i19.BreakoutRoom> reassignBreakoutRoom({
    required String? userId,
    String? newRoomNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reassignBreakoutRoom,
          [],
          {
            #userId: userId,
            #newRoomNumber: newRoomNumber,
          },
        ),
        returnValue: _i37.Future<_i19.BreakoutRoom>.value(_FakeBreakoutRoom_35(
          this,
          Invocation.method(
            #reassignBreakoutRoom,
            [],
            {
              #userId: userId,
              #newRoomNumber: newRoomNumber,
            },
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i19.BreakoutRoom>.value(_FakeBreakoutRoom_35(
          this,
          Invocation.method(
            #reassignBreakoutRoom,
            [],
            {
              #userId: userId,
              #newRoomNumber: newRoomNumber,
            },
          ),
        )),
      ) as _i37.Future<_i19.BreakoutRoom>);

  @override
  _i37.Future<void> leaveMeeting() => (super.noSuchMethod(
        Invocation.method(
          #leaveMeeting,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void enterBreakoutRoom({String? roomId}) => super.noSuchMethod(
        Invocation.method(
          #enterBreakoutRoom,
          [],
          {#roomId: roomId},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void leaveBreakoutRoom() => super.noSuchMethod(
        Invocation.method(
          #leaveBreakoutRoom,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMeetingProviderParticipants(
    List<_i12.MeetingProviderParticipant>? participants, {
    bool? notify = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setMeetingProviderParticipants,
          [participants],
          {#notify: notify},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> muteAllParticipants() => (super.noSuchMethod(
        Invocation.method(
          #muteAllParticipants,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> mute({String? userId}) => (super.noSuchMethod(
        Invocation.method(
          #mute,
          [],
          {#userId: userId},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i17.GetMeetingJoinInfoResponse> getBreakoutRoomFuture(
          {required String? roomId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreakoutRoomFuture,
          [],
          {#roomId: roomId},
        ),
        returnValue: _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
            _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getBreakoutRoomFuture,
            [],
            {#roomId: roomId},
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i17.GetMeetingJoinInfoResponse>.value(
                _FakeGetMeetingJoinInfoResponse_31(
          this,
          Invocation.method(
            #getBreakoutRoomFuture,
            [],
            {#roomId: roomId},
          ),
        )),
      ) as _i37.Future<_i17.GetMeetingJoinInfoResponse>);

  @override
  _i37.Future<void> endBreakoutRooms() => (super.noSuchMethod(
        Invocation.method(
          #endBreakoutRooms,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> setAudioTemporarilyDisabled({required bool? disabled}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioTemporarilyDisabled,
          [],
          {#disabled: disabled},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> confirmProposeKick(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #confirmProposeKick,
          [userId],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> startBreakouts({
    required int? numPerRoom,
    required _i2.BreakoutAssignmentMethod? assignmentMethod,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startBreakouts,
          [],
          {
            #numPerRoom: numPerRoom,
            #assignmentMethod: assignmentMethod,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void refreshMeeting() => super.noSuchMethod(
        Invocation.method(
          #refreshMeeting,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoggingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggingService extends _i1.Mock implements _i100.LoggingService {
  @override
  void log(
    Object? message, {
    _i100.LogType? logType = _i100.LogType.debug,
    dynamic error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [message],
          {
            #logType: logType,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ManipulateDiscussionThreadView].
///
/// See the documentation for Mockito's code generation for more information.
class MockManipulateDiscussionThreadView extends _i1.Mock
    implements _i101.ManipulateDiscussionThreadView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType = _i65.ToastType.neutral,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTextEditingController() => super.noSuchMethod(
        Invocation.method(
          #updateTextEditingController,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void requestTextFocus() => super.noSuchMethod(
        Invocation.method(
          #requestTextFocus,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MediaHelperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaHelperService extends _i1.Mock
    implements _i83.MediaHelperService {
  @override
  _i37.Future<String?> pickVideoViaCloudinary() => (super.noSuchMethod(
        Invocation.method(
          #pickVideoViaCloudinary,
          [],
        ),
        returnValue: _i37.Future<String?>.value(),
        returnValueForMissingStub: _i37.Future<String?>.value(),
      ) as _i37.Future<String?>);

  @override
  _i37.Future<String?> pickImageViaCloudinary() => (super.noSuchMethod(
        Invocation.method(
          #pickImageViaCloudinary,
          [],
        ),
        returnValue: _i37.Future<String?>.value(),
        returnValueForMissingStub: _i37.Future<String?>.value(),
      ) as _i37.Future<String?>);

  @override
  _i37.Future<String?> pickMediaViaCloudinary({
    required String? uploadPreset,
    List<String>? clientAllowedFormats = const [
      r'image',
      r'mov',
      r'flv',
      r'mkv',
      r'ogv',
      r'mp4',
      r'webm',
    ],
    bool? cropping = false,
    double? croppingAspectRatio,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMediaViaCloudinary,
          [],
          {
            #uploadPreset: uploadPreset,
            #clientAllowedFormats: clientAllowedFormats,
            #cropping: cropping,
            #croppingAspectRatio: croppingAspectRatio,
          },
        ),
        returnValue: _i37.Future<String?>.value(),
        returnValueForMissingStub: _i37.Future<String?>.value(),
      ) as _i37.Future<String?>);

  @override
  String? getYoutubeVideoId(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getYoutubeVideoId,
          [url],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  String? getVimeoVideoId(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getVimeoVideoId,
          [url],
        ),
        returnValueForMissingStub: null,
      ) as String?);
}

/// A class which mocks [MediaQueryData].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockMediaQueryData extends _i1.Mock implements _i15.MediaQueryData {
  @override
  _i41.Size get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeSize_77(
          this,
          Invocation.getter(#size),
        ),
        returnValueForMissingStub: _FakeSize_77(
          this,
          Invocation.getter(#size),
        ),
      ) as _i41.Size);

  @override
  double get devicePixelRatio => (super.noSuchMethod(
        Invocation.getter(#devicePixelRatio),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i41.Brightness get platformBrightness => (super.noSuchMethod(
        Invocation.getter(#platformBrightness),
        returnValue: _i41.Brightness.dark,
        returnValueForMissingStub: _i41.Brightness.dark,
      ) as _i41.Brightness);

  @override
  _i15.EdgeInsets get viewInsets => (super.noSuchMethod(
        Invocation.getter(#viewInsets),
        returnValue: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#viewInsets),
        ),
        returnValueForMissingStub: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#viewInsets),
        ),
      ) as _i15.EdgeInsets);

  @override
  _i15.EdgeInsets get padding => (super.noSuchMethod(
        Invocation.getter(#padding),
        returnValue: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#padding),
        ),
        returnValueForMissingStub: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#padding),
        ),
      ) as _i15.EdgeInsets);

  @override
  _i15.EdgeInsets get viewPadding => (super.noSuchMethod(
        Invocation.getter(#viewPadding),
        returnValue: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#viewPadding),
        ),
        returnValueForMissingStub: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#viewPadding),
        ),
      ) as _i15.EdgeInsets);

  @override
  _i15.EdgeInsets get systemGestureInsets => (super.noSuchMethod(
        Invocation.getter(#systemGestureInsets),
        returnValue: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#systemGestureInsets),
        ),
        returnValueForMissingStub: _FakeEdgeInsets_78(
          this,
          Invocation.getter(#systemGestureInsets),
        ),
      ) as _i15.EdgeInsets);

  @override
  bool get alwaysUse24HourFormat => (super.noSuchMethod(
        Invocation.getter(#alwaysUse24HourFormat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get accessibleNavigation => (super.noSuchMethod(
        Invocation.getter(#accessibleNavigation),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get invertColors => (super.noSuchMethod(
        Invocation.getter(#invertColors),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get highContrast => (super.noSuchMethod(
        Invocation.getter(#highContrast),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get onOffSwitchLabels => (super.noSuchMethod(
        Invocation.getter(#onOffSwitchLabels),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get disableAnimations => (super.noSuchMethod(
        Invocation.getter(#disableAnimations),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get boldText => (super.noSuchMethod(
        Invocation.getter(#boldText),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i15.NavigationMode get navigationMode => (super.noSuchMethod(
        Invocation.getter(#navigationMode),
        returnValue: _i15.NavigationMode.traditional,
        returnValueForMissingStub: _i15.NavigationMode.traditional,
      ) as _i15.NavigationMode);

  @override
  _i42.DeviceGestureSettings get gestureSettings => (super.noSuchMethod(
        Invocation.getter(#gestureSettings),
        returnValue: _FakeDeviceGestureSettings_79(
          this,
          Invocation.getter(#gestureSettings),
        ),
        returnValueForMissingStub: _FakeDeviceGestureSettings_79(
          this,
          Invocation.getter(#gestureSettings),
        ),
      ) as _i42.DeviceGestureSettings);

  @override
  List<_i41.DisplayFeature> get displayFeatures => (super.noSuchMethod(
        Invocation.getter(#displayFeatures),
        returnValue: <_i41.DisplayFeature>[],
        returnValueForMissingStub: <_i41.DisplayFeature>[],
      ) as List<_i41.DisplayFeature>);

  @override
  double get textScaleFactor => (super.noSuchMethod(
        Invocation.getter(#textScaleFactor),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i15.TextScaler get textScaler => (super.noSuchMethod(
        Invocation.getter(#textScaler),
        returnValue: _FakeTextScaler_80(
          this,
          Invocation.getter(#textScaler),
        ),
        returnValueForMissingStub: _FakeTextScaler_80(
          this,
          Invocation.getter(#textScaler),
        ),
      ) as _i15.TextScaler);

  @override
  _i15.Orientation get orientation => (super.noSuchMethod(
        Invocation.getter(#orientation),
        returnValue: _i15.Orientation.portrait,
        returnValueForMissingStub: _i15.Orientation.portrait,
      ) as _i15.Orientation);

  @override
  _i15.MediaQueryData copyWith({
    _i41.Size? size,
    double? devicePixelRatio,
    double? textScaleFactor,
    _i15.TextScaler? textScaler,
    _i41.Brightness? platformBrightness,
    _i15.EdgeInsets? padding,
    _i15.EdgeInsets? viewPadding,
    _i15.EdgeInsets? viewInsets,
    _i15.EdgeInsets? systemGestureInsets,
    bool? alwaysUse24HourFormat,
    bool? highContrast,
    bool? onOffSwitchLabels,
    bool? disableAnimations,
    bool? invertColors,
    bool? accessibleNavigation,
    bool? boldText,
    _i15.NavigationMode? navigationMode,
    _i42.DeviceGestureSettings? gestureSettings,
    List<_i41.DisplayFeature>? displayFeatures,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #size: size,
            #devicePixelRatio: devicePixelRatio,
            #textScaleFactor: textScaleFactor,
            #textScaler: textScaler,
            #platformBrightness: platformBrightness,
            #padding: padding,
            #viewPadding: viewPadding,
            #viewInsets: viewInsets,
            #systemGestureInsets: systemGestureInsets,
            #alwaysUse24HourFormat: alwaysUse24HourFormat,
            #highContrast: highContrast,
            #onOffSwitchLabels: onOffSwitchLabels,
            #disableAnimations: disableAnimations,
            #invertColors: invertColors,
            #accessibleNavigation: accessibleNavigation,
            #boldText: boldText,
            #navigationMode: navigationMode,
            #gestureSettings: gestureSettings,
            #displayFeatures: displayFeatures,
          },
        ),
        returnValue: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #size: size,
              #devicePixelRatio: devicePixelRatio,
              #textScaleFactor: textScaleFactor,
              #textScaler: textScaler,
              #platformBrightness: platformBrightness,
              #padding: padding,
              #viewPadding: viewPadding,
              #viewInsets: viewInsets,
              #systemGestureInsets: systemGestureInsets,
              #alwaysUse24HourFormat: alwaysUse24HourFormat,
              #highContrast: highContrast,
              #onOffSwitchLabels: onOffSwitchLabels,
              #disableAnimations: disableAnimations,
              #invertColors: invertColors,
              #accessibleNavigation: accessibleNavigation,
              #boldText: boldText,
              #navigationMode: navigationMode,
              #gestureSettings: gestureSettings,
              #displayFeatures: displayFeatures,
            },
          ),
        ),
        returnValueForMissingStub: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #size: size,
              #devicePixelRatio: devicePixelRatio,
              #textScaleFactor: textScaleFactor,
              #textScaler: textScaler,
              #platformBrightness: platformBrightness,
              #padding: padding,
              #viewPadding: viewPadding,
              #viewInsets: viewInsets,
              #systemGestureInsets: systemGestureInsets,
              #alwaysUse24HourFormat: alwaysUse24HourFormat,
              #highContrast: highContrast,
              #onOffSwitchLabels: onOffSwitchLabels,
              #disableAnimations: disableAnimations,
              #invertColors: invertColors,
              #accessibleNavigation: accessibleNavigation,
              #boldText: boldText,
              #navigationMode: navigationMode,
              #gestureSettings: gestureSettings,
              #displayFeatures: displayFeatures,
            },
          ),
        ),
      ) as _i15.MediaQueryData);

  @override
  _i15.MediaQueryData removePadding({
    bool? removeLeft = false,
    bool? removeTop = false,
    bool? removeRight = false,
    bool? removeBottom = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePadding,
          [],
          {
            #removeLeft: removeLeft,
            #removeTop: removeTop,
            #removeRight: removeRight,
            #removeBottom: removeBottom,
          },
        ),
        returnValue: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removePadding,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removePadding,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
      ) as _i15.MediaQueryData);

  @override
  _i15.MediaQueryData removeViewInsets({
    bool? removeLeft = false,
    bool? removeTop = false,
    bool? removeRight = false,
    bool? removeBottom = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeViewInsets,
          [],
          {
            #removeLeft: removeLeft,
            #removeTop: removeTop,
            #removeRight: removeRight,
            #removeBottom: removeBottom,
          },
        ),
        returnValue: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeViewInsets,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeViewInsets,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
      ) as _i15.MediaQueryData);

  @override
  _i15.MediaQueryData removeViewPadding({
    bool? removeLeft = false,
    bool? removeTop = false,
    bool? removeRight = false,
    bool? removeBottom = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeViewPadding,
          [],
          {
            #removeLeft: removeLeft,
            #removeTop: removeTop,
            #removeRight: removeRight,
            #removeBottom: removeBottom,
          },
        ),
        returnValue: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeViewPadding,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeViewPadding,
            [],
            {
              #removeLeft: removeLeft,
              #removeTop: removeTop,
              #removeRight: removeRight,
              #removeBottom: removeBottom,
            },
          ),
        ),
      ) as _i15.MediaQueryData);

  @override
  _i15.MediaQueryData removeDisplayFeatures(_i41.Rect? subScreen) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeDisplayFeatures,
          [subScreen],
        ),
        returnValue: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeDisplayFeatures,
            [subScreen],
          ),
        ),
        returnValueForMissingStub: _FakeMediaQueryData_81(
          this,
          Invocation.method(
            #removeDisplayFeatures,
            [subScreen],
          ),
        ),
      ) as _i15.MediaQueryData);
}

/// A class which mocks [MeetingGuideCardItemUserSuggestionsView].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeetingGuideCardItemUserSuggestionsView extends _i1.Mock
    implements _i102.MeetingGuideCardItemUserSuggestionsView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MeetingGuideCardStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeetingGuideCardStore extends _i1.Mock
    implements _i25.MeetingGuideCardStore {
  @override
  _i23.CommunityProvider get communityProvider => (super.noSuchMethod(
        Invocation.getter(#communityProvider),
        returnValue: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
        returnValueForMissingStub: _FakeCommunityProvider_46(
          this,
          Invocation.getter(#communityProvider),
        ),
      ) as _i23.CommunityProvider);

  @override
  _i12.LiveMeetingProvider get liveMeetingProvider => (super.noSuchMethod(
        Invocation.getter(#liveMeetingProvider),
        returnValue: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
        returnValueForMissingStub: _FakeLiveMeetingProvider_12(
          this,
          Invocation.getter(#liveMeetingProvider),
        ),
      ) as _i12.LiveMeetingProvider);

  @override
  _i9.AgendaProvider get agendaProvider => (super.noSuchMethod(
        Invocation.getter(#agendaProvider),
        returnValue: _FakeAgendaProvider_48(
          this,
          Invocation.getter(#agendaProvider),
        ),
        returnValueForMissingStub: _FakeAgendaProvider_48(
          this,
          Invocation.getter(#agendaProvider),
        ),
      ) as _i9.AgendaProvider);

  @override
  dynamic Function(String) get showToast => (super.noSuchMethod(
        Invocation.getter(#showToast),
        returnValue: (String __p0) => null,
        returnValueForMissingStub: (String __p0) => null,
      ) as dynamic Function(String));

  @override
  Stopwatch get pendingMeetingGuideAgendaItemElapsed => (super.noSuchMethod(
        Invocation.getter(#pendingMeetingGuideAgendaItemElapsed),
        returnValue: _FakeStopwatch_82(
          this,
          Invocation.getter(#pendingMeetingGuideAgendaItemElapsed),
        ),
        returnValueForMissingStub: _FakeStopwatch_82(
          this,
          Invocation.getter(#pendingMeetingGuideAgendaItemElapsed),
        ),
      ) as Stopwatch);

  @override
  bool get meetingGuideCardIsPending => (super.noSuchMethod(
        Invocation.getter(#meetingGuideCardIsPending),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get guideCardTakeover => (super.noSuchMethod(
        Invocation.getter(#guideCardTakeover),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isPlayingVideo => (super.noSuchMethod(
        Invocation.getter(#isPlayingVideo),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool getHandIsRaised(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getHandIsRaised,
          [userId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  DateTime? getHandRaisedTime(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getHandRaisedTime,
          [userId],
        ),
        returnValueForMissingStub: null,
      ) as DateTime?);

  @override
  bool isReadyToAdvance(
    List<_i43.ParticipantAgendaItemDetails>? participantAgendaItemDetailsList,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isReadyToAdvance,
          [
            participantAgendaItemDetailsList,
            userId,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<void> goToPreviousAgendaItem() => (super.noSuchMethod(
        Invocation.method(
          #goToPreviousAgendaItem,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MeetingUserSuggestion].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeetingUserSuggestion extends _i1.Mock
    implements _i43.MeetingUserSuggestion {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get suggestion => (super.noSuchMethod(
        Invocation.getter(#suggestion),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#suggestion),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#suggestion),
        ),
      ) as String);

  @override
  List<String> get likedByIds => (super.noSuchMethod(
        Invocation.getter(#likedByIds),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get dislikedByIds => (super.noSuchMethod(
        Invocation.getter(#dislikedByIds),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  _i43.$MeetingUserSuggestionCopyWith<_i43.MeetingUserSuggestion>
      get copyWith => (super.noSuchMethod(
            Invocation.getter(#copyWith),
            returnValue: _Fake$MeetingUserSuggestionCopyWith_83<
                _i43.MeetingUserSuggestion>(
              this,
              Invocation.getter(#copyWith),
            ),
            returnValueForMissingStub: _Fake$MeetingUserSuggestionCopyWith_83<
                _i43.MeetingUserSuggestion>(
              this,
              Invocation.getter(#copyWith),
            ),
          ) as _i43.$MeetingUserSuggestionCopyWith<_i43.MeetingUserSuggestion>);

  @override
  int getLikeDislikeCount() => (super.noSuchMethod(
        Invocation.method(
          #getLikeDislikeCount,
          [],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool isLiked(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #isLiked,
          [userId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isDisliked(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #isDisliked,
          [userId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [NavBarView].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavBarView extends _i1.Mock implements _i103.NavBarView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NetworkingStatusView].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkingStatusView extends _i1.Mock
    implements _i104.NetworkingStatusView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OverviewView].
///
/// See the documentation for Mockito's code generation for more information.
class MockOverviewView extends _i1.Mock implements _i105.OverviewView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showMessage(
    String? message, {
    _i65.ToastType? toastType,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
          {#toastType: toastType},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PartnerAgreement].
///
/// See the documentation for Mockito's code generation for more information.
class MockPartnerAgreement extends _i1.Mock implements _i44.PartnerAgreement {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  bool get allowPayments => (super.noSuchMethod(
        Invocation.getter(#allowPayments),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get stripeConnectedAccountActive => (super.noSuchMethod(
        Invocation.getter(#stripeConnectedAccountActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i44.$PartnerAgreementCopyWith<_i44.PartnerAgreement> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$PartnerAgreementCopyWith_84<_i44.PartnerAgreement>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$PartnerAgreementCopyWith_84<_i44.PartnerAgreement>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i44.$PartnerAgreementCopyWith<_i44.PartnerAgreement>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [PaymentUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentUtils extends _i1.Mock implements _i106.PaymentUtils {
  @override
  bool isStripeAccountAlreadyCreated(_i44.PartnerAgreement? partnerAgreement) =>
      (super.noSuchMethod(
        Invocation.method(
          #isStripeAccountAlreadyCreated,
          [partnerAgreement],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<void> proceedToConnectWithStripePage(
    _i44.PartnerAgreement? partnerAgreement,
    String? partnerAgreementId,
    _i68.CloudFunctionsPaymentsService? cloudFunctionsService,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #proceedToConnectWithStripePage,
          [
            partnerAgreement,
            partnerAgreementId,
            cloudFunctionsService,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [PrePostCard].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostCard extends _i1.Mock implements _i45.PrePostCard {
  @override
  bool get hasData => (super.noSuchMethod(
        Invocation.getter(#hasData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get headline => (super.noSuchMethod(
        Invocation.getter(#headline),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#headline),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#headline),
        ),
      ) as String);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  _i45.PrePostCardType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i45.PrePostCardType.preEvent,
        returnValueForMissingStub: _i45.PrePostCardType.preEvent,
      ) as _i45.PrePostCardType);

  @override
  List<_i46.PrePostUrlParams> get prePostUrls => (super.noSuchMethod(
        Invocation.getter(#prePostUrls),
        returnValue: <_i46.PrePostUrlParams>[],
        returnValueForMissingStub: <_i46.PrePostUrlParams>[],
      ) as List<_i46.PrePostUrlParams>);

  @override
  _i45.$PrePostCardCopyWith<_i45.PrePostCard> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$PrePostCardCopyWith_85<_i45.PrePostCard>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$PrePostCardCopyWith_85<_i45.PrePostCard>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i45.$PrePostCardCopyWith<_i45.PrePostCard>);

  @override
  String getFinalisedUrl({
    String? userId,
    _i2.Event? event,
    String? email,
    _i46.PrePostUrlParams? urlInfo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFinalisedUrl,
          [],
          {
            #userId: userId,
            #event: event,
            #email: email,
            #urlInfo: urlInfo,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getFinalisedUrl,
            [],
            {
              #userId: userId,
              #event: event,
              #email: email,
              #urlInfo: urlInfo,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #getFinalisedUrl,
            [],
            {
              #userId: userId,
              #event: event,
              #email: email,
              #urlInfo: urlInfo,
            },
          ),
        ),
      ) as String);

  @override
  bool isNew() => (super.noSuchMethod(
        Invocation.method(
          #isNew,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [PrePostCardWidgetModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostCardWidgetModel extends _i1.Mock
    implements _i107.PrePostCardWidgetModel {
  @override
  _i45.PrePostCard get prePostCard => (super.noSuchMethod(
        Invocation.getter(#prePostCard),
        returnValue: _FakePrePostCard_86(
          this,
          Invocation.getter(#prePostCard),
        ),
        returnValueForMissingStub: _FakePrePostCard_86(
          this,
          Invocation.getter(#prePostCard),
        ),
      ) as _i45.PrePostCard);

  @override
  set prePostCard(_i45.PrePostCard? _prePostCard) => super.noSuchMethod(
        Invocation.setter(
          #prePostCard,
          _prePostCard,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i108.PrePostCardWidgetType get prePostCardWidgetType => (super.noSuchMethod(
        Invocation.getter(#prePostCardWidgetType),
        returnValue: _i108.PrePostCardWidgetType.overview,
        returnValueForMissingStub: _i108.PrePostCardWidgetType.overview,
      ) as _i108.PrePostCardWidgetType);

  @override
  set prePostCardWidgetType(
          _i108.PrePostCardWidgetType? _prePostCardWidgetType) =>
      super.noSuchMethod(
        Invocation.setter(
          #prePostCardWidgetType,
          _prePostCardWidgetType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isExpanded => (super.noSuchMethod(
        Invocation.getter(#isExpanded),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isExpanded(bool? _isExpanded) => super.noSuchMethod(
        Invocation.setter(
          #isExpanded,
          _isExpanded,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAddURLParamsSectionVisible => (super.noSuchMethod(
        Invocation.getter(#isAddURLParamsSectionVisible),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isAddURLParamsSectionVisible(bool? _isAddURLParamsSectionVisible) =>
      super.noSuchMethod(
        Invocation.setter(
          #isAddURLParamsSectionVisible,
          _isAddURLParamsSectionVisible,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i45.PrePostCardType get prePostCardType => (super.noSuchMethod(
        Invocation.getter(#prePostCardType),
        returnValue: _i45.PrePostCardType.preEvent,
        returnValueForMissingStub: _i45.PrePostCardType.preEvent,
      ) as _i45.PrePostCardType);

  @override
  set prePostCardType(_i45.PrePostCardType? prePostCardType) =>
      super.noSuchMethod(
        Invocation.setter(
          #prePostCardType,
          prePostCardType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set event(_i2.Event? event) => super.noSuchMethod(
        Invocation.setter(
          #event,
          event,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isEditable => (super.noSuchMethod(
        Invocation.getter(#isEditable),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isEditable(bool? isEditable) => super.noSuchMethod(
        Invocation.setter(
          #isEditable,
          isEditable,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PrePostCardWidgetPresenterHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostCardWidgetPresenterHelper extends _i1.Mock
    implements _i109.PrePostCardWidgetPresenterHelper {
  @override
  _i37.Future<void> launchUrlFromUtils(String? url) => (super.noSuchMethod(
        Invocation.method(
          #launchUrlFromUtils,
          [url],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<String?> getEmail(
    _i110.UserService? userService,
    _i69.CloudFunctionsCommunityService? cloudFunctionsService,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [
            userService,
            cloudFunctionsService,
          ],
        ),
        returnValue: _i37.Future<String?>.value(),
        returnValueForMissingStub: _i37.Future<String?>.value(),
      ) as _i37.Future<String?>);
}

/// A class which mocks [PrePostCardWidgetView].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostCardWidgetView extends _i1.Mock
    implements _i111.PrePostCardWidgetView {
  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showToast(String? text) => super.noSuchMethod(
        Invocation.method(
          #showToast,
          [text],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PrePostEventDialogModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostEventDialogModel extends _i1.Mock
    implements _i112.PrePostEventDialogModel {
  @override
  _i45.PrePostCard get prePostCard => (super.noSuchMethod(
        Invocation.getter(#prePostCard),
        returnValue: _FakePrePostCard_86(
          this,
          Invocation.getter(#prePostCard),
        ),
        returnValueForMissingStub: _FakePrePostCard_86(
          this,
          Invocation.getter(#prePostCard),
        ),
      ) as _i45.PrePostCard);

  @override
  _i2.Event get event => (super.noSuchMethod(
        Invocation.getter(#event),
        returnValue: _FakeEvent_56(
          this,
          Invocation.getter(#event),
        ),
        returnValueForMissingStub: _FakeEvent_56(
          this,
          Invocation.getter(#event),
        ),
      ) as _i2.Event);
}

/// A class which mocks [PrePostEventDialogPresenterHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostEventDialogPresenterHelper extends _i1.Mock
    implements _i113.PrePostEventDialogPresenterHelper {
  @override
  _i37.Future<void> launchUrl(
    String? surveyUrl,
    bool? isWeb,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [
            surveyUrl,
            isWeb,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);
}

/// A class which mocks [PrePostEventDialogView].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostEventDialogView extends _i1.Mock
    implements _i114.PrePostEventDialogView {}

/// A class which mocks [PrePostUrlParams].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrePostUrlParams extends _i1.Mock implements _i46.PrePostUrlParams {
  @override
  List<_i115.PrePostCardAttribute> get attributes => (super.noSuchMethod(
        Invocation.getter(#attributes),
        returnValue: <_i115.PrePostCardAttribute>[],
        returnValueForMissingStub: <_i115.PrePostCardAttribute>[],
      ) as List<_i115.PrePostCardAttribute>);

  @override
  _i46.$PrePostUrlParamsCopyWith<_i46.PrePostUrlParams> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$PrePostUrlParamsCopyWith_87<_i46.PrePostUrlParams>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$PrePostUrlParamsCopyWith_87<_i46.PrePostUrlParams>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i46.$PrePostUrlParamsCopyWith<_i46.PrePostUrlParams>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Query].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockQuery<T extends Object?> extends _i1.Mock implements _i22.Query<T> {
  @override
  _i22.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_40(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i22.FirebaseFirestore);

  @override
  Map<String, dynamic> get parameters => (super.noSuchMethod(
        Invocation.getter(#parameters),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i22.Query<T> endAtDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endBeforeDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBeforeDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> endBefore(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i37.Future<_i22.QuerySnapshot<T>> get([_i36.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i22.QuerySnapshot<T>>.value(_FakeQuerySnapshot_44<T>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i37.Future<_i22.QuerySnapshot<T>>);

  @override
  _i22.Query<T> limit(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limit,
          [limit],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> limitToLast(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i37.Stream<_i22.QuerySnapshot<T>> snapshots({
    bool? includeMetadataChanges = false,
    _i36.ListenSource? source = _i36.ListenSource.defaultSource,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {
            #includeMetadataChanges: includeMetadataChanges,
            #source: source,
          },
        ),
        returnValue: _i37.Stream<_i22.QuerySnapshot<T>>.empty(),
        returnValueForMissingStub: _i37.Stream<_i22.QuerySnapshot<T>>.empty(),
      ) as _i37.Stream<_i22.QuerySnapshot<T>>);

  @override
  _i22.Query<T> orderBy(
    Object? field, {
    bool? descending = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [field],
          {#descending: descending},
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAfterDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfterDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAfter(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAtDocument(
          _i22.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> startAt(Iterable<Object?>? values) => (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [values],
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<T> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    Iterable<Object?>? arrayContainsAny,
    Iterable<Object?>? whereIn,
    Iterable<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [field],
          {
            #isEqualTo: isEqualTo,
            #isNotEqualTo: isNotEqualTo,
            #isLessThan: isLessThan,
            #isLessThanOrEqualTo: isLessThanOrEqualTo,
            #isGreaterThan: isGreaterThan,
            #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
            #arrayContains: arrayContains,
            #arrayContainsAny: arrayContainsAny,
            #whereIn: whereIn,
            #whereNotIn: whereNotIn,
            #isNull: isNull,
          },
        ),
        returnValue: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<T>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
      ) as _i22.Query<T>);

  @override
  _i22.Query<R> withConverter<R>({
    required _i22.FromFirestore<R>? fromFirestore,
    required _i22.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeQuery_43<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_43<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i22.Query<R>);

  @override
  _i22.AggregateQuery count() => (super.noSuchMethod(
        Invocation.method(
          #count,
          [],
        ),
        returnValue: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #count,
            [],
          ),
        ),
      ) as _i22.AggregateQuery);

  @override
  _i22.AggregateQuery aggregate(
    _i36.AggregateField? aggregateField1, [
    _i36.AggregateField? aggregateField2,
    _i36.AggregateField? aggregateField3,
    _i36.AggregateField? aggregateField4,
    _i36.AggregateField? aggregateField5,
    _i36.AggregateField? aggregateField6,
    _i36.AggregateField? aggregateField7,
    _i36.AggregateField? aggregateField8,
    _i36.AggregateField? aggregateField9,
    _i36.AggregateField? aggregateField10,
    _i36.AggregateField? aggregateField11,
    _i36.AggregateField? aggregateField12,
    _i36.AggregateField? aggregateField13,
    _i36.AggregateField? aggregateField14,
    _i36.AggregateField? aggregateField15,
    _i36.AggregateField? aggregateField16,
    _i36.AggregateField? aggregateField17,
    _i36.AggregateField? aggregateField18,
    _i36.AggregateField? aggregateField19,
    _i36.AggregateField? aggregateField20,
    _i36.AggregateField? aggregateField21,
    _i36.AggregateField? aggregateField22,
    _i36.AggregateField? aggregateField23,
    _i36.AggregateField? aggregateField24,
    _i36.AggregateField? aggregateField25,
    _i36.AggregateField? aggregateField26,
    _i36.AggregateField? aggregateField27,
    _i36.AggregateField? aggregateField28,
    _i36.AggregateField? aggregateField29,
    _i36.AggregateField? aggregateField30,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #aggregate,
          [
            aggregateField1,
            aggregateField2,
            aggregateField3,
            aggregateField4,
            aggregateField5,
            aggregateField6,
            aggregateField7,
            aggregateField8,
            aggregateField9,
            aggregateField10,
            aggregateField11,
            aggregateField12,
            aggregateField13,
            aggregateField14,
            aggregateField15,
            aggregateField16,
            aggregateField17,
            aggregateField18,
            aggregateField19,
            aggregateField20,
            aggregateField21,
            aggregateField22,
            aggregateField23,
            aggregateField24,
            aggregateField25,
            aggregateField26,
            aggregateField27,
            aggregateField28,
            aggregateField29,
            aggregateField30,
          ],
        ),
        returnValue: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #aggregate,
            [
              aggregateField1,
              aggregateField2,
              aggregateField3,
              aggregateField4,
              aggregateField5,
              aggregateField6,
              aggregateField7,
              aggregateField8,
              aggregateField9,
              aggregateField10,
              aggregateField11,
              aggregateField12,
              aggregateField13,
              aggregateField14,
              aggregateField15,
              aggregateField16,
              aggregateField17,
              aggregateField18,
              aggregateField19,
              aggregateField20,
              aggregateField21,
              aggregateField22,
              aggregateField23,
              aggregateField24,
              aggregateField25,
              aggregateField26,
              aggregateField27,
              aggregateField28,
              aggregateField29,
              aggregateField30,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeAggregateQuery_45(
          this,
          Invocation.method(
            #aggregate,
            [
              aggregateField1,
              aggregateField2,
              aggregateField3,
              aggregateField4,
              aggregateField5,
              aggregateField6,
              aggregateField7,
              aggregateField8,
              aggregateField9,
              aggregateField10,
              aggregateField11,
              aggregateField12,
              aggregateField13,
              aggregateField14,
              aggregateField15,
              aggregateField16,
              aggregateField17,
              aggregateField18,
              aggregateField19,
              aggregateField20,
              aggregateField21,
              aggregateField22,
              aggregateField23,
              aggregateField24,
              aggregateField25,
              aggregateField26,
              aggregateField27,
              aggregateField28,
              aggregateField29,
              aggregateField30,
            ],
          ),
        ),
      ) as _i22.AggregateQuery);
}

/// A class which mocks [QuerySnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuerySnapshot<T extends Object?> extends _i1.Mock
    implements _i22.QuerySnapshot<T> {
  @override
  List<_i22.QueryDocumentSnapshot<T>> get docs => (super.noSuchMethod(
        Invocation.getter(#docs),
        returnValue: <_i22.QueryDocumentSnapshot<T>>[],
        returnValueForMissingStub: <_i22.QueryDocumentSnapshot<T>>[],
      ) as List<_i22.QueryDocumentSnapshot<T>>);

  @override
  List<_i22.DocumentChange<T>> get docChanges => (super.noSuchMethod(
        Invocation.getter(#docChanges),
        returnValue: <_i22.DocumentChange<T>>[],
        returnValueForMissingStub: <_i22.DocumentChange<T>>[],
      ) as List<_i22.DocumentChange<T>>);

  @override
  _i22.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_60(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeSnapshotMetadata_60(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i22.SnapshotMetadata);

  @override
  int get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
}

/// A class which mocks [RenderBox].
///
/// See the documentation for Mockito's code generation for more information.
class MockRenderBox extends _i1.Mock implements _i15.RenderBox {
  @override
  bool get hasSize => (super.noSuchMethod(
        Invocation.getter(#hasSize),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i41.Size get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeSize_77(
          this,
          Invocation.getter(#size),
        ),
        returnValueForMissingStub: _FakeSize_77(
          this,
          Invocation.getter(#size),
        ),
      ) as _i41.Size);

  @override
  set size(_i41.Size? value) => super.noSuchMethod(
        Invocation.setter(
          #size,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i41.Rect get semanticBounds => (super.noSuchMethod(
        Invocation.getter(#semanticBounds),
        returnValue: _FakeRect_88(
          this,
          Invocation.getter(#semanticBounds),
        ),
        returnValueForMissingStub: _FakeRect_88(
          this,
          Invocation.getter(#semanticBounds),
        ),
      ) as _i41.Rect);

  @override
  _i15.BoxConstraints get constraints => (super.noSuchMethod(
        Invocation.getter(#constraints),
        returnValue: _FakeBoxConstraints_89(
          this,
          Invocation.getter(#constraints),
        ),
        returnValueForMissingStub: _FakeBoxConstraints_89(
          this,
          Invocation.getter(#constraints),
        ),
      ) as _i15.BoxConstraints);

  @override
  _i41.Rect get paintBounds => (super.noSuchMethod(
        Invocation.getter(#paintBounds),
        returnValue: _FakeRect_88(
          this,
          Invocation.getter(#paintBounds),
        ),
        returnValueForMissingStub: _FakeRect_88(
          this,
          Invocation.getter(#paintBounds),
        ),
      ) as _i41.Rect);

  @override
  set parentData(_i47.ParentData? _parentData) => super.noSuchMethod(
        Invocation.setter(
          #parentData,
          _parentData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugCreator(Object? _debugCreator) => super.noSuchMethod(
        Invocation.setter(
          #debugCreator,
          _debugCreator,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get depth => (super.noSuchMethod(
        Invocation.getter(#depth),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get debugDoingThisResize => (super.noSuchMethod(
        Invocation.getter(#debugDoingThisResize),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugDoingThisLayout => (super.noSuchMethod(
        Invocation.getter(#debugDoingThisLayout),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugCanParentUseSize => (super.noSuchMethod(
        Invocation.getter(#debugCanParentUseSize),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get attached => (super.noSuchMethod(
        Invocation.getter(#attached),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugNeedsLayout => (super.noSuchMethod(
        Invocation.getter(#debugNeedsLayout),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugDoingThisLayoutWithCallback => (super.noSuchMethod(
        Invocation.getter(#debugDoingThisLayoutWithCallback),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get sizedByParent => (super.noSuchMethod(
        Invocation.getter(#sizedByParent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugDoingThisPaint => (super.noSuchMethod(
        Invocation.getter(#debugDoingThisPaint),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isRepaintBoundary => (super.noSuchMethod(
        Invocation.getter(#isRepaintBoundary),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get alwaysNeedsCompositing => (super.noSuchMethod(
        Invocation.getter(#alwaysNeedsCompositing),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set layer(_i47.ContainerLayer? newLayer) => super.noSuchMethod(
        Invocation.setter(
          #layer,
          newLayer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get needsCompositing => (super.noSuchMethod(
        Invocation.getter(#needsCompositing),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugNeedsPaint => (super.noSuchMethod(
        Invocation.getter(#debugNeedsPaint),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get debugNeedsCompositedLayerUpdate => (super.noSuchMethod(
        Invocation.getter(#debugNeedsCompositedLayerUpdate),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setupParentData(_i15.RenderObject? child) => super.noSuchMethod(
        Invocation.method(
          #setupParentData,
          [child],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double getMinIntrinsicWidth(double? height) => (super.noSuchMethod(
        Invocation.method(
          #getMinIntrinsicWidth,
          [height],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double computeMinIntrinsicWidth(double? height) => (super.noSuchMethod(
        Invocation.method(
          #computeMinIntrinsicWidth,
          [height],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double getMaxIntrinsicWidth(double? height) => (super.noSuchMethod(
        Invocation.method(
          #getMaxIntrinsicWidth,
          [height],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double computeMaxIntrinsicWidth(double? height) => (super.noSuchMethod(
        Invocation.method(
          #computeMaxIntrinsicWidth,
          [height],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double getMinIntrinsicHeight(double? width) => (super.noSuchMethod(
        Invocation.method(
          #getMinIntrinsicHeight,
          [width],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double computeMinIntrinsicHeight(double? width) => (super.noSuchMethod(
        Invocation.method(
          #computeMinIntrinsicHeight,
          [width],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double getMaxIntrinsicHeight(double? width) => (super.noSuchMethod(
        Invocation.method(
          #getMaxIntrinsicHeight,
          [width],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double computeMaxIntrinsicHeight(double? width) => (super.noSuchMethod(
        Invocation.method(
          #computeMaxIntrinsicHeight,
          [width],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i41.Size getDryLayout(_i15.BoxConstraints? constraints) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDryLayout,
          [constraints],
        ),
        returnValue: _FakeSize_77(
          this,
          Invocation.method(
            #getDryLayout,
            [constraints],
          ),
        ),
        returnValueForMissingStub: _FakeSize_77(
          this,
          Invocation.method(
            #getDryLayout,
            [constraints],
          ),
        ),
      ) as _i41.Size);

  @override
  _i41.Size computeDryLayout(_i15.BoxConstraints? constraints) =>
      (super.noSuchMethod(
        Invocation.method(
          #computeDryLayout,
          [constraints],
        ),
        returnValue: _FakeSize_77(
          this,
          Invocation.method(
            #computeDryLayout,
            [constraints],
          ),
        ),
        returnValueForMissingStub: _FakeSize_77(
          this,
          Invocation.method(
            #computeDryLayout,
            [constraints],
          ),
        ),
      ) as _i41.Size);

  @override
  double? getDryBaseline(
    _i15.BoxConstraints? constraints,
    _i41.TextBaseline? baseline,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDryBaseline,
          [
            constraints,
            baseline,
          ],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  double? computeDryBaseline(
    _i15.BoxConstraints? constraints,
    _i41.TextBaseline? baseline,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #computeDryBaseline,
          [
            constraints,
            baseline,
          ],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  bool debugCannotComputeDryLayout({
    String? reason,
    _i15.FlutterError? error,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #debugCannotComputeDryLayout,
          [],
          {
            #reason: reason,
            #error: error,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i41.Size debugAdoptSize(_i41.Size? value) => (super.noSuchMethod(
        Invocation.method(
          #debugAdoptSize,
          [value],
        ),
        returnValue: _FakeSize_77(
          this,
          Invocation.method(
            #debugAdoptSize,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeSize_77(
          this,
          Invocation.method(
            #debugAdoptSize,
            [value],
          ),
        ),
      ) as _i41.Size);

  @override
  void debugResetSize() => super.noSuchMethod(
        Invocation.method(
          #debugResetSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double? getDistanceToBaseline(
    _i41.TextBaseline? baseline, {
    bool? onlyReal = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDistanceToBaseline,
          [baseline],
          {#onlyReal: onlyReal},
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  double? getDistanceToActualBaseline(_i41.TextBaseline? baseline) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDistanceToActualBaseline,
          [baseline],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  double? computeDistanceToActualBaseline(_i41.TextBaseline? baseline) =>
      (super.noSuchMethod(
        Invocation.method(
          #computeDistanceToActualBaseline,
          [baseline],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  void debugAssertDoesMeetConstraints() => super.noSuchMethod(
        Invocation.method(
          #debugAssertDoesMeetConstraints,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markNeedsLayout() => super.noSuchMethod(
        Invocation.method(
          #markNeedsLayout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void performResize() => super.noSuchMethod(
        Invocation.method(
          #performResize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void performLayout() => super.noSuchMethod(
        Invocation.method(
          #performLayout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hitTest(
    _i47.BoxHitTestResult? result, {
    required _i41.Offset? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hitTest,
          [result],
          {#position: position},
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool hitTestSelf(_i41.Offset? position) => (super.noSuchMethod(
        Invocation.method(
          #hitTestSelf,
          [position],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool hitTestChildren(
    _i47.BoxHitTestResult? result, {
    required _i41.Offset? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hitTestChildren,
          [result],
          {#position: position},
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void applyPaintTransform(
    _i15.RenderObject? child,
    _i15.Matrix4? transform,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #applyPaintTransform,
          [
            child,
            transform,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i41.Offset globalToLocal(
    _i41.Offset? point, {
    _i15.RenderObject? ancestor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalToLocal,
          [point],
          {#ancestor: ancestor},
        ),
        returnValue: _FakeOffset_90(
          this,
          Invocation.method(
            #globalToLocal,
            [point],
            {#ancestor: ancestor},
          ),
        ),
        returnValueForMissingStub: _FakeOffset_90(
          this,
          Invocation.method(
            #globalToLocal,
            [point],
            {#ancestor: ancestor},
          ),
        ),
      ) as _i41.Offset);

  @override
  _i41.Offset localToGlobal(
    _i41.Offset? point, {
    _i15.RenderObject? ancestor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localToGlobal,
          [point],
          {#ancestor: ancestor},
        ),
        returnValue: _FakeOffset_90(
          this,
          Invocation.method(
            #localToGlobal,
            [point],
            {#ancestor: ancestor},
          ),
        ),
        returnValueForMissingStub: _FakeOffset_90(
          this,
          Invocation.method(
            #localToGlobal,
            [point],
            {#ancestor: ancestor},
          ),
        ),
      ) as _i41.Offset);

  @override
  void handleEvent(
    _i15.PointerEvent? event,
    _i47.HitTestEntry<_i42.HitTestTarget>? entry,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #handleEvent,
          [
            event,
            entry,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool debugHandleEvent(
    _i15.PointerEvent? event,
    _i47.HitTestEntry<_i42.HitTestTarget>? entry,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #debugHandleEvent,
          [
            event,
            entry,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void debugPaint(
    _i15.PaintingContext? context,
    _i41.Offset? offset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #debugPaint,
          [
            context,
            offset,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugPaintSize(
    _i15.PaintingContext? context,
    _i41.Offset? offset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #debugPaintSize,
          [
            context,
            offset,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugPaintBaselines(
    _i15.PaintingContext? context,
    _i41.Offset? offset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #debugPaintBaselines,
          [
            context,
            offset,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugPaintPointers(
    _i15.PaintingContext? context,
    _i41.Offset? offset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #debugPaintPointers,
          [
            context,
            offset,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugFillProperties(_i16.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reassemble() => super.noSuchMethod(
        Invocation.method(
          #reassemble,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void redepthChild(_i15.RenderObject? child) => super.noSuchMethod(
        Invocation.method(
          #redepthChild,
          [child],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void redepthChildren() => super.noSuchMethod(
        Invocation.method(
          #redepthChildren,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void adoptChild(_i15.RenderObject? child) => super.noSuchMethod(
        Invocation.method(
          #adoptChild,
          [child],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dropChild(_i15.RenderObject? child) => super.noSuchMethod(
        Invocation.method(
          #dropChild,
          [child],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void visitChildren(_i47.RenderObjectVisitor? visitor) => super.noSuchMethod(
        Invocation.method(
          #visitChildren,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void attach(_i47.PipelineOwner? owner) => super.noSuchMethod(
        Invocation.method(
          #attach,
          [owner],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void detach() => super.noSuchMethod(
        Invocation.method(
          #detach,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markParentNeedsLayout() => super.noSuchMethod(
        Invocation.method(
          #markParentNeedsLayout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markNeedsLayoutForSizedByParentChange() => super.noSuchMethod(
        Invocation.method(
          #markNeedsLayoutForSizedByParentChange,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleInitialLayout() => super.noSuchMethod(
        Invocation.method(
          #scheduleInitialLayout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void layout(
    _i47.Constraints? constraints, {
    bool? parentUsesSize = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #layout,
          [constraints],
          {#parentUsesSize: parentUsesSize},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void invokeLayoutCallback<T extends _i47.Constraints>(
          _i47.LayoutCallback<T>? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #invokeLayoutCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugRegisterRepaintBoundaryPaint({
    bool? includedParent = true,
    bool? includedChild = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #debugRegisterRepaintBoundaryPaint,
          [],
          {
            #includedParent: includedParent,
            #includedChild: includedChild,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i47.OffsetLayer updateCompositedLayer(
          {required _i47.OffsetLayer? oldLayer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCompositedLayer,
          [],
          {#oldLayer: oldLayer},
        ),
        returnValue: _FakeOffsetLayer_91(
          this,
          Invocation.method(
            #updateCompositedLayer,
            [],
            {#oldLayer: oldLayer},
          ),
        ),
        returnValueForMissingStub: _FakeOffsetLayer_91(
          this,
          Invocation.method(
            #updateCompositedLayer,
            [],
            {#oldLayer: oldLayer},
          ),
        ),
      ) as _i47.OffsetLayer);

  @override
  void markNeedsCompositingBitsUpdate() => super.noSuchMethod(
        Invocation.method(
          #markNeedsCompositingBitsUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markNeedsPaint() => super.noSuchMethod(
        Invocation.method(
          #markNeedsPaint,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markNeedsCompositedLayerUpdate() => super.noSuchMethod(
        Invocation.method(
          #markNeedsCompositedLayerUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleInitialPaint(_i47.ContainerLayer? rootLayer) =>
      super.noSuchMethod(
        Invocation.method(
          #scheduleInitialPaint,
          [rootLayer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void replaceRootLayer(_i47.OffsetLayer? rootLayer) => super.noSuchMethod(
        Invocation.method(
          #replaceRootLayer,
          [rootLayer],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void paint(
    _i15.PaintingContext? context,
    _i41.Offset? offset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #paint,
          [
            context,
            offset,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool paintsChild(_i15.RenderObject? child) => (super.noSuchMethod(
        Invocation.method(
          #paintsChild,
          [child],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i15.Matrix4 getTransformTo(_i15.RenderObject? ancestor) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransformTo,
          [ancestor],
        ),
        returnValue: _FakeMatrix4_92(
          this,
          Invocation.method(
            #getTransformTo,
            [ancestor],
          ),
        ),
        returnValueForMissingStub: _FakeMatrix4_92(
          this,
          Invocation.method(
            #getTransformTo,
            [ancestor],
          ),
        ),
      ) as _i15.Matrix4);

  @override
  _i41.Rect? describeApproximatePaintClip(_i15.RenderObject? child) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeApproximatePaintClip,
          [child],
        ),
        returnValueForMissingStub: null,
      ) as _i41.Rect?);

  @override
  void scheduleInitialSemantics() => super.noSuchMethod(
        Invocation.method(
          #scheduleInitialSemantics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void describeSemanticsConfiguration(_i47.SemanticsConfiguration? config) =>
      super.noSuchMethod(
        Invocation.method(
          #describeSemanticsConfiguration,
          [config],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendSemanticsEvent(_i47.SemanticsEvent? semanticsEvent) =>
      super.noSuchMethod(
        Invocation.method(
          #sendSemanticsEvent,
          [semanticsEvent],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSemantics() => super.noSuchMethod(
        Invocation.method(
          #clearSemantics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markNeedsSemanticsUpdate() => super.noSuchMethod(
        Invocation.method(
          #markNeedsSemanticsUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void visitChildrenForSemantics(_i47.RenderObjectVisitor? visitor) =>
      super.noSuchMethod(
        Invocation.method(
          #visitChildrenForSemantics,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void assembleSemanticsNode(
    _i47.SemanticsNode? node,
    _i47.SemanticsConfiguration? config,
    Iterable<_i47.SemanticsNode>? children,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #assembleSemanticsNode,
          [
            node,
            config,
            children,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines = r'',
    _i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  List<_i15.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i15.DiagnosticsNode>[],
        returnValueForMissingStub: <_i15.DiagnosticsNode>[],
      ) as List<_i15.DiagnosticsNode>);

  @override
  void showOnScreen({
    _i15.RenderObject? descendant,
    _i41.Rect? rect,
    Duration? duration = Duration.zero,
    _i15.Curve? curve = _i15.Curves.ease,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showOnScreen,
          [],
          {
            #descendant: descendant,
            #rect: rect,
            #duration: duration,
            #curve: curve,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DiagnosticsNode describeForError(
    String? name, {
    _i16.DiagnosticsTreeStyle? style = _i16.DiagnosticsTreeStyle.shallow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeForError,
          [name],
          {#style: style},
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeForError,
            [name],
            {#style: style},
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #describeForError,
            [name],
            {#style: style},
          ),
        ),
      ) as _i15.DiagnosticsNode);

  @override
  _i15.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i16.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i15.DiagnosticsNode);
}

/// A class which mocks [ResponsiveLayoutService].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponsiveLayoutService extends _i1.Mock
    implements _i116.ResponsiveLayoutService {
  @override
  bool isMobile(_i15.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isMobile,
          [context],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool showBottomNavBar(_i15.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #showBottomNavBar,
          [context],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isMaxSupportedMobileSize(_i15.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #isMaxSupportedMobileSize,
          [context],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  double getDynamicSize(
    _i15.BuildContext? context,
    double? originalValue, {
    double? mobileSize,
    double? scale,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDynamicSize,
          [
            context,
            originalValue,
          ],
          {
            #mobileSize: mobileSize,
            #scale: scale,
          },
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
}

/// A class which mocks [ScaffoldState].
///
/// See the documentation for Mockito's code generation for more information.
class MockScaffoldState extends _i1.Mock implements _i48.ScaffoldState {
  @override
  bool get hasAppBar => (super.noSuchMethod(
        Invocation.getter(#hasAppBar),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasDrawer => (super.noSuchMethod(
        Invocation.getter(#hasDrawer),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasEndDrawer => (super.noSuchMethod(
        Invocation.getter(#hasEndDrawer),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasFloatingActionButton => (super.noSuchMethod(
        Invocation.getter(#hasFloatingActionButton),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isDrawerOpen => (super.noSuchMethod(
        Invocation.getter(#isDrawerOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isEndDrawerOpen => (super.noSuchMethod(
        Invocation.getter(#isEndDrawerOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i48.Scaffold get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeScaffold_93(
          this,
          Invocation.getter(#widget),
        ),
        returnValueForMissingStub: _FakeScaffold_93(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i48.Scaffold);

  @override
  _i15.BuildContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeBuildContext_94(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeBuildContext_94(
          this,
          Invocation.getter(#context),
        ),
      ) as _i15.BuildContext);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get restorePending => (super.noSuchMethod(
        Invocation.getter(#restorePending),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void restoreState(
    _i15.RestorationBucket? oldBucket,
    bool? initialRestore,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #restoreState,
          [
            oldBucket,
            initialRestore,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openDrawer() => super.noSuchMethod(
        Invocation.method(
          #openDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openEndDrawer() => super.noSuchMethod(
        Invocation.method(
          #openEndDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void closeDrawer() => super.noSuchMethod(
        Invocation.method(
          #closeDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void closeEndDrawer() => super.noSuchMethod(
        Invocation.method(
          #closeEndDrawer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i48.PersistentBottomSheetController showBottomSheet(
    _i15.WidgetBuilder? builder, {
    _i41.Color? backgroundColor,
    double? elevation,
    _i15.ShapeBorder? shape,
    _i41.Clip? clipBehavior,
    _i15.BoxConstraints? constraints,
    bool? enableDrag,
    bool? showDragHandle,
    _i15.AnimationController? transitionAnimationController,
    _i15.AnimationStyle? sheetAnimationStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [builder],
          {
            #backgroundColor: backgroundColor,
            #elevation: elevation,
            #shape: shape,
            #clipBehavior: clipBehavior,
            #constraints: constraints,
            #enableDrag: enableDrag,
            #showDragHandle: showDragHandle,
            #transitionAnimationController: transitionAnimationController,
            #sheetAnimationStyle: sheetAnimationStyle,
          },
        ),
        returnValue: _FakePersistentBottomSheetController_95(
          this,
          Invocation.method(
            #showBottomSheet,
            [builder],
            {
              #backgroundColor: backgroundColor,
              #elevation: elevation,
              #shape: shape,
              #clipBehavior: clipBehavior,
              #constraints: constraints,
              #enableDrag: enableDrag,
              #showDragHandle: showDragHandle,
              #transitionAnimationController: transitionAnimationController,
              #sheetAnimationStyle: sheetAnimationStyle,
            },
          ),
        ),
        returnValueForMissingStub: _FakePersistentBottomSheetController_95(
          this,
          Invocation.method(
            #showBottomSheet,
            [builder],
            {
              #backgroundColor: backgroundColor,
              #elevation: elevation,
              #shape: shape,
              #clipBehavior: clipBehavior,
              #constraints: constraints,
              #enableDrag: enableDrag,
              #showDragHandle: showDragHandle,
              #transitionAnimationController: transitionAnimationController,
              #sheetAnimationStyle: sheetAnimationStyle,
            },
          ),
        ),
      ) as _i48.PersistentBottomSheetController);

  @override
  void initState() => super.noSuchMethod(
        Invocation.method(
          #initState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateWidget(_i15.StatefulWidget? oldWidget) => super.noSuchMethod(
        Invocation.method(
          #didUpdateWidget,
          [oldWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeDependencies() => super.noSuchMethod(
        Invocation.method(
          #didChangeDependencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showBodyScrim(
    bool? value,
    double? opacity,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showBodyScrim,
          [
            value,
            opacity,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Widget build(_i15.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_15(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_15(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i15.Widget);

  @override
  void reassemble() => super.noSuchMethod(
        Invocation.method(
          #reassemble,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i41.VoidCallback? fn) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deactivate() => super.noSuchMethod(
        Invocation.method(
          #deactivate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void activate() => super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugFillProperties(_i16.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  _i15.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i16.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_17(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i15.DiagnosticsNode);

  @override
  _i49.Ticker createTicker(_i49.TickerCallback? onTick) => (super.noSuchMethod(
        Invocation.method(
          #createTicker,
          [onTick],
        ),
        returnValue: _FakeTicker_96(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
        returnValueForMissingStub: _FakeTicker_96(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
      ) as _i49.Ticker);

  @override
  void didToggleBucket(_i15.RestorationBucket? oldBucket) => super.noSuchMethod(
        Invocation.method(
          #didToggleBucket,
          [oldBucket],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerForRestoration(
    _i15.RestorableProperty<Object?>? property,
    String? restorationId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerForRestoration,
          [
            property,
            restorationId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterFromRestoration(_i15.RestorableProperty<Object?>? property) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterFromRestoration,
          [property],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateRestorationId() => super.noSuchMethod(
        Invocation.method(
          #didUpdateRestorationId,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesService extends _i1.Mock
    implements _i117.SharedPreferencesService {
  @override
  _i37.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  bool isReturningUser() => (super.noSuchMethod(
        Invocation.method(
          #isReturningUser,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<bool> setIsReturningUser(bool? isReturningUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIsReturningUser,
          [isReturningUser],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  bool wasMeetingTutorialShown() => (super.noSuchMethod(
        Invocation.method(
          #wasMeetingTutorialShown,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<bool> setMeetingTutorialShown(bool? wasShown) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMeetingTutorialShown,
          [wasShown],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  bool isOnboardingOverviewTooltipShown() => (super.noSuchMethod(
        Invocation.method(
          #isOnboardingOverviewTooltipShown,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<bool> updateOnboardingOverviewTooltipVisibility(bool? isShown) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOnboardingOverviewTooltipVisibility,
          [isShown],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  bool isEditTemplateTooltipShown() => (super.noSuchMethod(
        Invocation.method(
          #isEditTemplateTooltipShown,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<bool> updateEditTemplateTooltipVisibility(bool? isShown) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEditTemplateTooltipVisibility,
          [isShown],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<void> setLastQueryParameters(String? lastQueryParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLastQueryParameters,
          [lastQueryParameters],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  bool getAvCheckComplete() => (super.noSuchMethod(
        Invocation.method(
          #getAvCheckComplete,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<void> setAvCheckComplete({
    required bool? cameraOnByDefault,
    required bool? micOnByDefault,
    required String? defaultMic,
    required String? defaultCamera,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAvCheckComplete,
          [],
          {
            #cameraOnByDefault: cameraOnByDefault,
            #micOnByDefault: micOnByDefault,
            #defaultMic: defaultMic,
            #defaultCamera: defaultCamera,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  bool getCameraOnByDefault() => (super.noSuchMethod(
        Invocation.method(
          #getCameraOnByDefault,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool getMicOnByDefault() => (super.noSuchMethod(
        Invocation.method(
          #getMicOnByDefault,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<bool> setDefaultCameraId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setDefaultCameraId,
          [id],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<bool> setDefaultMicrophoneId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setDefaultMicrophoneId,
          [id],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);
}

/// A class which mocks [Stream].
///
/// See the documentation for Mockito's code generation for more information.
class MockStream<T> extends _i1.Mock implements _i37.Stream<T> {
  @override
  bool get isBroadcast => (super.noSuchMethod(
        Invocation.getter(#isBroadcast),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<int> get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: _i37.Future<int>.value(0),
        returnValueForMissingStub: _i37.Future<int>.value(0),
      ) as _i37.Future<int>);

  @override
  _i37.Future<bool> get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<T> get first => (super.noSuchMethod(
        Invocation.getter(#first),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#first),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#first),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#first),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#first),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<T> get last => (super.noSuchMethod(
        Invocation.getter(#last),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#last),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#last),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#last),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#last),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<T> get single => (super.noSuchMethod(
        Invocation.getter(#single),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#single),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#single),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.getter(#single),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.getter(#single),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Stream<T> asBroadcastStream({
    void Function(_i37.StreamSubscription<T>)? onListen,
    void Function(_i37.StreamSubscription<T>)? onCancel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #asBroadcastStream,
          [],
          {
            #onListen: onListen,
            #onCancel: onCancel,
          },
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.StreamSubscription<T> listen(
    void Function(T)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [onData],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_97<T>(
          this,
          Invocation.method(
            #listen,
            [onData],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
        returnValueForMissingStub: _FakeStreamSubscription_97<T>(
          this,
          Invocation.method(
            #listen,
            [onData],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i37.StreamSubscription<T>);

  @override
  _i37.Stream<T> where(bool Function(T)? test) => (super.noSuchMethod(
        Invocation.method(
          #where,
          [test],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<S> map<S>(S Function(T)? convert) => (super.noSuchMethod(
        Invocation.method(
          #map,
          [convert],
        ),
        returnValue: _i37.Stream<S>.empty(),
        returnValueForMissingStub: _i37.Stream<S>.empty(),
      ) as _i37.Stream<S>);

  @override
  _i37.Stream<E> asyncMap<E>(_i37.FutureOr<E> Function(T)? convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #asyncMap,
          [convert],
        ),
        returnValue: _i37.Stream<E>.empty(),
        returnValueForMissingStub: _i37.Stream<E>.empty(),
      ) as _i37.Stream<E>);

  @override
  _i37.Stream<E> asyncExpand<E>(_i37.Stream<E>? Function(T)? convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #asyncExpand,
          [convert],
        ),
        returnValue: _i37.Stream<E>.empty(),
        returnValueForMissingStub: _i37.Stream<E>.empty(),
      ) as _i37.Stream<E>);

  @override
  _i37.Stream<T> handleError(
    Function? onError, {
    bool Function(dynamic)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [onError],
          {#test: test},
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<S> expand<S>(Iterable<S> Function(T)? convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #expand,
          [convert],
        ),
        returnValue: _i37.Stream<S>.empty(),
        returnValueForMissingStub: _i37.Stream<S>.empty(),
      ) as _i37.Stream<S>);

  @override
  _i37.Future<dynamic> pipe(_i37.StreamConsumer<T>? streamConsumer) =>
      (super.noSuchMethod(
        Invocation.method(
          #pipe,
          [streamConsumer],
        ),
        returnValue: _i37.Future<dynamic>.value(),
        returnValueForMissingStub: _i37.Future<dynamic>.value(),
      ) as _i37.Future<dynamic>);

  @override
  _i37.Stream<S> transform<S>(
          _i37.StreamTransformer<T, S>? streamTransformer) =>
      (super.noSuchMethod(
        Invocation.method(
          #transform,
          [streamTransformer],
        ),
        returnValue: _i37.Stream<S>.empty(),
        returnValueForMissingStub: _i37.Stream<S>.empty(),
      ) as _i37.Stream<S>);

  @override
  _i37.Future<T> reduce(
          T Function(
            T,
            T,
          )? combine) =>
      (super.noSuchMethod(
        Invocation.method(
          #reduce,
          [combine],
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #reduce,
                  [combine],
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #reduce,
                [combine],
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #reduce,
                  [combine],
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #reduce,
                [combine],
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<S> fold<S>(
    S? initialValue,
    S Function(
      S,
      T,
    )? combine,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fold,
          [
            initialValue,
            combine,
          ],
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<S>(
                this,
                Invocation.method(
                  #fold,
                  [
                    initialValue,
                    combine,
                  ],
                ),
              ),
              (S v) => _i37.Future<S>.value(v),
            ) ??
            _FakeFuture_69<S>(
              this,
              Invocation.method(
                #fold,
                [
                  initialValue,
                  combine,
                ],
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<S>(
                this,
                Invocation.method(
                  #fold,
                  [
                    initialValue,
                    combine,
                  ],
                ),
              ),
              (S v) => _i37.Future<S>.value(v),
            ) ??
            _FakeFuture_69<S>(
              this,
              Invocation.method(
                #fold,
                [
                  initialValue,
                  combine,
                ],
              ),
            ),
      ) as _i37.Future<S>);

  @override
  _i37.Future<String> join([String? separator = r'']) => (super.noSuchMethod(
        Invocation.method(
          #join,
          [separator],
        ),
        returnValue: _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #join,
            [separator],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #join,
            [separator],
          ),
        )),
      ) as _i37.Future<String>);

  @override
  _i37.Future<bool> contains(Object? needle) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [needle],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<void> forEach(void Function(T)? action) => (super.noSuchMethod(
        Invocation.method(
          #forEach,
          [action],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<bool> every(bool Function(T)? test) => (super.noSuchMethod(
        Invocation.method(
          #every,
          [test],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Future<bool> any(bool Function(T)? test) => (super.noSuchMethod(
        Invocation.method(
          #any,
          [test],
        ),
        returnValue: _i37.Future<bool>.value(false),
        returnValueForMissingStub: _i37.Future<bool>.value(false),
      ) as _i37.Future<bool>);

  @override
  _i37.Stream<R> cast<R>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _i37.Stream<R>.empty(),
        returnValueForMissingStub: _i37.Stream<R>.empty(),
      ) as _i37.Stream<R>);

  @override
  _i37.Future<List<T>> toList() => (super.noSuchMethod(
        Invocation.method(
          #toList,
          [],
        ),
        returnValue: _i37.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i37.Future<List<T>>.value(<T>[]),
      ) as _i37.Future<List<T>>);

  @override
  _i37.Future<Set<T>> toSet() => (super.noSuchMethod(
        Invocation.method(
          #toSet,
          [],
        ),
        returnValue: _i37.Future<Set<T>>.value(<T>{}),
        returnValueForMissingStub: _i37.Future<Set<T>>.value(<T>{}),
      ) as _i37.Future<Set<T>>);

  @override
  _i37.Future<E> drain<E>([E? futureValue]) => (super.noSuchMethod(
        Invocation.method(
          #drain,
          [futureValue],
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<E>(
                this,
                Invocation.method(
                  #drain,
                  [futureValue],
                ),
              ),
              (E v) => _i37.Future<E>.value(v),
            ) ??
            _FakeFuture_69<E>(
              this,
              Invocation.method(
                #drain,
                [futureValue],
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<E>(
                this,
                Invocation.method(
                  #drain,
                  [futureValue],
                ),
              ),
              (E v) => _i37.Future<E>.value(v),
            ) ??
            _FakeFuture_69<E>(
              this,
              Invocation.method(
                #drain,
                [futureValue],
              ),
            ),
      ) as _i37.Future<E>);

  @override
  _i37.Stream<T> take(int? count) => (super.noSuchMethod(
        Invocation.method(
          #take,
          [count],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<T> takeWhile(bool Function(T)? test) => (super.noSuchMethod(
        Invocation.method(
          #takeWhile,
          [test],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<T> skip(int? count) => (super.noSuchMethod(
        Invocation.method(
          #skip,
          [count],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<T> skipWhile(bool Function(T)? test) => (super.noSuchMethod(
        Invocation.method(
          #skipWhile,
          [test],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Stream<T> distinct(
          [bool Function(
            T,
            T,
          )? equals]) =>
      (super.noSuchMethod(
        Invocation.method(
          #distinct,
          [equals],
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);

  @override
  _i37.Future<T> firstWhere(
    bool Function(T)? test, {
    T Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #firstWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #firstWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #firstWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #firstWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #firstWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<T> lastWhere(
    bool Function(T)? test, {
    T Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #lastWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #lastWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #lastWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #lastWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<T> singleWhere(
    bool Function(T)? test, {
    T Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #singleWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #singleWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #singleWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #singleWhere,
                  [test],
                  {#orElse: orElse},
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #singleWhere,
                [test],
                {#orElse: orElse},
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Future<T> elementAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #elementAt,
          [index],
        ),
        returnValue: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #elementAt,
                  [index],
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #elementAt,
                [index],
              ),
            ),
        returnValueForMissingStub: _i52.ifNotNull(
              _i52.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #elementAt,
                  [index],
                ),
              ),
              (T v) => _i37.Future<T>.value(v),
            ) ??
            _FakeFuture_69<T>(
              this,
              Invocation.method(
                #elementAt,
                [index],
              ),
            ),
      ) as _i37.Future<T>);

  @override
  _i37.Stream<T> timeout(
    Duration? timeLimit, {
    void Function(_i37.EventSink<T>)? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i37.Stream<T>.empty(),
        returnValueForMissingStub: _i37.Stream<T>.empty(),
      ) as _i37.Stream<T>);
}

/// A class which mocks [Template].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplate extends _i1.Mock implements _i39.Template {
  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  bool get isOfficial => (super.noSuchMethod(
        Invocation.getter(#isOfficial),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i39.TemplateStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i39.TemplateStatus.active,
        returnValueForMissingStub: _i39.TemplateStatus.active,
      ) as _i39.TemplateStatus);

  @override
  List<_i2.AgendaItem> get agendaItems => (super.noSuchMethod(
        Invocation.getter(#agendaItems),
        returnValue: <_i2.AgendaItem>[],
        returnValueForMissingStub: <_i2.AgendaItem>[],
      ) as List<_i2.AgendaItem>);

  @override
  _i39.$TemplateCopyWith<_i39.Template> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$TemplateCopyWith_98<_i39.Template>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$TemplateCopyWith_98<_i39.Template>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i39.$TemplateCopyWith<_i39.Template>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [TemplatePageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplatePageProvider extends _i1.Mock
    implements _i118.TemplatePageProvider {
  @override
  String get communityId => (super.noSuchMethod(
        Invocation.getter(#communityId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#communityId),
        ),
      ) as String);

  @override
  String get templateId => (super.noSuchMethod(
        Invocation.getter(#templateId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#templateId),
        ),
      ) as String);

  @override
  _i37.Stream<_i39.Template?> get templateStream => (super.noSuchMethod(
        Invocation.getter(#templateStream),
        returnValue: _i37.Stream<_i39.Template?>.empty(),
        returnValueForMissingStub: _i37.Stream<_i39.Template?>.empty(),
      ) as _i37.Stream<_i39.Template?>);

  @override
  _i37.Future<List<_i39.Template>> get templatesFuture => (super.noSuchMethod(
        Invocation.getter(#templatesFuture),
        returnValue: _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i39.Template>>.value(<_i39.Template>[]),
      ) as _i37.Future<List<_i39.Template>>);

  @override
  List<_i75.CommunityTag> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <_i75.CommunityTag>[],
        returnValueForMissingStub: <_i75.CommunityTag>[],
      ) as List<_i75.CommunityTag>);

  @override
  _i37.Stream<List<_i2.Event>> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _i37.Stream<List<_i2.Event>>.empty(),
        returnValueForMissingStub: _i37.Stream<List<_i2.Event>>.empty(),
      ) as _i37.Stream<List<_i2.Event>>);

  @override
  bool get hasUpcomingEvents => (super.noSuchMethod(
        Invocation.getter(#hasUpcomingEvents),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isNewPrerequisite => (super.noSuchMethod(
        Invocation.getter(#isNewPrerequisite),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isHelpExpanded => (super.noSuchMethod(
        Invocation.getter(#isHelpExpanded),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isNewPrerequisite(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isNewPrerequisite,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isHelpExpanded(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isHelpExpanded,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserAdminDetailsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAdminDetailsProvider extends _i1.Mock
    implements _i119.UserAdminDetailsProvider {
  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i37.Future<_i17.UserAdminDetails?> getInfoFuture({
    String? communityId,
    String? eventPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInfoFuture,
          [],
          {
            #communityId: communityId,
            #eventPath: eventPath,
          },
        ),
        returnValue: _i37.Future<_i17.UserAdminDetails?>.value(),
        returnValueForMissingStub: _i37.Future<_i17.UserAdminDetails?>.value(),
      ) as _i37.Future<_i17.UserAdminDetails?>);

  @override
  void reload() => super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i110.UserService {
  @override
  _i37.Stream<String> get currentUserChanges => (super.noSuchMethod(
        Invocation.getter(#currentUserChanges),
        returnValue: _i37.Stream<String>.empty(),
        returnValueForMissingStub: _i37.Stream<String>.empty(),
      ) as _i37.Stream<String>);

  @override
  _i35.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_99(
          this,
          Invocation.getter(#firebaseAuth),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_99(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i35.FirebaseAuth);

  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i110.SignInState get signInState => (super.noSuchMethod(
        Invocation.getter(#signInState),
        returnValue: _i110.SignInState.loading,
        returnValueForMissingStub: _i110.SignInState.loading,
      ) as _i110.SignInState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void verifyEmail() => super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i50.PublicUserInfo getDefaultPublicUserInfo({String? displayName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultPublicUserInfo,
          [],
          {#displayName: displayName},
        ),
        returnValue: _FakePublicUserInfo_100(
          this,
          Invocation.method(
            #getDefaultPublicUserInfo,
            [],
            {#displayName: displayName},
          ),
        ),
        returnValueForMissingStub: _FakePublicUserInfo_100(
          this,
          Invocation.method(
            #getDefaultPublicUserInfo,
            [],
            {#displayName: displayName},
          ),
        ),
      ) as _i50.PublicUserInfo);

  @override
  _i51.CommunityUserSettings getDefaultCommunityUserSettings(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultCommunityUserSettings,
          [],
          {#communityId: communityId},
        ),
        returnValue: _FakeCommunityUserSettings_101(
          this,
          Invocation.method(
            #getDefaultCommunityUserSettings,
            [],
            {#communityId: communityId},
          ),
        ),
        returnValueForMissingStub: _FakeCommunityUserSettings_101(
          this,
          Invocation.method(
            #getDefaultCommunityUserSettings,
            [],
            {#communityId: communityId},
          ),
        ),
      ) as _i51.CommunityUserSettings);

  @override
  _i37.Future<void> updateCommunityUserSettings(
          _i51.CommunityUserSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommunityUserSettings,
          [settings],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> createCurrentUserInfoIfNotExists({String? displayName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCurrentUserInfoIfNotExists,
          [],
          {#displayName: displayName},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateCurrentUserInfo(
    _i50.PublicUserInfo? newUserInfo,
    Iterable<String>? keys,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCurrentUserInfo,
          [
            newUserInfo,
            keys,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i35.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> signInWithEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> registerWithEmail({
    required String? displayName,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmail,
          [],
          {
            #displayName: displayName,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> resetPassword({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {#email: email},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<List<_i77.MemberDetails>> getMemberDetails({
    required List<String>? membersList,
    required String? communityId,
    String? eventPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemberDetails,
          [],
          {
            #membersList: membersList,
            #communityId: communityId,
            #eventPath: eventPath,
          },
        ),
        returnValue:
            _i37.Future<List<_i77.MemberDetails>>.value(<_i77.MemberDetails>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i77.MemberDetails>>.value(<_i77.MemberDetails>[]),
      ) as _i37.Future<List<_i77.MemberDetails>>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WriteBatch].
///
/// See the documentation for Mockito's code generation for more information.
class MockWriteBatch extends _i1.Mock implements _i22.WriteBatch {
  @override
  _i37.Future<void> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  void delete(_i22.DocumentReference<Object?>? document) => super.noSuchMethod(
        Invocation.method(
          #delete,
          [document],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void set<T>(
    _i22.DocumentReference<T>? document,
    T? data, [
    _i36.SetOptions? options,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #set,
          [
            document,
            data,
            options,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(
    _i22.DocumentReference<Object?>? document,
    Map<String, dynamic>? data,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            document,
            data,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [XFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockXFile extends _i1.Mock implements _i40.XFile {
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i52.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i52.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i37.Future<void> saveTo(String? path) => (super.noSuchMethod(
        Invocation.method(
          #saveTo,
          [path],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<int> length() => (super.noSuchMethod(
        Invocation.method(
          #length,
          [],
        ),
        returnValue: _i37.Future<int>.value(0),
        returnValueForMissingStub: _i37.Future<int>.value(0),
      ) as _i37.Future<int>);

  @override
  _i37.Future<String> readAsString(
          {_i120.Encoding? encoding = const _i120.Utf8Codec()}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAsString,
          [],
          {#encoding: encoding},
        ),
        returnValue: _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #readAsString,
            [],
            {#encoding: encoding},
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<String>.value(_i52.dummyValue<String>(
          this,
          Invocation.method(
            #readAsString,
            [],
            {#encoding: encoding},
          ),
        )),
      ) as _i37.Future<String>);

  @override
  _i37.Future<_i89.Uint8List> readAsBytes() => (super.noSuchMethod(
        Invocation.method(
          #readAsBytes,
          [],
        ),
        returnValue: _i37.Future<_i89.Uint8List>.value(_i89.Uint8List(0)),
        returnValueForMissingStub:
            _i37.Future<_i89.Uint8List>.value(_i89.Uint8List(0)),
      ) as _i37.Future<_i89.Uint8List>);

  @override
  _i37.Stream<_i89.Uint8List> openRead([
    int? start,
    int? end,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #openRead,
          [
            start,
            end,
          ],
        ),
        returnValue: _i37.Stream<_i89.Uint8List>.empty(),
        returnValueForMissingStub: _i37.Stream<_i89.Uint8List>.empty(),
      ) as _i37.Stream<_i89.Uint8List>);

  @override
  _i37.Future<DateTime> lastModified() => (super.noSuchMethod(
        Invocation.method(
          #lastModified,
          [],
        ),
        returnValue: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.method(
            #lastModified,
            [],
          ),
        )),
        returnValueForMissingStub: _i37.Future<DateTime>.value(_FakeDateTime_18(
          this,
          Invocation.method(
            #lastModified,
            [],
          ),
        )),
      ) as _i37.Future<DateTime>);
}

/// A class which mocks [FunctionMock].
///
/// See the documentation for Mockito's code generation for more information.
class MockFunction extends _i1.Mock implements _i121.FunctionMock {
  @override
  void call() => super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void call1(dynamic param) => super.noSuchMethod(
        Invocation.method(
          #call1,
          [param],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserServiceNullable extends _i1.Mock implements _i110.UserService {
  @override
  _i37.Stream<String> get currentUserChanges => (super.noSuchMethod(
        Invocation.getter(#currentUserChanges),
        returnValue: _i37.Stream<String>.empty(),
        returnValueForMissingStub: _i37.Stream<String>.empty(),
      ) as _i37.Stream<String>);

  @override
  _i35.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_99(
          this,
          Invocation.getter(#firebaseAuth),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_99(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i35.FirebaseAuth);

  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i110.SignInState get signInState => (super.noSuchMethod(
        Invocation.getter(#signInState),
        returnValue: _i110.SignInState.loading,
        returnValueForMissingStub: _i110.SignInState.loading,
      ) as _i110.SignInState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void verifyEmail() => super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i50.PublicUserInfo getDefaultPublicUserInfo({String? displayName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultPublicUserInfo,
          [],
          {#displayName: displayName},
        ),
        returnValue: _FakePublicUserInfo_100(
          this,
          Invocation.method(
            #getDefaultPublicUserInfo,
            [],
            {#displayName: displayName},
          ),
        ),
        returnValueForMissingStub: _FakePublicUserInfo_100(
          this,
          Invocation.method(
            #getDefaultPublicUserInfo,
            [],
            {#displayName: displayName},
          ),
        ),
      ) as _i50.PublicUserInfo);

  @override
  _i51.CommunityUserSettings getDefaultCommunityUserSettings(
          {required String? communityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultCommunityUserSettings,
          [],
          {#communityId: communityId},
        ),
        returnValue: _FakeCommunityUserSettings_101(
          this,
          Invocation.method(
            #getDefaultCommunityUserSettings,
            [],
            {#communityId: communityId},
          ),
        ),
        returnValueForMissingStub: _FakeCommunityUserSettings_101(
          this,
          Invocation.method(
            #getDefaultCommunityUserSettings,
            [],
            {#communityId: communityId},
          ),
        ),
      ) as _i51.CommunityUserSettings);

  @override
  _i37.Future<void> updateCommunityUserSettings(
          _i51.CommunityUserSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommunityUserSettings,
          [settings],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> createCurrentUserInfoIfNotExists({String? displayName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCurrentUserInfoIfNotExists,
          [],
          {#displayName: displayName},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> updateCurrentUserInfo(
    _i50.PublicUserInfo? newUserInfo,
    Iterable<String>? keys,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCurrentUserInfo,
          [
            newUserInfo,
            keys,
          ],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<_i35.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i37.Future<_i35.UserCredential>.value(_FakeUserCredential_64(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i37.Future<_i35.UserCredential>);

  @override
  _i37.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> signInWithEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> registerWithEmail({
    required String? displayName,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmail,
          [],
          {
            #displayName: displayName,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<void> resetPassword({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {#email: email},
        ),
        returnValue: _i37.Future<void>.value(),
        returnValueForMissingStub: _i37.Future<void>.value(),
      ) as _i37.Future<void>);

  @override
  _i37.Future<List<_i77.MemberDetails>> getMemberDetails({
    required List<String>? membersList,
    required String? communityId,
    String? eventPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemberDetails,
          [],
          {
            #membersList: membersList,
            #communityId: communityId,
            #eventPath: eventPath,
          },
        ),
        returnValue:
            _i37.Future<List<_i77.MemberDetails>>.value(<_i77.MemberDetails>[]),
        returnValueForMissingStub:
            _i37.Future<List<_i77.MemberDetails>>.value(<_i77.MemberDetails>[]),
      ) as _i37.Future<List<_i77.MemberDetails>>);

  @override
  void addListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i41.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
