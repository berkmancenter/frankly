name: Firebase Test
on: 
  pull_request:
    branches:
      - main
 
jobs: 
  build: 
    name: Build & Unit Test
    runs-on: ubuntu-latest
    defaults:
        run: 
          working-directory: client/functions
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            functions:
              - 'client/functions/**'
              - 'matching/lib/**'
            firestore:
              - 'client/firestore/**'

      - name: Setup Node
        if:  steps.changes.outputs.functions == 'true' || steps.changes.outputs.firestore == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
            
      - name: Install NPM Dependencies
        if:  steps.changes.outputs.functions == 'true' || steps.changes.outputs.firestore == 'true'
        run: npm ci
      
      - name: Set Up Flutter
        if:  steps.changes.outputs.functions == 'true'
        uses: subosito/flutter-action@v2
        with:
            flutter-version: "3.22.2" # could read version from pubspec file, but would need to be exact
            channel: "stable" 
            cache: true
            cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
            cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
            pub-cache-key: "flutter-pub-:os:-:channel:-:version:-:arch:-:hash:"
            pub-cache-path: '/home/runner/.pub-cache' #hardcoded not ideal, but no way to reference $HOME 
            
            
      - name: Install Dart Dependencies
        if:  steps.changes.outputs.functions == 'true'
        run: flutter pub get
            
      - name: Build Functions
        if:  steps.changes.outputs.functions == 'true'
        run: dart run build_runner build --output=build

      - name: Cache Firebase Emulators
        if:  steps.changes.outputs.firestore == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-
        
      - name: Install Firebase Tools
        if:  steps.changes.outputs.firestore == 'true' || steps.changes.outputs.functions == 'true'
        run: npm install -g firebase-tools

      - name: Test Rules
        if:  steps.changes.outputs.firestore == 'true' 
        run: firebase emulators:exec --only firestore --project fake-project-id 'npm run test-firestore-rules'

      - name: Test Functions
        if:  steps.changes.outputs.functions == 'true' 
        run: firebase emulators:exec --only firestore --project fake-project-id 'npm run test-functions'
      
      
